

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Aug 06 12:22:08 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1
    46                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    49                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    51   000000                     
    52                           ; Generated 12/10/2023 GMT
    53                           ; 
    54                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC18F46K20 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86   000000                     
    87                           	psect	idataCOMRAM
    88   001BFC                     __pidataCOMRAM:
    89                           	callstack 0
    90                           
    91                           ;initializer for _tris_registers
    92   001BFC  92                 	db	146
    93   001BFD  0F                 	db	15
    94   001BFE  93                 	db	147
    95   001BFF  0F                 	db	15
    96   001C00  94                 	db	148
    97   001C01  0F                 	db	15
    98   001C02  95                 	db	149
    99   001C03  0F                 	db	15
   100   001C04  96                 	db	150
   101   001C05  0F                 	db	15
   102                           
   103                           ;initializer for _lat_registers
   104   001C06  89                 	db	137
   105   001C07  0F                 	db	15
   106   001C08  8A                 	db	138
   107   001C09  0F                 	db	15
   108   001C0A  8B                 	db	139
   109   001C0B  0F                 	db	15
   110   001C0C  8C                 	db	140
   111   001C0D  0F                 	db	15
   112   001C0E  8D                 	db	141
   113   001C0F  0F                 	db	15
   114                           
   115                           ;initializer for _int0_obj
   116   001C10  48                 	db	low _INT0_App_ISR
   117   001C11  1B                 	db	high _INT0_App_ISR
   118   001C12  41                 	db	65
   119   001C13  01                 	db	1
   120   001C14  00                 	db	0
   121   001C15  01                 	db	1
   122                           
   123                           ;initializer for _led3
   124   001C16  22                 	db	34
   125                           
   126                           ;initializer for _led2
   127   001C17  12                 	db	18
   128                           
   129                           ;initializer for _led1
   130   001C18  02                 	db	2
   131                           
   132                           	psect	idataBANK0
   133   001C19                     __pidataBANK0:
   134                           	callstack 0
   135                           
   136                           ;initializer for _port_registers
   137   001C19  80                 	db	128
   138   001C1A  0F                 	db	15
   139   001C1B  81                 	db	129
   140   001C1C  0F                 	db	15
   141   001C1D  82                 	db	130
   142   001C1E  0F                 	db	15
   143   001C1F  83                 	db	131
   144   001C20  0F                 	db	15
   145   001C21  84                 	db	132
   146   001C22  0F                 	db	15
   147                           
   148                           ;initializer for _int2_obj
   149   001C23  72                 	db	low _INT2_App_ISR
   150   001C24  1B                 	db	high _INT2_App_ISR
   151   001C25  51                 	db	81
   152   001C26  01                 	db	1
   153   001C27  02                 	db	2
   154   001C28  01                 	db	1
   155                           
   156                           ;initializer for _int1_obj
   157   001C29  1E                 	db	low _INT1_App_ISR
   158   001C2A  1B                 	db	high _INT1_App_ISR
   159   001C2B  49                 	db	73
   160   001C2C  01                 	db	1
   161   001C2D  01                 	db	1
   162   001C2E  00                 	db	0
   163   000000                     _INTCON2bits	set	4081
   164   000000                     _PORTA	set	3968
   165   000000                     _LATA	set	3977
   166   000000                     _TRISA	set	3986
   167   000000                     _LATE	set	3981
   168   000000                     _LATD	set	3980
   169   000000                     _LATC	set	3979
   170   000000                     _LATB	set	3978
   171   000000                     _RCONbits	set	4048
   172   000000                     _TRISE	set	3990
   173   000000                     _TRISD	set	3989
   174   000000                     _TRISC	set	3988
   175   000000                     _TRISB	set	3987
   176   000000                     _PORTE	set	3972
   177   000000                     _PORTD	set	3971
   178   000000                     _PORTC	set	3970
   179   000000                     _PORTB	set	3969
   180   000000                     _INTCON3bits	set	4080
   181   000000                     _INTCONbits	set	4082
   182                           
   183                           ; #config settings
   184                           
   185                           	psect	cinit
   186   00193A                     __pcinit:
   187                           	callstack 0
   188   00193A                     start_initialization:
   189                           	callstack 0
   190   00193A                     __initialization:
   191                           	callstack 0
   192                           
   193                           ; Initialize objects allocated to BANK0 (22 bytes)
   194                           ; load TBLPTR registers with __pidataBANK0
   195   00193A  0E19               	movlw	low __pidataBANK0
   196   00193C  6EF6               	movwf	tblptrl,c
   197   00193E  0E1C               	movlw	high __pidataBANK0
   198   001940  6EF7               	movwf	tblptrh,c
   199   001942  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   200   001944  6EF8               	movwf	tblptru,c
   201   001946  EE00  F060         	lfsr	0,__pdataBANK0
   202   00194A  EE10 F016          	lfsr	1,22
   203   00194E                     copy_data0:
   204   00194E  0009               	tblrd		*+
   205   001950  CFF5 FFEE          	movff	tablat,postinc0
   206   001954  50E5               	movf	postdec1,w,c
   207   001956  50E1               	movf	fsr1l,w,c
   208   001958  E1FA               	bnz	copy_data0
   209                           
   210                           ; Initialize objects allocated to COMRAM (29 bytes)
   211                           ; load TBLPTR registers with __pidataCOMRAM
   212   00195A  0EFC               	movlw	low __pidataCOMRAM
   213   00195C  6EF6               	movwf	tblptrl,c
   214   00195E  0E1B               	movlw	high __pidataCOMRAM
   215   001960  6EF7               	movwf	tblptrh,c
   216   001962  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   217   001964  6EF8               	movwf	tblptru,c
   218   001966  EE00  F024         	lfsr	0,__pdataCOMRAM
   219   00196A  EE10 F01D          	lfsr	1,29
   220   00196E                     copy_data1:
   221   00196E  0009               	tblrd		*+
   222   001970  CFF5 FFEE          	movff	tablat,postinc0
   223   001974  50E5               	movf	postdec1,w,c
   224   001976  50E1               	movf	fsr1l,w,c
   225   001978  E1FA               	bnz	copy_data1
   226                           
   227                           ; Clear objects allocated to COMRAM (10 bytes)
   228   00197A  EE00  F041         	lfsr	0,__pbssCOMRAM
   229   00197E  0E0A               	movlw	10
   230   001980                     clear_0:
   231   001980  6AEE               	clrf	postinc0,c
   232   001982  06E8               	decf	wreg,f,c
   233   001984  E1FD               	bnz	clear_0
   234   001986                     end_of_initialization:
   235                           	callstack 0
   236   001986                     __end_of__initialization:
   237                           	callstack 0
   238   001986  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   239   001988  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   240   00198A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   241   00198C  6EF8               	movwf	tblptru,c
   242   00198E  0100               	movlb	0
   243   001990  EF01  F00C         	goto	_main	;jump to C main() function
   244                           
   245                           	psect	bssCOMRAM
   246   000041                     __pbssCOMRAM:
   247                           	callstack 0
   248   000041                     _INT2_INTERRUPT_HANDLER:
   249                           	callstack 0
   250   000041                     	ds	2
   251   000043                     _INT1_INTERRUPT_HANDLER:
   252                           	callstack 0
   253   000043                     	ds	2
   254   000045                     _INT0_INTERRUPT_HANDLER:
   255                           	callstack 0
   256   000045                     	ds	2
   257   000047                     led_toggle@F3171:
   258                           	callstack 0
   259   000047                     	ds	1
   260   000048                     led_turn_off@F3166:
   261                           	callstack 0
   262   000048                     	ds	1
   263   000049                     led_turn_on@F3161:
   264                           	callstack 0
   265   000049                     	ds	1
   266   00004A                     led_initialize@F3156:
   267                           	callstack 0
   268   00004A                     	ds	1
   269                           
   270                           	psect	dataCOMRAM
   271   000024                     __pdataCOMRAM:
   272                           	callstack 0
   273   000024                     _tris_registers:
   274                           	callstack 0
   275   000024                     	ds	10
   276   00002E                     _lat_registers:
   277                           	callstack 0
   278   00002E                     	ds	10
   279   000038                     _int0_obj:
   280                           	callstack 0
   281   000038                     	ds	6
   282   00003E                     _led3:
   283                           	callstack 0
   284   00003E                     	ds	1
   285   00003F                     _led2:
   286                           	callstack 0
   287   00003F                     	ds	1
   288   000040                     _led1:
   289                           	callstack 0
   290   000040                     	ds	1
   291                           
   292                           	psect	dataBANK0
   293   000060                     __pdataBANK0:
   294                           	callstack 0
   295   000060                     _port_registers:
   296                           	callstack 0
   297   000060                     	ds	10
   298   00006A                     _int2_obj:
   299                           	callstack 0
   300   00006A                     	ds	6
   301   000070                     _int1_obj:
   302                           	callstack 0
   303   000070                     	ds	6
   304                           
   305                           	psect	cstackBANK0
   306   000076                     __pcstackBANK0:
   307                           	callstack 0
   308   000076                     gpio_pin_direction_initialize@_pin_config_t:
   309                           	callstack 0
   310   000076                     Interrupt_INTx_Enable@int_obj:
   311                           	callstack 0
   312   000076                     Interrupt_INTx_Disable@int_obj:
   313                           	callstack 0
   314   000076                     Interrupt_INTx_Priority_Init@int_obj:
   315                           	callstack 0
   316   000076                     Interrupt_INTx_Edge_Init@int_obj:
   317                           	callstack 0
   318   000076                     Interrupt_INTx_Clear_Flag@int_obj:
   319                           	callstack 0
   320   000076                     application_init@ret:
   321                           	callstack 0
   322   000076                     INT0_Set_Interrupt_Handler@Interrupt_Handler:
   323                           	callstack 0
   324   000076                     INT1_Set_Interrupt_Handler@Interrupt_Handler:
   325                           	callstack 0
   326   000076                     INT2_Set_Interrupt_Handler@Interrupt_Handler:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x0
   330   000076                     	ds	1
   331   000077                     ??_gpio_pin_direction_initialize:
   332   000077                     ??_Interrupt_INTx_Disable:
   333   000077                     ??_Interrupt_INTx_Clear_Flag:
   334   000077                     ??_Interrupt_INTx_Edge_Init:
   335   000077                     ??_Interrupt_INTx_Priority_Init:
   336   000077                     ??_Interrupt_INTx_Enable:
   337                           
   338                           ; 1 bytes @ 0x1
   339   000077                     	ds	1
   340   000078                     INT0_Set_Interrupt_Handler@ret:
   341                           	callstack 0
   342   000078                     INT1_Set_Interrupt_Handler@ret:
   343                           	callstack 0
   344   000078                     INT2_Set_Interrupt_Handler@ret:
   345                           	callstack 0
   346                           
   347                           ; 1 bytes @ 0x2
   348   000078                     	ds	1
   349   000079                     Interrupt_INTx_Enable@ret:
   350                           	callstack 0
   351   000079                     Interrupt_INTx_Disable@ret:
   352                           	callstack 0
   353   000079                     Interrupt_INTx_Priority_Init@ret:
   354                           	callstack 0
   355   000079                     Interrupt_INTx_Edge_Init@ret:
   356                           	callstack 0
   357   000079                     Interrupt_INTx_Clear_Flag@ret:
   358                           	callstack 0
   359   000079                     Interrupt_INTx_Set_Interrupt_Handler@int_obj:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x3
   363   000079                     	ds	1
   364   00007A                     ??_Interrupt_INTx_Set_Interrupt_Handler:
   365                           
   366                           ; 1 bytes @ 0x4
   367   00007A                     	ds	2
   368   00007C                     gpio_pin_direction_initialize@ret:
   369                           	callstack 0
   370   00007C                     Interrupt_INTx_Set_Interrupt_Handler@ret:
   371                           	callstack 0
   372                           
   373                           ; 1 bytes @ 0x6
   374   00007C                     	ds	1
   375   00007D                     gpio_pin_initialize@_pin_config_t:
   376                           	callstack 0
   377                           
   378                           ; 1 bytes @ 0x7
   379   00007D                     	ds	1
   380   00007E                     ??_gpio_pin_initialize:
   381                           
   382                           ; 1 bytes @ 0x8
   383   00007E                     	ds	1
   384   00007F                     gpio_pin_initialize@ret:
   385                           	callstack 0
   386                           
   387                           ; 1 bytes @ 0x9
   388   00007F                     	ds	1
   389   000080                     led_initialize@led:
   390                           	callstack 0
   391   000080                     Interrupt_INTx_Pin_Init@int_obj:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0xA
   395   000080                     	ds	1
   396   000081                     ??_led_initialize:
   397   000081                     Interrupt_INTx_Pin_Init@ret:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0xB
   401   000081                     	ds	1
   402   000082                     led_initialize@ret:
   403                           	callstack 0
   404   000082                     Interrupt_INTx_Init@int_obj:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0xC
   408   000082                     	ds	1
   409   000083                     led_initialize@pin:
   410                           	callstack 0
   411   000083                     Interrupt_INTx_Init@ret:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0xD
   415   000083                     	ds	1
   416   000084                     main@ret:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0xE
   420   000084                     	ds	1
   421                           
   422                           	psect	cstackCOMRAM
   423   000001                     __pcstackCOMRAM:
   424                           	callstack 0
   425   000001                     i2gpio_pin_toggle_logic@_pin_config_t:
   426                           	callstack 0
   427                           
   428                           ; 1 bytes @ 0x0
   429   000001                     	ds	1
   430   000002                     ??i2_gpio_pin_toggle_logic:
   431                           
   432                           ; 1 bytes @ 0x1
   433   000002                     	ds	4
   434   000006                     i2led_toggle@led:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x5
   438   000006                     	ds	1
   439   000007                     ??i2_led_toggle:
   440                           
   441                           ; 1 bytes @ 0x6
   442   000007                     	ds	1
   443   000008                     i2led_toggle@pin:
   444                           	callstack 0
   445                           
   446                           ; 1 bytes @ 0x7
   447   000008                     	ds	1
   448   000009                     ??i2_INT0_App_ISR:
   449   000009                     ??i2_INT1_App_ISR:
   450   000009                     ??i2_INT2_App_ISR:
   451                           
   452                           ; 1 bytes @ 0x8
   453   000009                     	ds	2
   454   00000B                     ??_Interrupt_Manager_High:
   455                           
   456                           ; 1 bytes @ 0xA
   457   00000B                     	ds	6
   458   000011                     gpio_pin_toggle_logic@_pin_config_t:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x10
   462   000011                     	ds	1
   463   000012                     ??_gpio_pin_toggle_logic:
   464                           
   465                           ; 1 bytes @ 0x11
   466   000012                     	ds	4
   467   000016                     led_toggle@led:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x15
   471   000016                     	ds	1
   472   000017                     ??_led_toggle:
   473                           
   474                           ; 1 bytes @ 0x16
   475   000017                     	ds	1
   476   000018                     led_toggle@pin:
   477                           	callstack 0
   478                           
   479                           ; 1 bytes @ 0x17
   480   000018                     	ds	1
   481   000019                     ??_INT0_App_ISR:
   482   000019                     ??_INT1_App_ISR:
   483   000019                     ??_INT2_App_ISR:
   484                           
   485                           ; 1 bytes @ 0x18
   486   000019                     	ds	2
   487   00001B                     ??_Interrupt_Manager_Low:
   488                           
   489                           ; 1 bytes @ 0x1A
   490   00001B                     	ds	9
   491                           
   492 ;;
   493 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   494 ;;
   495 ;; *************** function _main *****************
   496 ;; Defined at:
   497 ;;		line 55 in file "app.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;		None
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  ret             1   14[BANK0 ] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  2  435[None  ] int 
   504 ;; Registers used:
   505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   514 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   515 ;;Total ram usage:        1 bytes
   516 ;; Hardware stack levels required when called: 14
   517 ;; This function calls:
   518 ;;		_Interrupt_INTx_Init
   519 ;;		_application_init
   520 ;;		_led_initialize
   521 ;; This function is called by:
   522 ;;		Startup code after reset
   523 ;; This function uses a non-reentrant model
   524 ;;
   525                           
   526                           	psect	text0
   527   001802                     __ptext0:
   528                           	callstack 0
   529   001802                     _main:
   530                           	callstack 17
   531   001802                     
   532                           ;app.c: 57:     Std_ReturnType ret = application_init();
   533   001802  EC18  F00E         	call	_application_init	;wreg free
   534   001806  0100               	movlb	0	; () banked
   535   001808  6F84               	movwf	main@ret& (0+255),b
   536   00180A                     
   537                           ; BSR set to: 0
   538                           ;app.c: 59:     if ((Std_ReturnType)0x01u == ret)
   539   00180A  0584               	decf	main@ret& (0+255),w,b
   540   00180C  A4D8               	btfss	status,2,c
   541   00180E  EF0B  F00C         	goto	u2061
   542   001812  EF0D  F00C         	goto	u2060
   543   001816                     u2061:
   544   001816  EF0F  F00C         	goto	l2663
   545   00181A                     u2060:
   546   00181A  EF35  F00C         	goto	l437
   547   00181E                     l2663:
   548                           
   549                           ; BSR set to: 0
   550                           ;app.c: 63:     ret |= Interrupt_INTx_Init(&int0_obj);
   551   00181E  0E38               	movlw	low _int0_obj
   552   001820  6F82               	movwf	Interrupt_INTx_Init@int_obj& (0+255),b
   553   001822  EC1C  F00B         	call	_Interrupt_INTx_Init	;wreg free
   554   001826  0100               	movlb	0	; () banked
   555   001828  1384               	iorwf	main@ret& (0+255),f,b
   556                           
   557                           ;app.c: 64:     ret |= Interrupt_INTx_Init(&int1_obj);
   558   00182A  0E70               	movlw	low _int1_obj
   559   00182C  6F82               	movwf	Interrupt_INTx_Init@int_obj& (0+255),b
   560   00182E  EC1C  F00B         	call	_Interrupt_INTx_Init	;wreg free
   561   001832  0100               	movlb	0	; () banked
   562   001834  1384               	iorwf	main@ret& (0+255),f,b
   563                           
   564                           ;app.c: 65:     ret |= Interrupt_INTx_Init(&int2_obj);
   565   001836  0E6A               	movlw	low _int2_obj
   566   001838  6F82               	movwf	Interrupt_INTx_Init@int_obj& (0+255),b
   567   00183A  EC1C  F00B         	call	_Interrupt_INTx_Init	;wreg free
   568   00183E  0100               	movlb	0	; () banked
   569   001840  1384               	iorwf	main@ret& (0+255),f,b
   570                           
   571                           ;app.c: 68:     ret |= led_initialize(&led1);
   572   001842  0E40               	movlw	low _led1
   573   001844  6F80               	movwf	led_initialize@led& (0+255),b
   574   001846  ECE1  F00A         	call	_led_initialize	;wreg free
   575   00184A  0100               	movlb	0	; () banked
   576   00184C  1384               	iorwf	main@ret& (0+255),f,b
   577                           
   578                           ;app.c: 69:     ret |= led_initialize(&led2);
   579   00184E  0E3F               	movlw	low _led2
   580   001850  6F80               	movwf	led_initialize@led& (0+255),b
   581   001852  ECE1  F00A         	call	_led_initialize	;wreg free
   582   001856  0100               	movlb	0	; () banked
   583   001858  1384               	iorwf	main@ret& (0+255),f,b
   584                           
   585                           ;app.c: 70:     ret |= led_initialize(&led3);
   586   00185A  0E3E               	movlw	low _led3
   587   00185C  6F80               	movwf	led_initialize@led& (0+255),b
   588   00185E  ECE1  F00A         	call	_led_initialize	;wreg free
   589   001862  0100               	movlb	0	; () banked
   590   001864  1384               	iorwf	main@ret& (0+255),f,b
   591   001866                     l438:
   592   001866  EF33  F00C         	goto	l438
   593   00186A                     l437:
   594                           
   595                           ; BSR set to: 0
   596   00186A  EF43  F000         	goto	start
   597   00186E                     __end_of_main:
   598                           	callstack 0
   599                           
   600 ;; *************** function _led_initialize *****************
   601 ;; Defined at:
   602 ;;		line 36 in file "ECU_Layer/led/ecu_led.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  led             1   10[BANK0 ] PTR const struct .
   605 ;;		 -> led3(1), led2(1), led1(1), 
   606 ;; Auto vars:     Size  Location     Type
   607 ;;  pin             1   13[BANK0 ] struct .
   608 ;;  ret             1   12[BANK0 ] unsigned char 
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      unsigned char 
   611 ;; Registers used:
   612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   618 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   619 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   620 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   621 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;Total ram usage:        4 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 12
   625 ;; This function calls:
   626 ;;		_gpio_pin_initialize
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text1
   633   0015C2                     __ptext1:
   634                           	callstack 0
   635   0015C2                     _led_initialize:
   636                           	callstack 18
   637   0015C2                     
   638                           ;ECU_Layer/led/ecu_led.c: 36: Std_ReturnType led_initialize(const led_t *led);ECU_Layer/
      +                          led/ecu_led.c: 37: {;ECU_Layer/led/ecu_led.c: 38:     Std_ReturnType ret = (Std_ReturnTy
      +                          pe)0x00u;
   639   0015C2  0E00               	movlw	0
   640   0015C4  0100               	movlb	0	; () banked
   641   0015C6  6F82               	movwf	led_initialize@ret& (0+255),b
   642                           
   643                           ;ECU_Layer/led/ecu_led.c: 39:     if (((void*)0) == led)
   644   0015C8  5180               	movf	led_initialize@led& (0+255),w,b
   645   0015CA  A4D8               	btfss	status,2,c
   646   0015CC  EFEA  F00A         	goto	u1991
   647   0015D0  EFEC  F00A         	goto	u1990
   648   0015D4                     u1991:
   649   0015D4  EFF0  F00A         	goto	l9
   650   0015D8                     u1990:
   651   0015D8                     
   652                           ; BSR set to: 0
   653                           ;ECU_Layer/led/ecu_led.c: 40:     {;ECU_Layer/led/ecu_led.c: 41:         ret = (Std_Retu
      +                          rnType)0x01u;
   654   0015D8  0E01               	movlw	1
   655   0015DA  6F82               	movwf	led_initialize@ret& (0+255),b
   656                           
   657                           ;ECU_Layer/led/ecu_led.c: 42:     }
   658   0015DC  EF19  F00B         	goto	l2597
   659   0015E0                     l9:
   660                           
   661                           ; BSR set to: 0
   662                           ;ECU_Layer/led/ecu_led.c: 44:     {;ECU_Layer/led/ecu_led.c: 45:         pin_config_t pi
      +                          n = {
   663   0015E0  C04A  F083         	movff	led_initialize@F3156,led_initialize@pin
   664   0015E4                     
   665                           ; BSR set to: 0
   666   0015E4  5180               	movf	led_initialize@led& (0+255),w,b
   667   0015E6  6ED9               	movwf	fsr2l,c
   668   0015E8  6ADA               	clrf	fsr2h,c
   669   0015EA  50DF               	movf	223,w,c
   670   0015EC  0B0F               	andlw	15
   671   0015EE  6F81               	movwf	??_led_initialize& (0+255),b
   672   0015F0  5183               	movf	led_initialize@pin& (0+255),w,b
   673   0015F2  1981               	xorwf	??_led_initialize& (0+255),w,b
   674   0015F4  0BF8               	andlw	-8
   675   0015F6  1981               	xorwf	??_led_initialize& (0+255),w,b
   676   0015F8  6F83               	movwf	led_initialize@pin& (0+255),b
   677   0015FA  5180               	movf	led_initialize@led& (0+255),w,b
   678   0015FC  6ED9               	movwf	fsr2l,c
   679   0015FE  6ADA               	clrf	fsr2h,c
   680   001600  38DF               	swapf	223,w,c
   681   001602  0B07               	andlw	7
   682   001604  6F81               	movwf	??_led_initialize& (0+255),b
   683   001606  4781               	rlncf	??_led_initialize& (0+255),f,b
   684   001608  4781               	rlncf	??_led_initialize& (0+255),f,b
   685   00160A  4781               	rlncf	??_led_initialize& (0+255),f,b
   686   00160C  5183               	movf	led_initialize@pin& (0+255),w,b
   687   00160E  1981               	xorwf	??_led_initialize& (0+255),w,b
   688   001610  0BC7               	andlw	-57
   689   001612  1981               	xorwf	??_led_initialize& (0+255),w,b
   690   001614  6F83               	movwf	led_initialize@pin& (0+255),b
   691   001616                     
   692                           ; BSR set to: 0
   693   001616  9D83               	bcf	led_initialize@pin& (0+255),6,b
   694   001618                     
   695                           ; BSR set to: 0
   696   001618  5180               	movf	led_initialize@led& (0+255),w,b
   697   00161A  6ED9               	movwf	fsr2l,c
   698   00161C  6ADA               	clrf	fsr2h,c
   699   00161E  AEDF               	btfss	indf2,7,c
   700   001620  D002               	bra	u2005
   701   001622  8F83               	bsf	led_initialize@pin& (0+255),7,b
   702   001624  D002               	bra	u2007
   703   001626                     u2005:
   704   001626  0100               	movlb	0	; () banked
   705   001628  9F83               	bcf	led_initialize@pin& (0+255),7,b
   706   00162A                     u2007:
   707   00162A                     
   708                           ; BSR set to: 0
   709                           ;ECU_Layer/led/ecu_led.c: 51:         gpio_pin_initialize(&pin);
   710   00162A  0E83               	movlw	low led_initialize@pin
   711   00162C  6F7D               	movwf	gpio_pin_initialize@_pin_config_t& (0+255),b
   712   00162E  ECCA  F00C         	call	_gpio_pin_initialize	;wreg free
   713   001632                     l2597:
   714                           
   715                           ;ECU_Layer/led/ecu_led.c: 53:     return (ret);
   716   001632  0100               	movlb	0	; () banked
   717   001634  5182               	movf	led_initialize@ret& (0+255),w,b
   718   001636                     
   719                           ; BSR set to: 0
   720   001636  0012               	return		;funcret
   721   001638                     __end_of_led_initialize:
   722                           	callstack 0
   723                           
   724 ;; *************** function _application_init *****************
   725 ;; Defined at:
   726 ;;		line 76 in file "app.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;		None
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  ret             1    0[BANK0 ] unsigned char 
   731 ;; Return value:  Size  Location     Type
   732 ;;                  1    wreg      unsigned char 
   733 ;; Registers used:
   734 ;;		wreg, status,2, cstack
   735 ;; Tracked objects:
   736 ;;		On entry : 0/0
   737 ;;		On exit  : 0/0
   738 ;;		Unchanged: 0/0
   739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;Total ram usage:        1 bytes
   745 ;; Hardware stack levels used: 1
   746 ;; Hardware stack levels required when called: 11
   747 ;; This function calls:
   748 ;;		_ecu_layer_initialize
   749 ;; This function is called by:
   750 ;;		_main
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755   001C30                     __ptext2:
   756                           	callstack 0
   757   001C30                     _application_init:
   758                           	callstack 19
   759   001C30                     
   760                           ;app.c: 79:     ret = ecu_layer_initialize();
   761   001C30  EC1E  F00E         	call	_ecu_layer_initialize	;wreg free
   762   001C34  0100               	movlb	0	; () banked
   763   001C36  6F76               	movwf	application_init@ret& (0+255),b
   764   001C38                     
   765                           ; BSR set to: 0
   766                           ;app.c: 81:     return (ret);
   767   001C38  5176               	movf	application_init@ret& (0+255),w,b
   768   001C3A                     
   769                           ; BSR set to: 0
   770   001C3A  0012               	return		;funcret
   771   001C3C                     __end_of_application_init:
   772                           	callstack 0
   773                           
   774 ;; *************** function _ecu_layer_initialize *****************
   775 ;; Defined at:
   776 ;;		line 10 in file "ECU_Layer/ecu_layer_init.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;  ret             1    0        unsigned char 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      unsigned char 
   783 ;; Registers used:
   784 ;;		wreg, status,2
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   794 ;;Total ram usage:        0 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 10
   797 ;; This function calls:
   798 ;;		Nothing
   799 ;; This function is called by:
   800 ;;		_application_init
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text3
   805   001C3C                     __ptext3:
   806                           	callstack 0
   807   001C3C                     _ecu_layer_initialize:
   808                           	callstack 19
   809   001C3C                     
   810                           ;ECU_Layer/ecu_layer_init.c: 18:     return (ret);
   811   001C3C  0E00               	movlw	0
   812   001C3E  0012               	return		;funcret
   813   001C40                     __end_of_ecu_layer_initialize:
   814                           	callstack 0
   815                           
   816 ;; *************** function _Interrupt_INTx_Init *****************
   817 ;; Defined at:
   818 ;;		line 35 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  int_obj         1   12[BANK0 ] PTR const struct .
   821 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
   822 ;; Auto vars:     Size  Location     Type
   823 ;;  ret             1   13[BANK0 ] unsigned char 
   824 ;; Return value:  Size  Location     Type
   825 ;;                  1    wreg      unsigned char 
   826 ;; Registers used:
   827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   828 ;; Tracked objects:
   829 ;;		On entry : 0/0
   830 ;;		On exit  : 0/0
   831 ;;		Unchanged: 0/0
   832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   833 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   834 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   836 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   837 ;;Total ram usage:        2 bytes
   838 ;; Hardware stack levels used: 1
   839 ;; Hardware stack levels required when called: 13
   840 ;; This function calls:
   841 ;;		_Interrupt_INTx_Clear_Flag
   842 ;;		_Interrupt_INTx_Disable
   843 ;;		_Interrupt_INTx_Edge_Init
   844 ;;		_Interrupt_INTx_Enable
   845 ;;		_Interrupt_INTx_Pin_Init
   846 ;;		_Interrupt_INTx_Priority_Init
   847 ;;		_Interrupt_INTx_Set_Interrupt_Handler
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text4
   854   001638                     __ptext4:
   855                           	callstack 0
   856   001638                     _Interrupt_INTx_Init:
   857                           	callstack 17
   858   001638                     
   859                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 35: Std_ReturnType Interrupt_INTx_Init(
      +                          const interrupt_INTx_t *int_obj);MCAL_Layer/Interrupt/mcal_external_interrupt.c: 36: {;M
      +                          CAL_Layer/Interrupt/mcal_external_interrupt.c: 37:     Std_ReturnType ret = (Std_ReturnT
      +                          ype)0x00u;
   860   001638  0E00               	movlw	0
   861   00163A  0100               	movlb	0	; () banked
   862   00163C  6F83               	movwf	Interrupt_INTx_Init@ret& (0+255),b
   863                           
   864                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 39:     if (int_obj == ((void*)0))
   865   00163E  5182               	movf	Interrupt_INTx_Init@int_obj& (0+255),w,b
   866   001640  A4D8               	btfss	status,2,c
   867   001642  EF25  F00B         	goto	u2011
   868   001646  EF27  F00B         	goto	u2010
   869   00164A                     u2011:
   870   00164A  EF2B  F00B         	goto	l2605
   871   00164E                     u2010:
   872   00164E                     
   873                           ; BSR set to: 0
   874                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 40:     {;MCAL_Layer/Interrupt/mcal_ext
      +                          ernal_interrupt.c: 41:         ret = (Std_ReturnType)0x01u;
   875   00164E  0E01               	movlw	1
   876   001650  6F83               	movwf	Interrupt_INTx_Init@ret& (0+255),b
   877                           
   878                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 42:     }
   879   001652  EF55  F00B         	goto	l2613
   880   001656                     l2605:
   881                           
   882                           ; BSR set to: 0
   883                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 44:     {;MCAL_Layer/Interrupt/mcal_ext
      +                          ernal_interrupt.c: 46:         ret |= Interrupt_INTx_Disable(int_obj);
   884   001656  C082  F076         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Disable@int_obj
   885   00165A  EC91  F00B         	call	_Interrupt_INTx_Disable	;wreg free
   886   00165E  0100               	movlb	0	; () banked
   887   001660  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   888                           
   889                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 48:         ret |= Interrupt_INTx_Clear
      +                          _Flag(int_obj);
   890   001662  C082  F076         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Clear_Flag@int_obj
   891   001666  ECC9  F00B         	call	_Interrupt_INTx_Clear_Flag	;wreg free
   892   00166A  0100               	movlb	0	; () banked
   893   00166C  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   894                           
   895                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 50:         ret |= Interrupt_INTx_Edge_
      +                          Init(int_obj);
   896   00166E  C082  F076         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Edge_Init@int_obj
   897   001672  EC01  F008         	call	_Interrupt_INTx_Edge_Init	;wreg free
   898   001676  0100               	movlb	0	; () banked
   899   001678  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   900                           
   901                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 53:         ret |= Interrupt_INTx_Prior
      +                          ity_Init(int_obj);
   902   00167A  C082  F076         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Priority_Init@int_obj
   903   00167E  EC98  F009         	call	_Interrupt_INTx_Priority_Init	;wreg free
   904   001682  0100               	movlb	0	; () banked
   905   001684  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   906   001686                     
   907                           ; BSR set to: 0
   908                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 56:         ret |= Interrupt_INTx_Pin_I
      +                          nit(int_obj);
   909   001686  C082  F080         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Pin_Init@int_obj
   910   00168A  EC79  F00D         	call	_Interrupt_INTx_Pin_Init	;wreg free
   911   00168E  0100               	movlb	0	; () banked
   912   001690  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   913   001692                     
   914                           ; BSR set to: 0
   915                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 58:         ret |= Interrupt_INTx_Set_I
      +                          nterrupt_Handler(int_obj);
   916   001692  C082  F079         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Set_Interrupt_Handler@int_obj
   917   001696  EC0B  F00A         	call	_Interrupt_INTx_Set_Interrupt_Handler	;wreg free
   918   00169A  0100               	movlb	0	; () banked
   919   00169C  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   920   00169E                     
   921                           ; BSR set to: 0
   922                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 60:         ret |= Interrupt_INTx_Enabl
      +                          e(int_obj);
   923   00169E  C082  F076         	movff	Interrupt_INTx_Init@int_obj,Interrupt_INTx_Enable@int_obj
   924   0016A2  EC1C  F009         	call	_Interrupt_INTx_Enable	;wreg free
   925   0016A6  0100               	movlb	0	; () banked
   926   0016A8  1383               	iorwf	Interrupt_INTx_Init@ret& (0+255),f,b
   927   0016AA                     l2613:
   928                           
   929                           ; BSR set to: 0
   930                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 62:     return (ret);
   931   0016AA  5183               	movf	Interrupt_INTx_Init@ret& (0+255),w,b
   932   0016AC                     
   933                           ; BSR set to: 0
   934   0016AC  0012               	return		;funcret
   935   0016AE                     __end_of_Interrupt_INTx_Init:
   936                           	callstack 0
   937                           
   938 ;; *************** function _Interrupt_INTx_Set_Interrupt_Handler *****************
   939 ;; Defined at:
   940 ;;		line 565 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  int_obj         1    3[BANK0 ] PTR const struct .
   943 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  ret             1    6[BANK0 ] unsigned char 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      unsigned char 
   948 ;; Registers used:
   949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   955 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   956 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   957 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   958 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   959 ;;Total ram usage:        4 bytes
   960 ;; Hardware stack levels used: 1
   961 ;; Hardware stack levels required when called: 11
   962 ;; This function calls:
   963 ;;		_INT0_Set_Interrupt_Handler
   964 ;;		_INT1_Set_Interrupt_Handler
   965 ;;		_INT2_Set_Interrupt_Handler
   966 ;; This function is called by:
   967 ;;		_Interrupt_INTx_Init
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text5
   972   001416                     __ptext5:
   973                           	callstack 0
   974   001416                     _Interrupt_INTx_Set_Interrupt_Handler:
   975                           	callstack 18
   976   001416                     
   977                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 569:     if (((void*)0) == int_obj)
   978   001416  0100               	movlb	0	; () banked
   979   001418  5179               	movf	Interrupt_INTx_Set_Interrupt_Handler@int_obj& (0+255),w,b
   980   00141A  A4D8               	btfss	status,2,c
   981   00141C  EF12  F00A         	goto	u1931
   982   001420  EF14  F00A         	goto	u1930
   983   001424                     u1931:
   984   001424  EF3F  F00A         	goto	l2535
   985   001428                     u1930:
   986   001428                     l2523:
   987                           
   988                           ; BSR set to: 0
   989                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 570:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 571:         ret = (Std_ReturnType)0x01u;
   990   001428  0E01               	movlw	1
   991   00142A  6F7C               	movwf	Interrupt_INTx_Set_Interrupt_Handler@ret& (0+255),b
   992                           
   993                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 572:     }
   994   00142C  EF5D  F00A         	goto	l2537
   995   001430                     l2525:
   996                           
   997                           ; BSR set to: 0
   998                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 578:                 ret = INT0_Set_Int
      +                          errupt_Handler(int_obj->EXT_interrupt_handler);
   999   001430  5179               	movf	Interrupt_INTx_Set_Interrupt_Handler@int_obj& (0+255),w,b
  1000   001432  6ED9               	movwf	fsr2l,c
  1001   001434  6ADA               	clrf	fsr2h,c
  1002   001436  CFDE F076          	movff	postinc2,INT0_Set_Interrupt_Handler@Interrupt_Handler
  1003   00143A  CFDD F077          	movff	postdec2,INT0_Set_Interrupt_Handler@Interrupt_Handler+1
  1004   00143E  EC63  F00D         	call	_INT0_Set_Interrupt_Handler	;wreg free
  1005   001442  0100               	movlb	0	; () banked
  1006   001444  6F7C               	movwf	Interrupt_INTx_Set_Interrupt_Handler@ret& (0+255),b
  1007                           
  1008                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 579:                 break;
  1009   001446  EF5D  F00A         	goto	l2537
  1010   00144A                     l2527:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 581:                 ret = INT1_Set_Int
      +                          errupt_Handler(int_obj->EXT_interrupt_handler);
  1014   00144A  5179               	movf	Interrupt_INTx_Set_Interrupt_Handler@int_obj& (0+255),w,b
  1015   00144C  6ED9               	movwf	fsr2l,c
  1016   00144E  6ADA               	clrf	fsr2h,c
  1017   001450  CFDE F076          	movff	postinc2,INT1_Set_Interrupt_Handler@Interrupt_Handler
  1018   001454  CFDD F077          	movff	postdec2,INT1_Set_Interrupt_Handler@Interrupt_Handler+1
  1019   001458  EC4D  F00D         	call	_INT1_Set_Interrupt_Handler	;wreg free
  1020   00145C  0100               	movlb	0	; () banked
  1021   00145E  6F7C               	movwf	Interrupt_INTx_Set_Interrupt_Handler@ret& (0+255),b
  1022                           
  1023                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 582:                 break;
  1024   001460  EF5D  F00A         	goto	l2537
  1025   001464                     l2529:
  1026                           
  1027                           ; BSR set to: 0
  1028                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 584:                 ret = INT2_Set_Int
      +                          errupt_Handler(int_obj->EXT_interrupt_handler);
  1029   001464  5179               	movf	Interrupt_INTx_Set_Interrupt_Handler@int_obj& (0+255),w,b
  1030   001466  6ED9               	movwf	fsr2l,c
  1031   001468  6ADA               	clrf	fsr2h,c
  1032   00146A  CFDE F076          	movff	postinc2,INT2_Set_Interrupt_Handler@Interrupt_Handler
  1033   00146E  CFDD F077          	movff	postdec2,INT2_Set_Interrupt_Handler@Interrupt_Handler+1
  1034   001472  EC37  F00D         	call	_INT2_Set_Interrupt_Handler	;wreg free
  1035   001476  0100               	movlb	0	; () banked
  1036   001478  6F7C               	movwf	Interrupt_INTx_Set_Interrupt_Handler@ret& (0+255),b
  1037                           
  1038                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 585:                 break;
  1039   00147A  EF5D  F00A         	goto	l2537
  1040   00147E                     l2535:
  1041                           
  1042                           ; BSR set to: 0
  1043   00147E  5179               	movf	Interrupt_INTx_Set_Interrupt_Handler@int_obj& (0+255),w,b
  1044   001480  6ED9               	movwf	fsr2l,c
  1045   001482  6ADA               	clrf	fsr2h,c
  1046   001484  0E04               	movlw	4
  1047   001486  26D9               	addwf	fsr2l,f,c
  1048   001488  50DF               	movf	indf2,w,c
  1049   00148A  6F7A               	movwf	??_Interrupt_INTx_Set_Interrupt_Handler& (0+255),b
  1050   00148C  6B7B               	clrf	(??_Interrupt_INTx_Set_Interrupt_Handler+1)& (0+255),b
  1051                           
  1052                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 1, Range of values is 0 to 0
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte            4     3 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059   00148E  517B               	movf	(??_Interrupt_INTx_Set_Interrupt_Handler+1)& (0+255),w,b
  1060   001490  0A00               	xorlw	0	; case 0
  1061   001492  B4D8               	btfsc	status,2,c
  1062   001494  EF4E  F00A         	goto	l2815
  1063   001498  EF14  F00A         	goto	l2523
  1064   00149C                     l2815:
  1065                           
  1066                           ; BSR set to: 0
  1067                           ; Switch size 1, requested type "simple"
  1068                           ; Number of cases is 3, Range of values is 0 to 2
  1069                           ; switch strategies available:
  1070                           ; Name         Instructions Cycles
  1071                           ; simple_byte           10     6 (average)
  1072                           ;	Chosen strategy is simple_byte
  1073   00149C  517A               	movf	??_Interrupt_INTx_Set_Interrupt_Handler& (0+255),w,b
  1074   00149E  0A00               	xorlw	0	; case 0
  1075   0014A0  B4D8               	btfsc	status,2,c
  1076   0014A2  EF18  F00A         	goto	l2525
  1077   0014A6  0A01               	xorlw	1	; case 1
  1078   0014A8  B4D8               	btfsc	status,2,c
  1079   0014AA  EF25  F00A         	goto	l2527
  1080   0014AE  0A03               	xorlw	3	; case 2
  1081   0014B0  B4D8               	btfsc	status,2,c
  1082   0014B2  EF32  F00A         	goto	l2529
  1083   0014B6  EF14  F00A         	goto	l2523
  1084   0014BA                     l2537:
  1085                           
  1086                           ; BSR set to: 0
  1087                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 591:     return (ret);
  1088   0014BA  517C               	movf	Interrupt_INTx_Set_Interrupt_Handler@ret& (0+255),w,b
  1089   0014BC                     
  1090                           ; BSR set to: 0
  1091   0014BC  0012               	return		;funcret
  1092   0014BE                     __end_of_Interrupt_INTx_Set_Interrupt_Handler:
  1093                           	callstack 0
  1094                           
  1095 ;; *************** function _INT2_Set_Interrupt_Handler *****************
  1096 ;; Defined at:
  1097 ;;		line 546 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1100 ;;		 -> i2_INT2_App_ISR(1), i2_INT1_App_ISR(1), i2_INT0_App_ISR(1), INT2_App_ISR(1), 
  1101 ;;		 -> INT1_App_ISR(1), INT0_App_ISR(1), 
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  ret             1    2[BANK0 ] unsigned char 
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      unsigned char 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, status,0
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1113 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;Total ram usage:        3 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 10
  1120 ;; This function calls:
  1121 ;;		Nothing
  1122 ;; This function is called by:
  1123 ;;		_Interrupt_INTx_Set_Interrupt_Handler
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text6
  1128   001A6E                     __ptext6:
  1129                           	callstack 0
  1130   001A6E                     _INT2_Set_Interrupt_Handler:
  1131                           	callstack 18
  1132   001A6E                     
  1133                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 546: static Std_ReturnType INT2_Set_Int
      +                          errupt_Handler(void (*Interrupt_Handler) (void));MCAL_Layer/Interrupt/mcal_external_inte
      +                          rrupt.c: 547: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 548:     Std_ReturnType 
      +                          ret = (Std_ReturnType)0x00u;
  1134   001A6E  0E00               	movlw	0
  1135   001A70  0100               	movlb	0	; () banked
  1136   001A72  6F78               	movwf	INT2_Set_Interrupt_Handler@ret& (0+255),b
  1137   001A74                     
  1138                           ; BSR set to: 0
  1139                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 550:     if (((void*)0) ==Interrupt_Han
      +                          dler)
  1140   001A74  5176               	movf	INT2_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1141   001A76  1177               	iorwf	(INT2_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1142   001A78  A4D8               	btfss	status,2,c
  1143   001A7A  EF41  F00D         	goto	u1771
  1144   001A7E  EF43  F00D         	goto	u1770
  1145   001A82                     u1771:
  1146   001A82  EF47  F00D         	goto	l2371
  1147   001A86                     u1770:
  1148   001A86                     
  1149                           ; BSR set to: 0
  1150                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 551:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 552:         ret = (Std_ReturnType)0x01u;
  1151   001A86  0E01               	movlw	1
  1152   001A88  6F78               	movwf	INT2_Set_Interrupt_Handler@ret& (0+255),b
  1153                           
  1154                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 553:     }
  1155   001A8A  EF4B  F00D         	goto	l2373
  1156   001A8E                     l2371:
  1157                           
  1158                           ; BSR set to: 0
  1159                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 555:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 556:         INT2_INTERRUPT_HANDLER = Interrupt_Handler;
  1160   001A8E  C076  F041         	movff	INT2_Set_Interrupt_Handler@Interrupt_Handler,_INT2_INTERRUPT_HANDLER
  1161   001A92  C077  F042         	movff	INT2_Set_Interrupt_Handler@Interrupt_Handler+1,_INT2_INTERRUPT_HANDLER+1
  1162   001A96                     l2373:
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 558:     return (ret);
  1166   001A96  5178               	movf	INT2_Set_Interrupt_Handler@ret& (0+255),w,b
  1167   001A98                     
  1168                           ; BSR set to: 0
  1169   001A98  0012               	return		;funcret
  1170   001A9A                     __end_of_INT2_Set_Interrupt_Handler:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _INT1_Set_Interrupt_Handler *****************
  1174 ;; Defined at:
  1175 ;;		line 527 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1178 ;;		 -> i2_INT2_App_ISR(1), i2_INT1_App_ISR(1), i2_INT0_App_ISR(1), INT2_App_ISR(1), 
  1179 ;;		 -> INT1_App_ISR(1), INT0_App_ISR(1), 
  1180 ;; Auto vars:     Size  Location     Type
  1181 ;;  ret             1    2[BANK0 ] unsigned char 
  1182 ;; Return value:  Size  Location     Type
  1183 ;;                  1    wreg      unsigned char 
  1184 ;; Registers used:
  1185 ;;		wreg, status,2, status,0
  1186 ;; Tracked objects:
  1187 ;;		On entry : 0/0
  1188 ;;		On exit  : 0/0
  1189 ;;		Unchanged: 0/0
  1190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1191 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1194 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1195 ;;Total ram usage:        3 bytes
  1196 ;; Hardware stack levels used: 1
  1197 ;; Hardware stack levels required when called: 10
  1198 ;; This function calls:
  1199 ;;		Nothing
  1200 ;; This function is called by:
  1201 ;;		_Interrupt_INTx_Set_Interrupt_Handler
  1202 ;; This function uses a non-reentrant model
  1203 ;;
  1204                           
  1205                           	psect	text7
  1206   001A9A                     __ptext7:
  1207                           	callstack 0
  1208   001A9A                     _INT1_Set_Interrupt_Handler:
  1209                           	callstack 18
  1210   001A9A                     
  1211                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 527: static Std_ReturnType INT1_Set_Int
      +                          errupt_Handler(void (*Interrupt_Handler) (void));MCAL_Layer/Interrupt/mcal_external_inte
      +                          rrupt.c: 528: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 529:     Std_ReturnType 
      +                          ret = (Std_ReturnType)0x00u;
  1212   001A9A  0E00               	movlw	0
  1213   001A9C  0100               	movlb	0	; () banked
  1214   001A9E  6F78               	movwf	INT1_Set_Interrupt_Handler@ret& (0+255),b
  1215   001AA0                     
  1216                           ; BSR set to: 0
  1217                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 531:     if (((void*)0) ==Interrupt_Han
      +                          dler)
  1218   001AA0  5176               	movf	INT1_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1219   001AA2  1177               	iorwf	(INT1_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1220   001AA4  A4D8               	btfss	status,2,c
  1221   001AA6  EF57  F00D         	goto	u1761
  1222   001AAA  EF59  F00D         	goto	u1760
  1223   001AAE                     u1761:
  1224   001AAE  EF5D  F00D         	goto	l2359
  1225   001AB2                     u1760:
  1226   001AB2                     
  1227                           ; BSR set to: 0
  1228                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 532:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 533:         ret = (Std_ReturnType)0x01u;
  1229   001AB2  0E01               	movlw	1
  1230   001AB4  6F78               	movwf	INT1_Set_Interrupt_Handler@ret& (0+255),b
  1231                           
  1232                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 534:     }
  1233   001AB6  EF61  F00D         	goto	l2361
  1234   001ABA                     l2359:
  1235                           
  1236                           ; BSR set to: 0
  1237                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 536:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 537:         INT1_INTERRUPT_HANDLER = Interrupt_Handler;
  1238   001ABA  C076  F043         	movff	INT1_Set_Interrupt_Handler@Interrupt_Handler,_INT1_INTERRUPT_HANDLER
  1239   001ABE  C077  F044         	movff	INT1_Set_Interrupt_Handler@Interrupt_Handler+1,_INT1_INTERRUPT_HANDLER+1
  1240   001AC2                     l2361:
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 539:     return (ret);
  1244   001AC2  5178               	movf	INT1_Set_Interrupt_Handler@ret& (0+255),w,b
  1245   001AC4                     
  1246                           ; BSR set to: 0
  1247   001AC4  0012               	return		;funcret
  1248   001AC6                     __end_of_INT1_Set_Interrupt_Handler:
  1249                           	callstack 0
  1250                           
  1251 ;; *************** function _INT0_Set_Interrupt_Handler *****************
  1252 ;; Defined at:
  1253 ;;		line 508 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;  Interrupt_Ha    2    0[BANK0 ] PTR FTN()void 
  1256 ;;		 -> i2_INT2_App_ISR(1), i2_INT1_App_ISR(1), i2_INT0_App_ISR(1), INT2_App_ISR(1), 
  1257 ;;		 -> INT1_App_ISR(1), INT0_App_ISR(1), 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  ret             1    2[BANK0 ] unsigned char 
  1260 ;; Return value:  Size  Location     Type
  1261 ;;                  1    wreg      unsigned char 
  1262 ;; Registers used:
  1263 ;;		wreg, status,2, status,0
  1264 ;; Tracked objects:
  1265 ;;		On entry : 0/0
  1266 ;;		On exit  : 0/0
  1267 ;;		Unchanged: 0/0
  1268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1269 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1270 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;Total ram usage:        3 bytes
  1274 ;; Hardware stack levels used: 1
  1275 ;; Hardware stack levels required when called: 10
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_Interrupt_INTx_Set_Interrupt_Handler
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text8
  1284   001AC6                     __ptext8:
  1285                           	callstack 0
  1286   001AC6                     _INT0_Set_Interrupt_Handler:
  1287                           	callstack 18
  1288   001AC6                     
  1289                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 508: static Std_ReturnType INT0_Set_Int
      +                          errupt_Handler(void (*Interrupt_Handler) (void));MCAL_Layer/Interrupt/mcal_external_inte
      +                          rrupt.c: 509: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 510:     Std_ReturnType 
      +                          ret = (Std_ReturnType)0x00u;
  1290   001AC6  0E00               	movlw	0
  1291   001AC8  0100               	movlb	0	; () banked
  1292   001ACA  6F78               	movwf	INT0_Set_Interrupt_Handler@ret& (0+255),b
  1293   001ACC                     
  1294                           ; BSR set to: 0
  1295                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 512:     if (((void*)0) ==Interrupt_Han
      +                          dler)
  1296   001ACC  5176               	movf	INT0_Set_Interrupt_Handler@Interrupt_Handler& (0+255),w,b
  1297   001ACE  1177               	iorwf	(INT0_Set_Interrupt_Handler@Interrupt_Handler+1)& (0+255),w,b
  1298   001AD0  A4D8               	btfss	status,2,c
  1299   001AD2  EF6D  F00D         	goto	u1751
  1300   001AD6  EF6F  F00D         	goto	u1750
  1301   001ADA                     u1751:
  1302   001ADA  EF73  F00D         	goto	l2347
  1303   001ADE                     u1750:
  1304   001ADE                     
  1305                           ; BSR set to: 0
  1306                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 513:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 514:         ret = (Std_ReturnType)0x01u;
  1307   001ADE  0E01               	movlw	1
  1308   001AE0  6F78               	movwf	INT0_Set_Interrupt_Handler@ret& (0+255),b
  1309                           
  1310                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 515:     }
  1311   001AE2  EF77  F00D         	goto	l2349
  1312   001AE6                     l2347:
  1313                           
  1314                           ; BSR set to: 0
  1315                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 517:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 518:         INT0_INTERRUPT_HANDLER = Interrupt_Handler;
  1316   001AE6  C076  F045         	movff	INT0_Set_Interrupt_Handler@Interrupt_Handler,_INT0_INTERRUPT_HANDLER
  1317   001AEA  C077  F046         	movff	INT0_Set_Interrupt_Handler@Interrupt_Handler+1,_INT0_INTERRUPT_HANDLER+1
  1318   001AEE                     l2349:
  1319                           
  1320                           ; BSR set to: 0
  1321                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 520:     return (ret);
  1322   001AEE  5178               	movf	INT0_Set_Interrupt_Handler@ret& (0+255),w,b
  1323   001AF0                     
  1324                           ; BSR set to: 0
  1325   001AF0  0012               	return		;funcret
  1326   001AF2                     __end_of_INT0_Set_Interrupt_Handler:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _Interrupt_INTx_Priority_Init *****************
  1330 ;; Defined at:
  1331 ;;		line 249 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  int_obj         1    0[BANK0 ] PTR const struct .
  1334 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  ret             1    3[BANK0 ] unsigned char 
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      unsigned char 
  1339 ;; Registers used:
  1340 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1346 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1350 ;;Total ram usage:        4 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 10
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_Interrupt_INTx_Init
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360                           	psect	text9
  1361   001330                     __ptext9:
  1362                           	callstack 0
  1363   001330                     _Interrupt_INTx_Priority_Init:
  1364                           	callstack 19
  1365   001330                     
  1366                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 249: static Std_ReturnType Interrupt_IN
      +                          Tx_Priority_Init(const interrupt_INTx_t *int_obj);MCAL_Layer/Interrupt/mcal_external_int
      +                          errupt.c: 250: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 251:     Std_ReturnType
      +                           ret = (Std_ReturnType)0x00u;
  1367   001330  0E00               	movlw	0
  1368   001332  0100               	movlb	0	; () banked
  1369   001334  6F79               	movwf	Interrupt_INTx_Priority_Init@ret& (0+255),b
  1370                           
  1371                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 253:     if (int_obj == ((void*)0))
  1372   001336  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1373   001338  A4D8               	btfss	status,2,c
  1374   00133A  EFA1  F009         	goto	u1871
  1375   00133E  EFA3  F009         	goto	u1870
  1376   001342                     u1871:
  1377   001342  EFEB  F009         	goto	l2501
  1378   001346                     u1870:
  1379   001346                     l2473:
  1380                           
  1381                           ; BSR set to: 0
  1382                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 254:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 255:         ret = (Std_ReturnType)0x01u;
  1383   001346  0E01               	movlw	1
  1384   001348  6F79               	movwf	Interrupt_INTx_Priority_Init@ret& (0+255),b
  1385                           
  1386                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 256:     }
  1387   00134A  EF09  F00A         	goto	l2503
  1388   00134E                     l2475:
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 263:                 ret = (Std_ReturnT
      +                          ype)0x00u;
  1392   00134E  0E00               	movlw	0
  1393   001350  6F79               	movwf	Interrupt_INTx_Priority_Init@ret& (0+255),b
  1394                           
  1395                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 264:                 break;
  1396   001352  EF09  F00A         	goto	l2503
  1397   001356                     l2477:
  1398                           
  1399                           ; BSR set to: 0
  1400                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 266:                 if (INTERRUPT_LOW_
      +                          PRIORITY == int_obj->priority)
  1401   001356  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1402   001358  6ED9               	movwf	fsr2l,c
  1403   00135A  6ADA               	clrf	fsr2h,c
  1404   00135C  0E05               	movlw	5
  1405   00135E  26D9               	addwf	fsr2l,f,c
  1406   001360  50DF               	movf	indf2,w,c
  1407   001362  A4D8               	btfss	status,2,c
  1408   001364  EFB6  F009         	goto	u1881
  1409   001368  EFB8  F009         	goto	u1880
  1410   00136C                     u1881:
  1411   00136C  EFBB  F009         	goto	l2481
  1412   001370                     u1880:
  1413   001370                     
  1414                           ; BSR set to: 0
  1415                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 267:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 268:                     (INTCON3bits.INT1P = 0);
  1416   001370  9CF0               	bcf	240,6,c	;volatile
  1417                           
  1418                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 269:                 }
  1419   001372  EF09  F00A         	goto	l2503
  1420   001376                     l2481:
  1421                           
  1422                           ; BSR set to: 0
  1423   001376  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1424   001378  6ED9               	movwf	fsr2l,c
  1425   00137A  6ADA               	clrf	fsr2h,c
  1426   00137C  0E05               	movlw	5
  1427   00137E  26D9               	addwf	fsr2l,f,c
  1428   001380  04DE               	decf	postinc2,w,c
  1429   001382  A4D8               	btfss	status,2,c
  1430   001384  EFC6  F009         	goto	u1891
  1431   001388  EFC8  F009         	goto	u1890
  1432   00138C                     u1891:
  1433   00138C  EFA3  F009         	goto	l2473
  1434   001390                     u1890:
  1435   001390                     
  1436                           ; BSR set to: 0
  1437                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 271:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 272:                     (INTCON3bits.INT1P = 1);
  1438   001390  8CF0               	bsf	240,6,c	;volatile
  1439                           
  1440                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 273:                 }
  1441   001392  EF09  F00A         	goto	l2503
  1442   001396                     l2487:
  1443                           
  1444                           ; BSR set to: 0
  1445                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 280:                 if (INTERRUPT_LOW_
      +                          PRIORITY == int_obj->priority)
  1446   001396  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1447   001398  6ED9               	movwf	fsr2l,c
  1448   00139A  6ADA               	clrf	fsr2h,c
  1449   00139C  0E05               	movlw	5
  1450   00139E  26D9               	addwf	fsr2l,f,c
  1451   0013A0  50DF               	movf	indf2,w,c
  1452   0013A2  A4D8               	btfss	status,2,c
  1453   0013A4  EFD6  F009         	goto	u1901
  1454   0013A8  EFD8  F009         	goto	u1900
  1455   0013AC                     u1901:
  1456   0013AC  EFDB  F009         	goto	l2491
  1457   0013B0                     u1900:
  1458   0013B0                     
  1459                           ; BSR set to: 0
  1460                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 281:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 283:                     (INTCON3bits.INT2P = 0);
  1461   0013B0  9EF0               	bcf	240,7,c	;volatile
  1462                           
  1463                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 284:                 }
  1464   0013B2  EF09  F00A         	goto	l2503
  1465   0013B6                     l2491:
  1466                           
  1467                           ; BSR set to: 0
  1468   0013B6  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1469   0013B8  6ED9               	movwf	fsr2l,c
  1470   0013BA  6ADA               	clrf	fsr2h,c
  1471   0013BC  0E05               	movlw	5
  1472   0013BE  26D9               	addwf	fsr2l,f,c
  1473   0013C0  04DE               	decf	postinc2,w,c
  1474   0013C2  A4D8               	btfss	status,2,c
  1475   0013C4  EFE6  F009         	goto	u1911
  1476   0013C8  EFE8  F009         	goto	u1910
  1477   0013CC                     u1911:
  1478   0013CC  EFA3  F009         	goto	l2473
  1479   0013D0                     u1910:
  1480   0013D0                     
  1481                           ; BSR set to: 0
  1482                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 286:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 288:                     (INTCON3bits.INT2P = 1);
  1483   0013D0  8EF0               	bsf	240,7,c	;volatile
  1484                           
  1485                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 289:                 }
  1486   0013D2  EF09  F00A         	goto	l2503
  1487   0013D6                     l2501:
  1488                           
  1489                           ; BSR set to: 0
  1490   0013D6  5176               	movf	Interrupt_INTx_Priority_Init@int_obj& (0+255),w,b
  1491   0013D8  6ED9               	movwf	fsr2l,c
  1492   0013DA  6ADA               	clrf	fsr2h,c
  1493   0013DC  0E04               	movlw	4
  1494   0013DE  26D9               	addwf	fsr2l,f,c
  1495   0013E0  50DF               	movf	indf2,w,c
  1496   0013E2  6F77               	movwf	??_Interrupt_INTx_Priority_Init& (0+255),b
  1497   0013E4  6B78               	clrf	(??_Interrupt_INTx_Priority_Init+1)& (0+255),b
  1498                           
  1499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1500                           ; Switch size 1, requested type "simple"
  1501                           ; Number of cases is 1, Range of values is 0 to 0
  1502                           ; switch strategies available:
  1503                           ; Name         Instructions Cycles
  1504                           ; simple_byte            4     3 (average)
  1505                           ;	Chosen strategy is simple_byte
  1506   0013E6  5178               	movf	(??_Interrupt_INTx_Priority_Init+1)& (0+255),w,b
  1507   0013E8  0A00               	xorlw	0	; case 0
  1508   0013EA  B4D8               	btfsc	status,2,c
  1509   0013EC  EFFA  F009         	goto	l2817
  1510   0013F0  EFA3  F009         	goto	l2473
  1511   0013F4                     l2817:
  1512                           
  1513                           ; BSR set to: 0
  1514                           ; Switch size 1, requested type "simple"
  1515                           ; Number of cases is 3, Range of values is 0 to 2
  1516                           ; switch strategies available:
  1517                           ; Name         Instructions Cycles
  1518                           ; simple_byte           10     6 (average)
  1519                           ;	Chosen strategy is simple_byte
  1520   0013F4  5177               	movf	??_Interrupt_INTx_Priority_Init& (0+255),w,b
  1521   0013F6  0A00               	xorlw	0	; case 0
  1522   0013F8  B4D8               	btfsc	status,2,c
  1523   0013FA  EFA7  F009         	goto	l2475
  1524   0013FE  0A01               	xorlw	1	; case 1
  1525   001400  B4D8               	btfsc	status,2,c
  1526   001402  EFAB  F009         	goto	l2477
  1527   001406  0A03               	xorlw	3	; case 2
  1528   001408  B4D8               	btfsc	status,2,c
  1529   00140A  EFCB  F009         	goto	l2487
  1530   00140E  EFA3  F009         	goto	l2473
  1531   001412                     l2503:
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 300:     return (ret);
  1535   001412  5179               	movf	Interrupt_INTx_Priority_Init@ret& (0+255),w,b
  1536   001414                     
  1537                           ; BSR set to: 0
  1538   001414  0012               	return		;funcret
  1539   001416                     __end_of_Interrupt_INTx_Priority_Init:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _Interrupt_INTx_Pin_Init *****************
  1543 ;; Defined at:
  1544 ;;		line 374 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  int_obj         1   10[BANK0 ] PTR const struct .
  1547 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  ret             1   11[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      unsigned char 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1559 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1562 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1563 ;;Total ram usage:        2 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 12
  1566 ;; This function calls:
  1567 ;;		_gpio_pin_initialize
  1568 ;; This function is called by:
  1569 ;;		_Interrupt_INTx_Init
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           	psect	text10
  1574   001AF2                     __ptext10:
  1575                           	callstack 0
  1576   001AF2                     _Interrupt_INTx_Pin_Init:
  1577                           	callstack 17
  1578   001AF2                     
  1579                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 378:     if (int_obj == ((void*)0))
  1580   001AF2  0100               	movlb	0	; () banked
  1581   001AF4  5180               	movf	Interrupt_INTx_Pin_Init@int_obj& (0+255),w,b
  1582   001AF6  A4D8               	btfss	status,2,c
  1583   001AF8  EF80  F00D         	goto	u1921
  1584   001AFC  EF82  F00D         	goto	u1920
  1585   001B00                     u1921:
  1586   001B00  EF86  F00D         	goto	l2515
  1587   001B04                     u1920:
  1588   001B04                     
  1589                           ; BSR set to: 0
  1590                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 379:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 380:         ret = (Std_ReturnType)0x01u;
  1591   001B04  0E01               	movlw	1
  1592   001B06  6F81               	movwf	Interrupt_INTx_Pin_Init@ret& (0+255),b
  1593                           
  1594                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 381:     }
  1595   001B08  EF8D  F00D         	goto	l2517
  1596   001B0C                     l2515:
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 383:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 384:         ret = gpio_pin_initialize(&(int_obj->mcu_pin));
  1600   001B0C  5180               	movf	Interrupt_INTx_Pin_Init@int_obj& (0+255),w,b
  1601   001B0E  0F02               	addlw	2
  1602   001B10  6F7D               	movwf	gpio_pin_initialize@_pin_config_t& (0+255),b
  1603   001B12  ECCA  F00C         	call	_gpio_pin_initialize	;wreg free
  1604   001B16  0100               	movlb	0	; () banked
  1605   001B18  6F81               	movwf	Interrupt_INTx_Pin_Init@ret& (0+255),b
  1606   001B1A                     l2517:
  1607                           
  1608                           ; BSR set to: 0
  1609                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 386:     return (ret);
  1610   001B1A  5181               	movf	Interrupt_INTx_Pin_Init@ret& (0+255),w,b
  1611   001B1C                     
  1612                           ; BSR set to: 0
  1613   001B1C  0012               	return		;funcret
  1614   001B1E                     __end_of_Interrupt_INTx_Pin_Init:
  1615                           	callstack 0
  1616                           
  1617 ;; *************** function _gpio_pin_initialize *****************
  1618 ;; Defined at:
  1619 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  _pin_config_    1    7[BANK0 ] PTR const struct .
  1622 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), led_initialize@pin(1), 
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  ret             1    9[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      unsigned char 
  1627 ;; Registers used:
  1628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1634 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1638 ;;Total ram usage:        3 bytes
  1639 ;; Hardware stack levels used: 1
  1640 ;; Hardware stack levels required when called: 11
  1641 ;; This function calls:
  1642 ;;		_gpio_pin_direction_initialize
  1643 ;; This function is called by:
  1644 ;;		_led_initialize
  1645 ;;		_Interrupt_INTx_Pin_Init
  1646 ;;		_seven_segment_initialize
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           
  1650                           	psect	text11
  1651   001994                     __ptext11:
  1652                           	callstack 0
  1653   001994                     _gpio_pin_initialize:
  1654                           	callstack 18
  1655   001994                     
  1656                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1657   001994  0100               	movlb	0	; () banked
  1658   001996  517D               	movf	gpio_pin_initialize@_pin_config_t& (0+255),w,b
  1659   001998  B4D8               	btfsc	status,2,c
  1660   00199A  EFD1  F00C         	goto	u1731
  1661   00199E  EFD3  F00C         	goto	u1730
  1662   0019A2                     u1731:
  1663   0019A2  EFE3  F00C         	goto	l2333
  1664   0019A6                     u1730:
  1665   0019A6                     
  1666                           ; BSR set to: 0
  1667   0019A6  517D               	movf	gpio_pin_initialize@_pin_config_t& (0+255),w,b
  1668   0019A8  6ED9               	movwf	fsr2l,c
  1669   0019AA  6ADA               	clrf	fsr2h,c
  1670   0019AC  30DF               	rrcf	223,w,c
  1671   0019AE  32E8               	rrcf	wreg,f,c
  1672   0019B0  32E8               	rrcf	wreg,f,c
  1673   0019B2  0B07               	andlw	7
  1674   0019B4  6F7E               	movwf	??_gpio_pin_initialize& (0+255),b
  1675   0019B6  0E07               	movlw	7
  1676   0019B8  657E               	cpfsgt	??_gpio_pin_initialize& (0+255),b
  1677   0019BA  EFE1  F00C         	goto	u1741
  1678   0019BE  EFE3  F00C         	goto	u1740
  1679   0019C2                     u1741:
  1680   0019C2  EFE7  F00C         	goto	l2335
  1681   0019C6                     u1740:
  1682   0019C6                     l2333:
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     {;MCAL_Layer/GPIO/hal_gpio.c: 22:         ret = (St
      +                          d_ReturnType)0x01u;
  1686   0019C6  0E01               	movlw	1
  1687   0019C8  6F7F               	movwf	gpio_pin_initialize@ret& (0+255),b
  1688                           
  1689                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  1690   0019CA  EFED  F00C         	goto	l2337
  1691   0019CE                     l2335:
  1692                           
  1693                           ; BSR set to: 0
  1694                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = gpi
      +                          o_pin_direction_initialize(_pin_config_t);
  1695   0019CE  C07D  F076         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
  1696   0019D2  EC90  F008         	call	_gpio_pin_direction_initialize	;wreg free
  1697   0019D6  0100               	movlb	0	; () banked
  1698   0019D8  6F7F               	movwf	gpio_pin_initialize@ret& (0+255),b
  1699   0019DA                     l2337:
  1700                           
  1701                           ; BSR set to: 0
  1702                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     return (ret);
  1703   0019DA  517F               	movf	gpio_pin_initialize@ret& (0+255),w,b
  1704   0019DC                     
  1705                           ; BSR set to: 0
  1706   0019DC  0012               	return		;funcret
  1707   0019DE                     __end_of_gpio_pin_initialize:
  1708                           	callstack 0
  1709                           
  1710 ;; *************** function _gpio_pin_direction_initialize *****************
  1711 ;; Defined at:
  1712 ;;		line 38 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1713 ;; Parameters:    Size  Location     Type
  1714 ;;  _pin_config_    1    0[BANK0 ] PTR const struct .
  1715 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), led_initialize@pin(1), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  ret             1    6[BANK0 ] unsigned char 
  1718 ;; Return value:  Size  Location     Type
  1719 ;;                  1    wreg      unsigned char 
  1720 ;; Registers used:
  1721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1722 ;; Tracked objects:
  1723 ;;		On entry : 0/0
  1724 ;;		On exit  : 0/0
  1725 ;;		Unchanged: 0/0
  1726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1727 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1730 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1731 ;;Total ram usage:        7 bytes
  1732 ;; Hardware stack levels used: 1
  1733 ;; Hardware stack levels required when called: 10
  1734 ;; This function calls:
  1735 ;;		Nothing
  1736 ;; This function is called by:
  1737 ;;		_gpio_pin_initialize
  1738 ;; This function uses a non-reentrant model
  1739 ;;
  1740                           
  1741                           	psect	text12
  1742   001120                     __ptext12:
  1743                           	callstack 0
  1744   001120                     _gpio_pin_direction_initialize:
  1745                           	callstack 18
  1746   001120                     
  1747                           ;MCAL_Layer/GPIO/hal_gpio.c: 38: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 39: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          0:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  1748   001120  0E00               	movlw	0
  1749   001122  0100               	movlb	0	; () banked
  1750   001124  6F7C               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  1751                           
  1752                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  1753   001126  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1754   001128  B4D8               	btfsc	status,2,c
  1755   00112A  EF99  F008         	goto	u1681
  1756   00112E  EF9B  F008         	goto	u1680
  1757   001132                     u1681:
  1758   001132  EFAB  F008         	goto	l2313
  1759   001136                     u1680:
  1760   001136                     
  1761                           ; BSR set to: 0
  1762   001136  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1763   001138  6ED9               	movwf	fsr2l,c
  1764   00113A  6ADA               	clrf	fsr2h,c
  1765   00113C  30DF               	rrcf	223,w,c
  1766   00113E  32E8               	rrcf	wreg,f,c
  1767   001140  32E8               	rrcf	wreg,f,c
  1768   001142  0B07               	andlw	7
  1769   001144  6F77               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  1770   001146  0E07               	movlw	7
  1771   001148  6577               	cpfsgt	??_gpio_pin_direction_initialize& (0+255),b
  1772   00114A  EFA9  F008         	goto	u1691
  1773   00114E  EFAB  F008         	goto	u1690
  1774   001152                     u1691:
  1775   001152  EF04  F009         	goto	l2323
  1776   001156                     u1690:
  1777   001156                     l2313:
  1778                           
  1779                           ; BSR set to: 0
  1780                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     {;MCAL_Layer/GPIO/hal_gpio.c: 44:         ret = (St
      +                          d_ReturnType)0x01u;
  1781   001156  0E01               	movlw	1
  1782   001158  6F7C               	movwf	gpio_pin_direction_initialize@ret& (0+255),b
  1783                           
  1784                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
  1785   00115A  EF1A  F009         	goto	l2325
  1786   00115E                     l2315:
  1787                           
  1788                           ; BSR set to: 0
  1789                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  1790   00115E  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1791   001160  6ED9               	movwf	fsr2l,c
  1792   001162  6ADA               	clrf	fsr2h,c
  1793   001164  30DF               	rrcf	223,w,c
  1794   001166  32E8               	rrcf	wreg,f,c
  1795   001168  32E8               	rrcf	wreg,f,c
  1796   00116A  0B07               	andlw	7
  1797   00116C  6F77               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  1798   00116E  0E01               	movlw	1
  1799   001170  6F78               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  1800   001172  2B77               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  1801   001174  EFBE  F008         	goto	u1704
  1802   001178                     u1705:
  1803   001178  90D8               	bcf	status,0,c
  1804   00117A  3778               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  1805   00117C                     u1704:
  1806   00117C  2F77               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  1807   00117E  EFBC  F008         	goto	u1705
  1808   001182  0100               	movlb	0	; () banked
  1809   001184  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1810   001186  6ED9               	movwf	fsr2l,c
  1811   001188  6ADA               	clrf	fsr2h,c
  1812   00118A  50DF               	movf	223,w,c
  1813   00118C  0B07               	andlw	7
  1814   00118E  0D02               	mullw	2
  1815   001190  50F3               	movf	243,w,c
  1816   001192  0F24               	addlw	low _tris_registers
  1817   001194  6ED9               	movwf	fsr2l,c
  1818   001196  6ADA               	clrf	fsr2h,c
  1819   001198  CFDE F079          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1820   00119C  CFDD F07A          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1821   0011A0  C079  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1822   0011A4  C07A  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1823   0011A8  5178               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  1824   0011AA  12DF               	iorwf	indf2,f,c
  1825                           
  1826                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 break;
  1827   0011AC  EF1A  F009         	goto	l2325
  1828   0011B0                     l2317:
  1829                           
  1830                           ; BSR set to: 0
  1831                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  1832   0011B0  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1833   0011B2  6ED9               	movwf	fsr2l,c
  1834   0011B4  6ADA               	clrf	fsr2h,c
  1835   0011B6  30DF               	rrcf	223,w,c
  1836   0011B8  32E8               	rrcf	wreg,f,c
  1837   0011BA  32E8               	rrcf	wreg,f,c
  1838   0011BC  0B07               	andlw	7
  1839   0011BE  6F77               	movwf	??_gpio_pin_direction_initialize& (0+255),b
  1840   0011C0  0E01               	movlw	1
  1841   0011C2  6F78               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
  1842   0011C4  2B77               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
  1843   0011C6  EFE7  F008         	goto	u1714
  1844   0011CA                     u1715:
  1845   0011CA  90D8               	bcf	status,0,c
  1846   0011CC  3778               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
  1847   0011CE                     u1714:
  1848   0011CE  2F77               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
  1849   0011D0  EFE5  F008         	goto	u1715
  1850   0011D4  0100               	movlb	0	; () banked
  1851   0011D6  5178               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
  1852   0011D8  0AFF               	xorlw	255
  1853   0011DA  6F79               	movwf	(??_gpio_pin_direction_initialize+2)& (0+255),b
  1854   0011DC  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1855   0011DE  6ED9               	movwf	fsr2l,c
  1856   0011E0  6ADA               	clrf	fsr2h,c
  1857   0011E2  50DF               	movf	223,w,c
  1858   0011E4  0B07               	andlw	7
  1859   0011E6  0D02               	mullw	2
  1860   0011E8  50F3               	movf	243,w,c
  1861   0011EA  0F24               	addlw	low _tris_registers
  1862   0011EC  6ED9               	movwf	fsr2l,c
  1863   0011EE  6ADA               	clrf	fsr2h,c
  1864   0011F0  CFDE F07A          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1865   0011F4  CFDD F07B          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1866   0011F8  C07A  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1867   0011FC  C07B  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1868   001200  5179               	movf	(??_gpio_pin_direction_initialize+2)& (0+255),w,b
  1869   001202  16DF               	andwf	indf2,f,c
  1870                           
  1871                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 break;
  1872   001204  EF1A  F009         	goto	l2325
  1873   001208                     l2323:
  1874                           
  1875                           ; BSR set to: 0
  1876   001208  5176               	movf	gpio_pin_direction_initialize@_pin_config_t& (0+255),w,b
  1877   00120A  6ED9               	movwf	fsr2l,c
  1878   00120C  6ADA               	clrf	fsr2h,c
  1879   00120E  BCDF               	btfsc	indf2,6,c
  1880   001210  EF0C  F009         	goto	u1721
  1881   001214  EF0F  F009         	goto	u1720
  1882   001218                     u1721:
  1883   001218  0E01               	movlw	1
  1884   00121A  EF10  F009         	goto	u1726
  1885   00121E                     u1720:
  1886   00121E  0E00               	movlw	0
  1887   001220                     u1726:
  1888                           
  1889                           ; Switch size 1, requested type "simple"
  1890                           ; Number of cases is 2, Range of values is 0 to 1
  1891                           ; switch strategies available:
  1892                           ; Name         Instructions Cycles
  1893                           ; simple_byte            7     4 (average)
  1894                           ;	Chosen strategy is simple_byte
  1895   001220  0A00               	xorlw	0	; case 0
  1896   001222  B4D8               	btfsc	status,2,c
  1897   001224  EFD8  F008         	goto	l2317
  1898   001228  0A01               	xorlw	1	; case 1
  1899   00122A  B4D8               	btfsc	status,2,c
  1900   00122C  EFAF  F008         	goto	l2315
  1901   001230  EFAB  F008         	goto	l2313
  1902   001234                     l2325:
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return (ret);
  1906   001234  517C               	movf	gpio_pin_direction_initialize@ret& (0+255),w,b
  1907   001236                     
  1908                           ; BSR set to: 0
  1909   001236  0012               	return		;funcret
  1910   001238                     __end_of_gpio_pin_direction_initialize:
  1911                           	callstack 0
  1912                           
  1913 ;; *************** function _Interrupt_INTx_Enable *****************
  1914 ;; Defined at:
  1915 ;;		line 130 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  1916 ;; Parameters:    Size  Location     Type
  1917 ;;  int_obj         1    0[BANK0 ] PTR const struct .
  1918 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  1919 ;; Auto vars:     Size  Location     Type
  1920 ;;  ret             1    3[BANK0 ] unsigned char 
  1921 ;; Return value:  Size  Location     Type
  1922 ;;                  1    wreg      unsigned char 
  1923 ;; Registers used:
  1924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1925 ;; Tracked objects:
  1926 ;;		On entry : 0/0
  1927 ;;		On exit  : 0/0
  1928 ;;		Unchanged: 0/0
  1929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1930 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1931 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1933 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1934 ;;Total ram usage:        4 bytes
  1935 ;; Hardware stack levels used: 1
  1936 ;; Hardware stack levels required when called: 10
  1937 ;; This function calls:
  1938 ;;		Nothing
  1939 ;; This function is called by:
  1940 ;;		_Interrupt_INTx_Init
  1941 ;; This function uses a non-reentrant model
  1942 ;;
  1943                           
  1944                           	psect	text13
  1945   001238                     __ptext13:
  1946                           	callstack 0
  1947   001238                     _Interrupt_INTx_Enable:
  1948                           	callstack 19
  1949   001238                     
  1950                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 130: static Std_ReturnType Interrupt_IN
      +                          Tx_Enable(const interrupt_INTx_t * int_obj);MCAL_Layer/Interrupt/mcal_external_interrupt
      +                          .c: 131: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 132:     Std_ReturnType ret =
      +                           (Std_ReturnType)0x00u;
  1951   001238  0E00               	movlw	0
  1952   00123A  0100               	movlb	0	; () banked
  1953   00123C  6F79               	movwf	Interrupt_INTx_Enable@ret& (0+255),b
  1954                           
  1955                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 133:     if (int_obj == ((void*)0))
  1956   00123E  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  1957   001240  A4D8               	btfss	status,2,c
  1958   001242  EF25  F009         	goto	u1941
  1959   001246  EF27  F009         	goto	u1940
  1960   00124A                     u1941:
  1961   00124A  EF2B  F009         	goto	l232
  1962   00124E                     u1940:
  1963   00124E                     l2547:
  1964                           
  1965                           ; BSR set to: 0
  1966                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 134:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 135:         ret = (Std_ReturnType)0x01u;
  1967   00124E  0E01               	movlw	1
  1968   001250  6F79               	movwf	Interrupt_INTx_Enable@ret& (0+255),b
  1969                           
  1970                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 136:     }
  1971   001252  EF96  F009         	goto	l2575
  1972   001256                     l232:
  1973                           
  1974                           ; BSR set to: 0
  1975                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 138:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 144:         (RCONbits.IPEN = 1);
  1976   001256  8ED0               	bsf	208,7,c	;volatile
  1977                           
  1978                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 146:         switch(int_obj->source)
  1979   001258  EF78  F009         	goto	l2573
  1980   00125C                     l235:
  1981                           
  1982                           ; BSR set to: 0
  1983                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 152:                 (INTCONbits.GIEH =
      +                           1);
  1984   00125C  8EF2               	bsf	242,7,c	;volatile
  1985                           
  1986                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 153:                 (INTCONbits.INT0IE
      +                           = 1);
  1987   00125E  88F2               	bsf	242,4,c	;volatile
  1988                           
  1989                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 157:                 break;
  1990   001260  EF96  F009         	goto	l2575
  1991   001264                     l2549:
  1992                           
  1993                           ; BSR set to: 0
  1994                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 161:                 if (INTERRUPT_LOW_
      +                          PRIORITY == int_obj->priority)
  1995   001264  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  1996   001266  6ED9               	movwf	fsr2l,c
  1997   001268  6ADA               	clrf	fsr2h,c
  1998   00126A  0E05               	movlw	5
  1999   00126C  26D9               	addwf	fsr2l,f,c
  2000   00126E  50DF               	movf	indf2,w,c
  2001   001270  A4D8               	btfss	status,2,c
  2002   001272  EF3D  F009         	goto	u1951
  2003   001276  EF3F  F009         	goto	u1950
  2004   00127A                     u1951:
  2005   00127A  EF44  F009         	goto	l2553
  2006   00127E                     u1950:
  2007   00127E                     
  2008                           ; BSR set to: 0
  2009                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 162:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 163:                     (INTCONbits.GIEH = 1);
  2010   00127E  8EF2               	bsf	242,7,c	;volatile
  2011                           
  2012                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 164:                     (INTCONbits.GI
      +                          EL = 1);
  2013   001280  8CF2               	bsf	242,6,c	;volatile
  2014                           
  2015                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 165:                     (INTCON3bits.I
      +                          NT1IE = 1);
  2016   001282  86F0               	bsf	240,3,c	;volatile
  2017                           
  2018                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 166:                 }
  2019   001284  EF96  F009         	goto	l2575
  2020   001288                     l2553:
  2021                           
  2022                           ; BSR set to: 0
  2023   001288  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  2024   00128A  6ED9               	movwf	fsr2l,c
  2025   00128C  6ADA               	clrf	fsr2h,c
  2026   00128E  0E05               	movlw	5
  2027   001290  26D9               	addwf	fsr2l,f,c
  2028   001292  04DE               	decf	postinc2,w,c
  2029   001294  A4D8               	btfss	status,2,c
  2030   001296  EF4F  F009         	goto	u1961
  2031   00129A  EF51  F009         	goto	u1960
  2032   00129E                     u1961:
  2033   00129E  EF27  F009         	goto	l2547
  2034   0012A2                     u1960:
  2035   0012A2                     
  2036                           ; BSR set to: 0
  2037                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 168:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 169:                     (INTCONbits.GIEH = 1);
  2038   0012A2  8EF2               	bsf	242,7,c	;volatile
  2039                           
  2040                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 170:                     (INTCON3bits.I
      +                          NT1IE = 1);
  2041   0012A4  86F0               	bsf	240,3,c	;volatile
  2042                           
  2043                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 171:                 }
  2044   0012A6  EF96  F009         	goto	l2575
  2045   0012AA                     l2559:
  2046                           
  2047                           ; BSR set to: 0
  2048                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 183:                 if (INTERRUPT_LOW_
      +                          PRIORITY == int_obj->priority)
  2049   0012AA  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  2050   0012AC  6ED9               	movwf	fsr2l,c
  2051   0012AE  6ADA               	clrf	fsr2h,c
  2052   0012B0  0E05               	movlw	5
  2053   0012B2  26D9               	addwf	fsr2l,f,c
  2054   0012B4  50DF               	movf	indf2,w,c
  2055   0012B6  A4D8               	btfss	status,2,c
  2056   0012B8  EF60  F009         	goto	u1971
  2057   0012BC  EF62  F009         	goto	u1970
  2058   0012C0                     u1971:
  2059   0012C0  EF67  F009         	goto	l2563
  2060   0012C4                     u1970:
  2061   0012C4                     
  2062                           ; BSR set to: 0
  2063                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 184:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 185:                     (INTCONbits.GIEH = 1);
  2064   0012C4  8EF2               	bsf	242,7,c	;volatile
  2065                           
  2066                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 186:                     (INTCONbits.GI
      +                          EL = 1);
  2067   0012C6  8CF2               	bsf	242,6,c	;volatile
  2068                           
  2069                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 187:                     (INTCON3bits.I
      +                          NT2IE = 1);
  2070   0012C8  88F0               	bsf	240,4,c	;volatile
  2071                           
  2072                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 188:                 }
  2073   0012CA  EF96  F009         	goto	l2575
  2074   0012CE                     l2563:
  2075                           
  2076                           ; BSR set to: 0
  2077   0012CE  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  2078   0012D0  6ED9               	movwf	fsr2l,c
  2079   0012D2  6ADA               	clrf	fsr2h,c
  2080   0012D4  0E05               	movlw	5
  2081   0012D6  26D9               	addwf	fsr2l,f,c
  2082   0012D8  04DE               	decf	postinc2,w,c
  2083   0012DA  A4D8               	btfss	status,2,c
  2084   0012DC  EF72  F009         	goto	u1981
  2085   0012E0  EF74  F009         	goto	u1980
  2086   0012E4                     u1981:
  2087   0012E4  EF27  F009         	goto	l2547
  2088   0012E8                     u1980:
  2089   0012E8                     
  2090                           ; BSR set to: 0
  2091                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 190:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 191:                     (INTCONbits.GIEH = 1);
  2092   0012E8  8EF2               	bsf	242,7,c	;volatile
  2093                           
  2094                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 192:                     (INTCON3bits.I
      +                          NT2IE = 1);
  2095   0012EA  88F0               	bsf	240,4,c	;volatile
  2096                           
  2097                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 193:                 }
  2098   0012EC  EF96  F009         	goto	l2575
  2099   0012F0                     l2573:
  2100                           
  2101                           ; BSR set to: 0
  2102   0012F0  5176               	movf	Interrupt_INTx_Enable@int_obj& (0+255),w,b
  2103   0012F2  6ED9               	movwf	fsr2l,c
  2104   0012F4  6ADA               	clrf	fsr2h,c
  2105   0012F6  0E04               	movlw	4
  2106   0012F8  26D9               	addwf	fsr2l,f,c
  2107   0012FA  50DF               	movf	indf2,w,c
  2108   0012FC  6F77               	movwf	??_Interrupt_INTx_Enable& (0+255),b
  2109   0012FE  6B78               	clrf	(??_Interrupt_INTx_Enable+1)& (0+255),b
  2110                           
  2111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2112                           ; Switch size 1, requested type "simple"
  2113                           ; Number of cases is 1, Range of values is 0 to 0
  2114                           ; switch strategies available:
  2115                           ; Name         Instructions Cycles
  2116                           ; simple_byte            4     3 (average)
  2117                           ;	Chosen strategy is simple_byte
  2118   001300  5178               	movf	(??_Interrupt_INTx_Enable+1)& (0+255),w,b
  2119   001302  0A00               	xorlw	0	; case 0
  2120   001304  B4D8               	btfsc	status,2,c
  2121   001306  EF87  F009         	goto	l2819
  2122   00130A  EF27  F009         	goto	l2547
  2123   00130E                     l2819:
  2124                           
  2125                           ; BSR set to: 0
  2126                           ; Switch size 1, requested type "simple"
  2127                           ; Number of cases is 3, Range of values is 0 to 2
  2128                           ; switch strategies available:
  2129                           ; Name         Instructions Cycles
  2130                           ; simple_byte           10     6 (average)
  2131                           ;	Chosen strategy is simple_byte
  2132   00130E  5177               	movf	??_Interrupt_INTx_Enable& (0+255),w,b
  2133   001310  0A00               	xorlw	0	; case 0
  2134   001312  B4D8               	btfsc	status,2,c
  2135   001314  EF2E  F009         	goto	l235
  2136   001318  0A01               	xorlw	1	; case 1
  2137   00131A  B4D8               	btfsc	status,2,c
  2138   00131C  EF32  F009         	goto	l2549
  2139   001320  0A03               	xorlw	3	; case 2
  2140   001322  B4D8               	btfsc	status,2,c
  2141   001324  EF55  F009         	goto	l2559
  2142   001328  EF27  F009         	goto	l2547
  2143   00132C                     l2575:
  2144                           
  2145                           ; BSR set to: 0
  2146                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 207:     return (ret);
  2147   00132C  5179               	movf	Interrupt_INTx_Enable@ret& (0+255),w,b
  2148   00132E                     
  2149                           ; BSR set to: 0
  2150   00132E  0012               	return		;funcret
  2151   001330                     __end_of_Interrupt_INTx_Enable:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _Interrupt_INTx_Edge_Init *****************
  2155 ;; Defined at:
  2156 ;;		line 308 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;  int_obj         1    0[BANK0 ] PTR const struct .
  2159 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  2160 ;; Auto vars:     Size  Location     Type
  2161 ;;  ret             1    3[BANK0 ] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  1    wreg      unsigned char 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2171 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2173 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2174 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 10
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_Interrupt_INTx_Init
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text14
  2186   001002                     __ptext14:
  2187                           	callstack 0
  2188   001002                     _Interrupt_INTx_Edge_Init:
  2189                           	callstack 19
  2190   001002                     
  2191                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 308: static Std_ReturnType Interrupt_IN
      +                          Tx_Edge_Init(const interrupt_INTx_t *int_obj);MCAL_Layer/Interrupt/mcal_external_interru
      +                          pt.c: 309: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 310:     Std_ReturnType ret
      +                           = (Std_ReturnType)0x00u;
  2192   001002  0E00               	movlw	0
  2193   001004  0100               	movlb	0	; () banked
  2194   001006  6F79               	movwf	Interrupt_INTx_Edge_Init@ret& (0+255),b
  2195                           
  2196                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 312:     if (int_obj == ((void*)0))
  2197   001008  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2198   00100A  A4D8               	btfss	status,2,c
  2199   00100C  EF0A  F008         	goto	u1801
  2200   001010  EF0C  F008         	goto	u1800
  2201   001014                     u1801:
  2202   001014  EF70  F008         	goto	l2461
  2203   001018                     u1800:
  2204   001018                     l2425:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 313:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 314:         ret = (Std_ReturnType)0x01u;
  2208   001018  0E01               	movlw	1
  2209   00101A  6F79               	movwf	Interrupt_INTx_Edge_Init@ret& (0+255),b
  2210                           
  2211                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 315:     }
  2212   00101C  EF8E  F008         	goto	l2463
  2213   001020                     l2427:
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 321:                 if (INTERRUPT_RISI
      +                          NG_EDGE == int_obj->edge)
  2217   001020  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2218   001022  6ED9               	movwf	fsr2l,c
  2219   001024  6ADA               	clrf	fsr2h,c
  2220   001026  0E03               	movlw	3
  2221   001028  26D9               	addwf	fsr2l,f,c
  2222   00102A  04DE               	decf	postinc2,w,c
  2223   00102C  A4D8               	btfss	status,2,c
  2224   00102E  EF1B  F008         	goto	u1811
  2225   001032  EF1D  F008         	goto	u1810
  2226   001036                     u1811:
  2227   001036  EF20  F008         	goto	l2431
  2228   00103A                     u1810:
  2229   00103A                     
  2230                           ; BSR set to: 0
  2231                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 322:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 323:                     (INTCON2bits.INTEDG0 = 1);
  2232   00103A  8CF1               	bsf	241,6,c	;volatile
  2233                           
  2234                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 324:                 }
  2235   00103C  EF8E  F008         	goto	l2463
  2236   001040                     l2431:
  2237                           
  2238                           ; BSR set to: 0
  2239   001040  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2240   001042  6ED9               	movwf	fsr2l,c
  2241   001044  6ADA               	clrf	fsr2h,c
  2242   001046  0E03               	movlw	3
  2243   001048  26D9               	addwf	fsr2l,f,c
  2244   00104A  50DF               	movf	indf2,w,c
  2245   00104C  A4D8               	btfss	status,2,c
  2246   00104E  EF2B  F008         	goto	u1821
  2247   001052  EF2D  F008         	goto	u1820
  2248   001056                     u1821:
  2249   001056  EF0C  F008         	goto	l2425
  2250   00105A                     u1820:
  2251   00105A                     
  2252                           ; BSR set to: 0
  2253                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 326:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 327:                     (INTCON2bits.INTEDG0 = 0);
  2254   00105A  9CF1               	bcf	241,6,c	;volatile
  2255                           
  2256                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 328:                 }
  2257   00105C  EF8E  F008         	goto	l2463
  2258   001060                     l2437:
  2259                           
  2260                           ; BSR set to: 0
  2261                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 335:                 if (INTERRUPT_RISI
      +                          NG_EDGE == int_obj->edge)
  2262   001060  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2263   001062  6ED9               	movwf	fsr2l,c
  2264   001064  6ADA               	clrf	fsr2h,c
  2265   001066  0E03               	movlw	3
  2266   001068  26D9               	addwf	fsr2l,f,c
  2267   00106A  04DE               	decf	postinc2,w,c
  2268   00106C  A4D8               	btfss	status,2,c
  2269   00106E  EF3B  F008         	goto	u1831
  2270   001072  EF3D  F008         	goto	u1830
  2271   001076                     u1831:
  2272   001076  EF40  F008         	goto	l2441
  2273   00107A                     u1830:
  2274   00107A                     
  2275                           ; BSR set to: 0
  2276                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 336:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 337:                     (INTCON2bits.INTEDG1 = 1);
  2277   00107A  8AF1               	bsf	241,5,c	;volatile
  2278                           
  2279                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 338:                 }
  2280   00107C  EF8E  F008         	goto	l2463
  2281   001080                     l2441:
  2282                           
  2283                           ; BSR set to: 0
  2284   001080  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2285   001082  6ED9               	movwf	fsr2l,c
  2286   001084  6ADA               	clrf	fsr2h,c
  2287   001086  0E03               	movlw	3
  2288   001088  26D9               	addwf	fsr2l,f,c
  2289   00108A  50DF               	movf	indf2,w,c
  2290   00108C  A4D8               	btfss	status,2,c
  2291   00108E  EF4B  F008         	goto	u1841
  2292   001092  EF4D  F008         	goto	u1840
  2293   001096                     u1841:
  2294   001096  EF0C  F008         	goto	l2425
  2295   00109A                     u1840:
  2296   00109A                     
  2297                           ; BSR set to: 0
  2298                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 340:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 341:                     (INTCON2bits.INTEDG1 = 0);
  2299   00109A  9AF1               	bcf	241,5,c	;volatile
  2300                           
  2301                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 342:                 }
  2302   00109C  EF8E  F008         	goto	l2463
  2303   0010A0                     l2447:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 349:                 if (INTERRUPT_RISI
      +                          NG_EDGE == int_obj->edge)
  2307   0010A0  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2308   0010A2  6ED9               	movwf	fsr2l,c
  2309   0010A4  6ADA               	clrf	fsr2h,c
  2310   0010A6  0E03               	movlw	3
  2311   0010A8  26D9               	addwf	fsr2l,f,c
  2312   0010AA  04DE               	decf	postinc2,w,c
  2313   0010AC  A4D8               	btfss	status,2,c
  2314   0010AE  EF5B  F008         	goto	u1851
  2315   0010B2  EF5D  F008         	goto	u1850
  2316   0010B6                     u1851:
  2317   0010B6  EF60  F008         	goto	l2451
  2318   0010BA                     u1850:
  2319   0010BA                     
  2320                           ; BSR set to: 0
  2321                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 350:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 351:                     (INTCON2bits.INTEDG1 = 1);
  2322   0010BA  8AF1               	bsf	241,5,c	;volatile
  2323                           
  2324                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 352:                 }
  2325   0010BC  EF8E  F008         	goto	l2463
  2326   0010C0                     l2451:
  2327                           
  2328                           ; BSR set to: 0
  2329   0010C0  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2330   0010C2  6ED9               	movwf	fsr2l,c
  2331   0010C4  6ADA               	clrf	fsr2h,c
  2332   0010C6  0E03               	movlw	3
  2333   0010C8  26D9               	addwf	fsr2l,f,c
  2334   0010CA  50DF               	movf	indf2,w,c
  2335   0010CC  A4D8               	btfss	status,2,c
  2336   0010CE  EF6B  F008         	goto	u1861
  2337   0010D2  EF6D  F008         	goto	u1860
  2338   0010D6                     u1861:
  2339   0010D6  EF0C  F008         	goto	l2425
  2340   0010DA                     u1860:
  2341   0010DA                     
  2342                           ; BSR set to: 0
  2343                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 354:                 {;MCAL_Layer/Inter
      +                          rupt/mcal_external_interrupt.c: 355:                     (INTCON2bits.INTEDG1 = 0);
  2344   0010DA  9AF1               	bcf	241,5,c	;volatile
  2345                           
  2346                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 356:                 }
  2347   0010DC  EF8E  F008         	goto	l2463
  2348   0010E0                     l2461:
  2349                           
  2350                           ; BSR set to: 0
  2351   0010E0  5176               	movf	Interrupt_INTx_Edge_Init@int_obj& (0+255),w,b
  2352   0010E2  6ED9               	movwf	fsr2l,c
  2353   0010E4  6ADA               	clrf	fsr2h,c
  2354   0010E6  0E04               	movlw	4
  2355   0010E8  26D9               	addwf	fsr2l,f,c
  2356   0010EA  50DF               	movf	indf2,w,c
  2357   0010EC  6F77               	movwf	??_Interrupt_INTx_Edge_Init& (0+255),b
  2358   0010EE  6B78               	clrf	(??_Interrupt_INTx_Edge_Init+1)& (0+255),b
  2359                           
  2360                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2361                           ; Switch size 1, requested type "simple"
  2362                           ; Number of cases is 1, Range of values is 0 to 0
  2363                           ; switch strategies available:
  2364                           ; Name         Instructions Cycles
  2365                           ; simple_byte            4     3 (average)
  2366                           ;	Chosen strategy is simple_byte
  2367   0010F0  5178               	movf	(??_Interrupt_INTx_Edge_Init+1)& (0+255),w,b
  2368   0010F2  0A00               	xorlw	0	; case 0
  2369   0010F4  B4D8               	btfsc	status,2,c
  2370   0010F6  EF7F  F008         	goto	l2821
  2371   0010FA  EF0C  F008         	goto	l2425
  2372   0010FE                     l2821:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ; Switch size 1, requested type "simple"
  2376                           ; Number of cases is 3, Range of values is 0 to 2
  2377                           ; switch strategies available:
  2378                           ; Name         Instructions Cycles
  2379                           ; simple_byte           10     6 (average)
  2380                           ;	Chosen strategy is simple_byte
  2381   0010FE  5177               	movf	??_Interrupt_INTx_Edge_Init& (0+255),w,b
  2382   001100  0A00               	xorlw	0	; case 0
  2383   001102  B4D8               	btfsc	status,2,c
  2384   001104  EF10  F008         	goto	l2427
  2385   001108  0A01               	xorlw	1	; case 1
  2386   00110A  B4D8               	btfsc	status,2,c
  2387   00110C  EF30  F008         	goto	l2437
  2388   001110  0A03               	xorlw	3	; case 2
  2389   001112  B4D8               	btfsc	status,2,c
  2390   001114  EF50  F008         	goto	l2447
  2391   001118  EF0C  F008         	goto	l2425
  2392   00111C                     l2463:
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 367:     return (ret);
  2396   00111C  5179               	movf	Interrupt_INTx_Edge_Init@ret& (0+255),w,b
  2397   00111E                     
  2398                           ; BSR set to: 0
  2399   00111E  0012               	return		;funcret
  2400   001120                     __end_of_Interrupt_INTx_Edge_Init:
  2401                           	callstack 0
  2402                           
  2403 ;; *************** function _Interrupt_INTx_Disable *****************
  2404 ;; Defined at:
  2405 ;;		line 214 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2406 ;; Parameters:    Size  Location     Type
  2407 ;;  int_obj         1    0[BANK0 ] PTR const struct .
  2408 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  ret             1    3[BANK0 ] unsigned char 
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      unsigned char 
  2413 ;; Registers used:
  2414 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2420 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2421 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2422 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;Total ram usage:        4 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 10
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_Interrupt_INTx_Init
  2431 ;;		_Interrupt_INTx_Deinit
  2432 ;; This function uses a non-reentrant model
  2433 ;;
  2434                           
  2435                           	psect	text15
  2436   001722                     __ptext15:
  2437                           	callstack 0
  2438   001722                     _Interrupt_INTx_Disable:
  2439                           	callstack 19
  2440   001722                     
  2441                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 214: static Std_ReturnType Interrupt_IN
      +                          Tx_Disable(const interrupt_INTx_t *int_obj);MCAL_Layer/Interrupt/mcal_external_interrupt
      +                          .c: 215: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 216:     Std_ReturnType ret =
      +                           (Std_ReturnType)0x00u;
  2442   001722  0E00               	movlw	0
  2443   001724  0100               	movlb	0	; () banked
  2444   001726  6F79               	movwf	Interrupt_INTx_Disable@ret& (0+255),b
  2445                           
  2446                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 218:     if (int_obj == ((void*)0))
  2447   001728  5176               	movf	Interrupt_INTx_Disable@int_obj& (0+255),w,b
  2448   00172A  A4D8               	btfss	status,2,c
  2449   00172C  EF9A  F00B         	goto	u1781
  2450   001730  EF9C  F00B         	goto	u1780
  2451   001734                     u1781:
  2452   001734  EFA9  F00B         	goto	l2391
  2453   001738                     u1780:
  2454   001738                     l2385:
  2455                           
  2456                           ; BSR set to: 0
  2457                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 219:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 220:         ret = (Std_ReturnType)0x01u;
  2458   001738  0E01               	movlw	1
  2459   00173A  6F79               	movwf	Interrupt_INTx_Disable@ret& (0+255),b
  2460                           
  2461                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 221:     }
  2462   00173C  EFC7  F00B         	goto	l2393
  2463   001740                     l254:
  2464                           
  2465                           ; BSR set to: 0
  2466                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 227:                 (INTCONbits.INT0IE
      +                           = 0);
  2467   001740  98F2               	bcf	242,4,c	;volatile
  2468                           
  2469                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 228:                 break;
  2470   001742  EFC7  F00B         	goto	l2393
  2471   001746                     l256:
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 230:                 (INTCON3bits.INT1I
      +                          E = 0);
  2475   001746  96F0               	bcf	240,3,c	;volatile
  2476                           
  2477                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 231:                 break;
  2478   001748  EFC7  F00B         	goto	l2393
  2479   00174C                     l257:
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 233:                 (INTCON3bits.INT2I
      +                          E = 0);
  2483   00174C  98F0               	bcf	240,4,c	;volatile
  2484                           
  2485                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 234:                 break;
  2486   00174E  EFC7  F00B         	goto	l2393
  2487   001752                     l2391:
  2488                           
  2489                           ; BSR set to: 0
  2490   001752  5176               	movf	Interrupt_INTx_Disable@int_obj& (0+255),w,b
  2491   001754  6ED9               	movwf	fsr2l,c
  2492   001756  6ADA               	clrf	fsr2h,c
  2493   001758  0E04               	movlw	4
  2494   00175A  26D9               	addwf	fsr2l,f,c
  2495   00175C  50DF               	movf	indf2,w,c
  2496   00175E  6F77               	movwf	??_Interrupt_INTx_Disable& (0+255),b
  2497   001760  6B78               	clrf	(??_Interrupt_INTx_Disable+1)& (0+255),b
  2498                           
  2499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2500                           ; Switch size 1, requested type "simple"
  2501                           ; Number of cases is 1, Range of values is 0 to 0
  2502                           ; switch strategies available:
  2503                           ; Name         Instructions Cycles
  2504                           ; simple_byte            4     3 (average)
  2505                           ;	Chosen strategy is simple_byte
  2506   001762  5178               	movf	(??_Interrupt_INTx_Disable+1)& (0+255),w,b
  2507   001764  0A00               	xorlw	0	; case 0
  2508   001766  B4D8               	btfsc	status,2,c
  2509   001768  EFB8  F00B         	goto	l2823
  2510   00176C  EF9C  F00B         	goto	l2385
  2511   001770                     l2823:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ; Switch size 1, requested type "simple"
  2515                           ; Number of cases is 3, Range of values is 0 to 2
  2516                           ; switch strategies available:
  2517                           ; Name         Instructions Cycles
  2518                           ; simple_byte           10     6 (average)
  2519                           ;	Chosen strategy is simple_byte
  2520   001770  5177               	movf	??_Interrupt_INTx_Disable& (0+255),w,b
  2521   001772  0A00               	xorlw	0	; case 0
  2522   001774  B4D8               	btfsc	status,2,c
  2523   001776  EFA0  F00B         	goto	l254
  2524   00177A  0A01               	xorlw	1	; case 1
  2525   00177C  B4D8               	btfsc	status,2,c
  2526   00177E  EFA3  F00B         	goto	l256
  2527   001782  0A03               	xorlw	3	; case 2
  2528   001784  B4D8               	btfsc	status,2,c
  2529   001786  EFA6  F00B         	goto	l257
  2530   00178A  EF9C  F00B         	goto	l2385
  2531   00178E                     l2393:
  2532                           
  2533                           ; BSR set to: 0
  2534                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 240:     return (ret);
  2535   00178E  5179               	movf	Interrupt_INTx_Disable@ret& (0+255),w,b
  2536   001790                     
  2537                           ; BSR set to: 0
  2538   001790  0012               	return		;funcret
  2539   001792                     __end_of_Interrupt_INTx_Disable:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _Interrupt_INTx_Clear_Flag *****************
  2543 ;; Defined at:
  2544 ;;		line 393 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  int_obj         1    0[BANK0 ] PTR const struct .
  2547 ;;		 -> int2_obj(6), int1_obj(6), int0_obj(6), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  ret             1    3[BANK0 ] unsigned char 
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      unsigned char 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2559 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        4 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 10
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_Interrupt_INTx_Init
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text16
  2574   001792                     __ptext16:
  2575                           	callstack 0
  2576   001792                     _Interrupt_INTx_Clear_Flag:
  2577                           	callstack 19
  2578   001792                     
  2579                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 393: static Std_ReturnType Interrupt_IN
      +                          Tx_Clear_Flag(const interrupt_INTx_t *int_obj);MCAL_Layer/Interrupt/mcal_external_interr
      +                          upt.c: 394: {;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 395:     Std_ReturnType re
      +                          t = (Std_ReturnType)0x00u;
  2580   001792  0E00               	movlw	0
  2581   001794  0100               	movlb	0	; () banked
  2582   001796  6F79               	movwf	Interrupt_INTx_Clear_Flag@ret& (0+255),b
  2583                           
  2584                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 397:     if (((void*)0) == int_obj)
  2585   001798  5176               	movf	Interrupt_INTx_Clear_Flag@int_obj& (0+255),w,b
  2586   00179A  A4D8               	btfss	status,2,c
  2587   00179C  EFD2  F00B         	goto	u1791
  2588   0017A0  EFD4  F00B         	goto	u1790
  2589   0017A4                     u1791:
  2590   0017A4  EFE1  F00B         	goto	l2411
  2591   0017A8                     u1790:
  2592   0017A8                     l2405:
  2593                           
  2594                           ; BSR set to: 0
  2595                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 398:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 399:         ret = (Std_ReturnType)0x01u;
  2596   0017A8  0E01               	movlw	1
  2597   0017AA  6F79               	movwf	Interrupt_INTx_Clear_Flag@ret& (0+255),b
  2598                           
  2599                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 400:     }
  2600   0017AC  EFFF  F00B         	goto	l2413
  2601   0017B0                     l312:
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 406:                 (INTCONbits.INT0IF
      +                           = 0);
  2605   0017B0  92F2               	bcf	242,1,c	;volatile
  2606                           
  2607                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 407:                 break;
  2608   0017B2  EFFF  F00B         	goto	l2413
  2609   0017B6                     l314:
  2610                           
  2611                           ; BSR set to: 0
  2612                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 409:                 (INTCON3bits.INT1I
      +                          F = 0);
  2613   0017B6  90F0               	bcf	240,0,c	;volatile
  2614                           
  2615                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 410:                 break;
  2616   0017B8  EFFF  F00B         	goto	l2413
  2617   0017BC                     l315:
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 412:                 (INTCON3bits.INT2I
      +                          F = 0);
  2621   0017BC  92F0               	bcf	240,1,c	;volatile
  2622                           
  2623                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 413:                 break;
  2624   0017BE  EFFF  F00B         	goto	l2413
  2625   0017C2                     l2411:
  2626                           
  2627                           ; BSR set to: 0
  2628   0017C2  5176               	movf	Interrupt_INTx_Clear_Flag@int_obj& (0+255),w,b
  2629   0017C4  6ED9               	movwf	fsr2l,c
  2630   0017C6  6ADA               	clrf	fsr2h,c
  2631   0017C8  0E04               	movlw	4
  2632   0017CA  26D9               	addwf	fsr2l,f,c
  2633   0017CC  50DF               	movf	indf2,w,c
  2634   0017CE  6F77               	movwf	??_Interrupt_INTx_Clear_Flag& (0+255),b
  2635   0017D0  6B78               	clrf	(??_Interrupt_INTx_Clear_Flag+1)& (0+255),b
  2636                           
  2637                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2638                           ; Switch size 1, requested type "simple"
  2639                           ; Number of cases is 1, Range of values is 0 to 0
  2640                           ; switch strategies available:
  2641                           ; Name         Instructions Cycles
  2642                           ; simple_byte            4     3 (average)
  2643                           ;	Chosen strategy is simple_byte
  2644   0017D2  5178               	movf	(??_Interrupt_INTx_Clear_Flag+1)& (0+255),w,b
  2645   0017D4  0A00               	xorlw	0	; case 0
  2646   0017D6  B4D8               	btfsc	status,2,c
  2647   0017D8  EFF0  F00B         	goto	l2825
  2648   0017DC  EFD4  F00B         	goto	l2405
  2649   0017E0                     l2825:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ; Switch size 1, requested type "simple"
  2653                           ; Number of cases is 3, Range of values is 0 to 2
  2654                           ; switch strategies available:
  2655                           ; Name         Instructions Cycles
  2656                           ; simple_byte           10     6 (average)
  2657                           ;	Chosen strategy is simple_byte
  2658   0017E0  5177               	movf	??_Interrupt_INTx_Clear_Flag& (0+255),w,b
  2659   0017E2  0A00               	xorlw	0	; case 0
  2660   0017E4  B4D8               	btfsc	status,2,c
  2661   0017E6  EFD8  F00B         	goto	l312
  2662   0017EA  0A01               	xorlw	1	; case 1
  2663   0017EC  B4D8               	btfsc	status,2,c
  2664   0017EE  EFDB  F00B         	goto	l314
  2665   0017F2  0A03               	xorlw	3	; case 2
  2666   0017F4  B4D8               	btfsc	status,2,c
  2667   0017F6  EFDE  F00B         	goto	l315
  2668   0017FA  EFD4  F00B         	goto	l2405
  2669   0017FE                     l2413:
  2670                           
  2671                           ; BSR set to: 0
  2672                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 419:     return (ret);
  2673   0017FE  5179               	movf	Interrupt_INTx_Clear_Flag@ret& (0+255),w,b
  2674   001800                     
  2675                           ; BSR set to: 0
  2676   001800  0012               	return		;funcret
  2677   001802                     __end_of_Interrupt_INTx_Clear_Flag:
  2678                           	callstack 0
  2679                           
  2680 ;; *************** function _Interrupt_Manager_Low *****************
  2681 ;; Defined at:
  2682 ;;		line 26 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;Total ram usage:        9 bytes
  2701 ;; Hardware stack levels used: 1
  2702 ;; Hardware stack levels required when called: 9
  2703 ;; This function calls:
  2704 ;;		_INT1_ISR
  2705 ;; This function is called by:
  2706 ;;		Interrupt level 1
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	intcodelo
  2711   000018                     __pintcodelo:
  2712                           	callstack 0
  2713   000018                     _Interrupt_Manager_Low:
  2714                           	callstack 17
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;incstack = 0
  2718   000018  804B               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  2719   00001A  CFD8 F01B          	movff	status,??_Interrupt_Manager_Low
  2720   00001E  CFE8 F01C          	movff	wreg,??_Interrupt_Manager_Low+1
  2721   000022  CFE0 F01D          	movff	bsr,??_Interrupt_Manager_Low+2
  2722   000026  CFFA F01E          	movff	pclath,??_Interrupt_Manager_Low+3
  2723   00002A  CFFB F01F          	movff	pclatu,??_Interrupt_Manager_Low+4
  2724   00002E  CFD9 F020          	movff	fsr2l,??_Interrupt_Manager_Low+5
  2725   000032  CFDA F021          	movff	fsr2h,??_Interrupt_Manager_Low+6
  2726   000036  CFF3 F022          	movff	prodl,??_Interrupt_Manager_Low+7
  2727   00003A  CFF4 F023          	movff	prodh,??_Interrupt_Manager_Low+8
  2728   00003E                     
  2729                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 28:     if ((1 == INTCON3bits.INT1IE) &&
      +                           (1 == INTCON3bits.INT1IF))
  2730   00003E  A6F0               	btfss	240,3,c	;volatile
  2731   000040  EF24  F000         	goto	i1u165_21
  2732   000044  EF26  F000         	goto	i1u165_20
  2733   000048                     i1u165_21:
  2734   000048  EF2F  F000         	goto	i1l398
  2735   00004C                     i1u165_20:
  2736   00004C  A0F0               	btfss	240,0,c	;volatile
  2737   00004E  EF2B  F000         	goto	i1u166_21
  2738   000052  EF2D  F000         	goto	i1u166_20
  2739   000056                     i1u166_21:
  2740   000056  EF2F  F000         	goto	i1l398
  2741   00005A                     i1u166_20:
  2742   00005A                     
  2743                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 29:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 30:         INT1_ISR();
  2744   00005A  ECEF  F00C         	call	_INT1_ISR	;wreg free
  2745   00005E                     i1l398:
  2746   00005E  C023  FFF4         	movff	??_Interrupt_Manager_Low+8,prodh
  2747   000062  C022  FFF3         	movff	??_Interrupt_Manager_Low+7,prodl
  2748   000066  C021  FFDA         	movff	??_Interrupt_Manager_Low+6,fsr2h
  2749   00006A  C020  FFD9         	movff	??_Interrupt_Manager_Low+5,fsr2l
  2750   00006E  C01F  FFFB         	movff	??_Interrupt_Manager_Low+4,pclatu
  2751   000072  C01E  FFFA         	movff	??_Interrupt_Manager_Low+3,pclath
  2752   000076  C01D  FFE0         	movff	??_Interrupt_Manager_Low+2,bsr
  2753   00007A  C01C  FFE8         	movff	??_Interrupt_Manager_Low+1,wreg
  2754   00007E  C01B  FFD8         	movff	??_Interrupt_Manager_Low,status
  2755   000082  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2756   000084  0010               	retfie	
  2757   000086                     __end_of_Interrupt_Manager_Low:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _INT1_ISR *****************
  2761 ;; Defined at:
  2762 ;;		line 615 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 8
  2783 ;; This function calls:
  2784 ;;		NULL
  2785 ;;		_INT0_App_ISR
  2786 ;;		_INT1_App_ISR
  2787 ;;		_INT2_App_ISR
  2788 ;; This function is called by:
  2789 ;;		_Interrupt_Manager_Low
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text18
  2794   0019DE                     __ptext18:
  2795                           	callstack 0
  2796   0019DE                     _INT1_ISR:
  2797                           	callstack 17
  2798   0019DE                     
  2799                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 618:     (INTCON3bits.INT1IF = 0);
  2800   0019DE  90F0               	bcf	240,0,c	;volatile
  2801   0019E0                     
  2802                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 622:     if (INT1_INTERRUPT_HANDLER)
  2803   0019E0  5043               	movf	_INT1_INTERRUPT_HANDLER^0,w,c
  2804   0019E2  1044               	iorwf	(_INT1_INTERRUPT_HANDLER+1)^0,w,c
  2805   0019E4  B4D8               	btfsc	status,2,c
  2806   0019E6  EFF7  F00C         	goto	i1u146_21
  2807   0019EA  EFF9  F00C         	goto	i1u146_20
  2808   0019EE                     i1u146_21:
  2809   0019EE  EF06  F00D         	goto	i1l371
  2810   0019F2                     i1u146_20:
  2811   0019F2                     
  2812                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 623:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 624:         INT1_INTERRUPT_HANDLER();
  2813   0019F2  D802               	call	i1u147_28
  2814   0019F4  EF06  F00D         	goto	i1u147_29
  2815   0019F8                     i1u147_28:
  2816   0019F8  0005               	push	
  2817   0019FA  6EFA               	movwf	pclath,c
  2818   0019FC  5043               	movf	_INT1_INTERRUPT_HANDLER^0,w,c
  2819   0019FE  6EFD               	movwf	tosl,c
  2820   001A00  5044               	movf	(_INT1_INTERRUPT_HANDLER+1)^0,w,c
  2821   001A02  6EFE               	movwf	tosh,c
  2822   001A04  50F8               	movf	tblptru,w,c
  2823   001A06  6EFF               	movwf	tosu,c
  2824   001A08  50FA               	movf	pclath,w,c
  2825   001A0A  0012               	return		;indir
  2826   001A0C                     i1u147_29:
  2827   001A0C                     i1l371:
  2828   001A0C  0012               	return		;funcret
  2829   001A0E                     __end_of_INT1_ISR:
  2830                           	callstack 0
  2831                           
  2832 ;; *************** function _INT1_App_ISR *****************
  2833 ;; Defined at:
  2834 ;;		line 17 in file "app.c"
  2835 ;; Parameters:    Size  Location     Type
  2836 ;;		None
  2837 ;; Auto vars:     Size  Location     Type
  2838 ;;		None
  2839 ;; Return value:  Size  Location     Type
  2840 ;;                  1    wreg      void 
  2841 ;; Registers used:
  2842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2843 ;; Tracked objects:
  2844 ;;		On entry : 0/0
  2845 ;;		On exit  : 0/0
  2846 ;;		Unchanged: 0/0
  2847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2848 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2852 ;;Total ram usage:        2 bytes
  2853 ;; Hardware stack levels used: 1
  2854 ;; Hardware stack levels required when called: 7
  2855 ;; This function calls:
  2856 ;;		_led_toggle
  2857 ;; This function is called by:
  2858 ;;		_INT0_ISR
  2859 ;;		_INT1_ISR
  2860 ;;		_INT2_ISR
  2861 ;; This function uses a non-reentrant model
  2862 ;;
  2863                           
  2864                           	psect	text19
  2865   001B1E                     __ptext19:
  2866                           	callstack 0
  2867   001B1E                     _INT1_App_ISR:
  2868                           	callstack 0
  2869                           
  2870                           ;Skip over the trampoline to the duplicate function for level 2
  2871   001B1E  A24B               	btfss	int$flags,1,c
  2872   001B20  EF94  F00D         	goto	_INT1_App_ISR$intlevel1
  2873   001B24  EFCE  F00D         	goto	i2_INT1_App_ISR
  2874   001B28                     _INT1_App_ISR$intlevel1:
  2875                           	callstack 17
  2876   001B28                     
  2877                           ;app.c: 19:     led_toggle(&led2);
  2878   001B28  0E3F               	movlw	low _led2
  2879   001B2A  6E16               	movwf	led_toggle@led^0,c
  2880   001B2C  EC37  F00C         	call	_led_toggle	;wreg free
  2881   001B30                     
  2882                           ;app.c: 20:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  2883   001B30  0E03               	movlw	3
  2884   001B32  6E1A               	movwf	(??_INT1_App_ISR+1)^0,c
  2885   001B34  0E8A               	movlw	138
  2886   001B36  6E19               	movwf	??_INT1_App_ISR^0,c
  2887   001B38  0E56               	movlw	86
  2888   001B3A                     i1u207_27:
  2889   001B3A  2EE8               	decfsz	wreg,f,c
  2890   001B3C  D7FE               	bra	i1u207_27
  2891   001B3E  2E19               	decfsz	??_INT1_App_ISR^0,f,c
  2892   001B40  D7FC               	bra	i1u207_27
  2893   001B42  2E1A               	decfsz	(??_INT1_App_ISR+1)^0,f,c
  2894   001B44  D7FA               	bra	i1u207_27
  2895   001B46  0012               	return		;funcret
  2896   001B48                     __end_of_INT1_App_ISR:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function _INT0_App_ISR *****************
  2900 ;; Defined at:
  2901 ;;		line 12 in file "app.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2919 ;;Total ram usage:        2 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 7
  2922 ;; This function calls:
  2923 ;;		_led_toggle
  2924 ;; This function is called by:
  2925 ;;		_INT0_ISR
  2926 ;;		_INT1_ISR
  2927 ;;		_INT2_ISR
  2928 ;; This function uses a non-reentrant model
  2929 ;;
  2930                           
  2931                           	psect	text20
  2932   001B48                     __ptext20:
  2933                           	callstack 0
  2934   001B48                     _INT0_App_ISR:
  2935                           	callstack 0
  2936                           
  2937                           ;Skip over the trampoline to the duplicate function for level 2
  2938   001B48  A24B               	btfss	int$flags,1,c
  2939   001B4A  EFA9  F00D         	goto	_INT0_App_ISR$intlevel1
  2940   001B4E  EFDE  F00D         	goto	i2_INT0_App_ISR
  2941   001B52                     _INT0_App_ISR$intlevel1:
  2942                           	callstack 17
  2943   001B52                     
  2944                           ;app.c: 14:     led_toggle(&led1);
  2945   001B52  0E40               	movlw	low _led1
  2946   001B54  6E16               	movwf	led_toggle@led^0,c
  2947   001B56  EC37  F00C         	call	_led_toggle	;wreg free
  2948   001B5A                     
  2949                           ;app.c: 15:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  2950   001B5A  0E03               	movlw	3
  2951   001B5C  6E1A               	movwf	(??_INT0_App_ISR+1)^0,c
  2952   001B5E  0E8A               	movlw	138
  2953   001B60  6E19               	movwf	??_INT0_App_ISR^0,c
  2954   001B62  0E56               	movlw	86
  2955   001B64                     i1u208_27:
  2956   001B64  2EE8               	decfsz	wreg,f,c
  2957   001B66  D7FE               	bra	i1u208_27
  2958   001B68  2E19               	decfsz	??_INT0_App_ISR^0,f,c
  2959   001B6A  D7FC               	bra	i1u208_27
  2960   001B6C  2E1A               	decfsz	(??_INT0_App_ISR+1)^0,f,c
  2961   001B6E  D7FA               	bra	i1u208_27
  2962   001B70  0012               	return		;funcret
  2963   001B72                     __end_of_INT0_App_ISR:
  2964                           	callstack 0
  2965                           
  2966 ;; *************** function _INT2_App_ISR *****************
  2967 ;; Defined at:
  2968 ;;		line 23 in file "app.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2984 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; Hardware stack levels required when called: 7
  2989 ;; This function calls:
  2990 ;;		_led_toggle
  2991 ;; This function is called by:
  2992 ;;		_INT0_ISR
  2993 ;;		_INT1_ISR
  2994 ;;		_INT2_ISR
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text21
  2999   001B72                     __ptext21:
  3000                           	callstack 0
  3001   001B72                     _INT2_App_ISR:
  3002                           	callstack 0
  3003                           
  3004                           ;Skip over the trampoline to the duplicate function for level 2
  3005   001B72  A24B               	btfss	int$flags,1,c
  3006   001B74  EFBE  F00D         	goto	_INT2_App_ISR$intlevel1
  3007   001B78  EFEE  F00D         	goto	i2_INT2_App_ISR
  3008   001B7C                     _INT2_App_ISR$intlevel1:
  3009                           	callstack 17
  3010   001B7C                     
  3011                           ;app.c: 25:     led_toggle(&led3);
  3012   001B7C  0E3E               	movlw	low _led3
  3013   001B7E  6E16               	movwf	led_toggle@led^0,c
  3014   001B80  EC37  F00C         	call	_led_toggle	;wreg free
  3015   001B84                     
  3016                           ;app.c: 26:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  3017   001B84  0E03               	movlw	3
  3018   001B86  6E1A               	movwf	(??_INT2_App_ISR+1)^0,c
  3019   001B88  0E8A               	movlw	138
  3020   001B8A  6E19               	movwf	??_INT2_App_ISR^0,c
  3021   001B8C  0E56               	movlw	86
  3022   001B8E                     i1u209_27:
  3023   001B8E  2EE8               	decfsz	wreg,f,c
  3024   001B90  D7FE               	bra	i1u209_27
  3025   001B92  2E19               	decfsz	??_INT2_App_ISR^0,f,c
  3026   001B94  D7FC               	bra	i1u209_27
  3027   001B96  2E1A               	decfsz	(??_INT2_App_ISR+1)^0,f,c
  3028   001B98  D7FA               	bra	i1u209_27
  3029   001B9A  0012               	return		;funcret
  3030   001B9C                     __end_of_INT2_App_ISR:
  3031                           	callstack 0
  3032                           
  3033 ;; *************** function _led_toggle *****************
  3034 ;; Defined at:
  3035 ;;		line 108 in file "ECU_Layer/led/ecu_led.c"
  3036 ;; Parameters:    Size  Location     Type
  3037 ;;  led             1   21[COMRAM] PTR const struct .
  3038 ;;		 -> led3(1), led2(1), led1(1), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  pin             1   23[COMRAM] struct .
  3041 ;;  ret             1    0        unsigned char 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  1    wreg      unsigned char 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        3 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 6
  3058 ;; This function calls:
  3059 ;;		_gpio_pin_toggle_logic
  3060 ;; This function is called by:
  3061 ;;		_INT0_App_ISR
  3062 ;;		_INT1_App_ISR
  3063 ;;		_INT2_App_ISR
  3064 ;; This function uses a non-reentrant model
  3065 ;;
  3066                           
  3067                           	psect	text22
  3068   00186E                     __ptext22:
  3069                           	callstack 0
  3070   00186E                     _led_toggle:
  3071                           	callstack 17
  3072   00186E                     
  3073                           ;ECU_Layer/led/ecu_led.c: 111:     if (((void*)0) == led)
  3074   00186E  5016               	movf	led_toggle@led^0,w,c
  3075   001870  A4D8               	btfss	status,2,c
  3076   001872  EF3D  F00C         	goto	i1u113_21
  3077   001876  EF3F  F00C         	goto	i1u113_20
  3078   00187A                     i1u113_21:
  3079   00187A  EF41  F00C         	goto	i1l30
  3080   00187E                     i1u113_20:
  3081   00187E                     
  3082                           ;ECU_Layer/led/ecu_led.c: 114:     }
  3083   00187E  EF69  F00C         	goto	i1l34
  3084   001882                     i1l30:
  3085                           
  3086                           ;ECU_Layer/led/ecu_led.c: 116:     {;ECU_Layer/led/ecu_led.c: 117:         pin_config_t 
      +                          pin = {
  3087   001882  C047  F018         	movff	led_toggle@F3171,led_toggle@pin
  3088   001886  5016               	movf	led_toggle@led^0,w,c
  3089   001888  6ED9               	movwf	fsr2l,c
  3090   00188A  6ADA               	clrf	fsr2h,c
  3091   00188C  50DF               	movf	223,w,c
  3092   00188E  0B0F               	andlw	15
  3093   001890  6E17               	movwf	??_led_toggle^0,c
  3094   001892  5018               	movf	led_toggle@pin^0,w,c
  3095   001894  1817               	xorwf	??_led_toggle^0,w,c
  3096   001896  0BF8               	andlw	-8
  3097   001898  1817               	xorwf	??_led_toggle^0,w,c
  3098   00189A  6E18               	movwf	led_toggle@pin^0,c
  3099   00189C  5016               	movf	led_toggle@led^0,w,c
  3100   00189E  6ED9               	movwf	fsr2l,c
  3101   0018A0  6ADA               	clrf	fsr2h,c
  3102   0018A2  38DF               	swapf	223,w,c
  3103   0018A4  0B07               	andlw	7
  3104   0018A6  6E17               	movwf	??_led_toggle^0,c
  3105   0018A8  4617               	rlncf	??_led_toggle^0,f,c
  3106   0018AA  4617               	rlncf	??_led_toggle^0,f,c
  3107   0018AC  4617               	rlncf	??_led_toggle^0,f,c
  3108   0018AE  5018               	movf	led_toggle@pin^0,w,c
  3109   0018B0  1817               	xorwf	??_led_toggle^0,w,c
  3110   0018B2  0BC7               	andlw	-57
  3111   0018B4  1817               	xorwf	??_led_toggle^0,w,c
  3112   0018B6  6E18               	movwf	led_toggle@pin^0,c
  3113   0018B8  9C18               	bcf	led_toggle@pin^0,6,c
  3114   0018BA  5016               	movf	led_toggle@led^0,w,c
  3115   0018BC  6ED9               	movwf	fsr2l,c
  3116   0018BE  6ADA               	clrf	fsr2h,c
  3117   0018C0  AEDF               	btfss	indf2,7,c
  3118   0018C2  D002               	bra	i1u114_25
  3119   0018C4  8E18               	bsf	led_toggle@pin^0,7,c
  3120   0018C6  D001               	bra	i1u114_27
  3121   0018C8                     i1u114_25:
  3122   0018C8  9E18               	bcf	led_toggle@pin^0,7,c
  3123   0018CA                     i1u114_27:
  3124   0018CA                     
  3125                           ;ECU_Layer/led/ecu_led.c: 123:         gpio_pin_toggle_logic(&pin);
  3126   0018CA  0E18               	movlw	low led_toggle@pin
  3127   0018CC  6E11               	movwf	gpio_pin_toggle_logic@_pin_config_t^0,c
  3128   0018CE  EC5F  F00A         	call	_gpio_pin_toggle_logic	;wreg free
  3129   0018D2                     i1l34:
  3130   0018D2  0012               	return		;funcret
  3131   0018D4                     __end_of_led_toggle:
  3132                           	callstack 0
  3133                           
  3134 ;; *************** function _gpio_pin_toggle_logic *****************
  3135 ;; Defined at:
  3136 ;;		line 150 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;  _pin_config_    1   16[COMRAM] PTR const struct .
  3139 ;;		 -> led_toggle@pin(1), 
  3140 ;; Auto vars:     Size  Location     Type
  3141 ;;  ret             1    0        unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      unsigned char 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;Total ram usage:        5 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 5
  3158 ;; This function calls:
  3159 ;;		Nothing
  3160 ;; This function is called by:
  3161 ;;		_led_toggle
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text23
  3166   0014BE                     __ptext23:
  3167                           	callstack 0
  3168   0014BE                     _gpio_pin_toggle_logic:
  3169                           	callstack 17
  3170   0014BE                     
  3171                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     if (((void*)0) == _pin_config_t || _pin_config_t->
      +                          pin > 8 - 1)
  3172   0014BE  5011               	movf	gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3173   0014C0  B4D8               	btfsc	status,2,c
  3174   0014C2  EF65  F00A         	goto	i1u100_21
  3175   0014C6  EF67  F00A         	goto	i1u100_20
  3176   0014CA                     i1u100_21:
  3177   0014CA  EF77  F00A         	goto	i1l1805
  3178   0014CE                     i1u100_20:
  3179   0014CE  5011               	movf	gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3180   0014D0  6ED9               	movwf	fsr2l,c
  3181   0014D2  6ADA               	clrf	fsr2h,c
  3182   0014D4  30DF               	rrcf	223,w,c
  3183   0014D6  32E8               	rrcf	wreg,f,c
  3184   0014D8  32E8               	rrcf	wreg,f,c
  3185   0014DA  0B07               	andlw	7
  3186   0014DC  6E12               	movwf	??_gpio_pin_toggle_logic^0,c
  3187   0014DE  0E07               	movlw	7
  3188   0014E0  6412               	cpfsgt	??_gpio_pin_toggle_logic^0,c
  3189   0014E2  EF75  F00A         	goto	i1u101_21
  3190   0014E6  EF77  F00A         	goto	i1u101_20
  3191   0014EA                     i1u101_21:
  3192   0014EA  EF79  F00A         	goto	i1l1807
  3193   0014EE                     i1u101_20:
  3194   0014EE                     i1l1805:
  3195                           
  3196                           ;MCAL_Layer/GPIO/hal_gpio.c: 156:     }
  3197   0014EE  EF9F  F00A         	goto	i1l150
  3198   0014F2                     i1l1807:
  3199                           
  3200                           ;MCAL_Layer/GPIO/hal_gpio.c: 158:     {;MCAL_Layer/GPIO/hal_gpio.c: 159:         (*lat_r
      +                          egisters[_pin_config_t->port] ^= ((uint8)1 << _pin_config_t->pin));
  3201   0014F2  5011               	movf	gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3202   0014F4  6ED9               	movwf	fsr2l,c
  3203   0014F6  6ADA               	clrf	fsr2h,c
  3204   0014F8  30DF               	rrcf	223,w,c
  3205   0014FA  32E8               	rrcf	wreg,f,c
  3206   0014FC  32E8               	rrcf	wreg,f,c
  3207   0014FE  0B07               	andlw	7
  3208   001500  6E12               	movwf	??_gpio_pin_toggle_logic^0,c
  3209   001502  0E01               	movlw	1
  3210   001504  6E13               	movwf	(??_gpio_pin_toggle_logic+1)^0,c
  3211   001506  2A12               	incf	??_gpio_pin_toggle_logic^0,f,c
  3212   001508  EF88  F00A         	goto	i1u102_24
  3213   00150C                     i1u102_25:
  3214   00150C  90D8               	bcf	status,0,c
  3215   00150E  3613               	rlcf	(??_gpio_pin_toggle_logic+1)^0,f,c
  3216   001510                     i1u102_24:
  3217   001510  2E12               	decfsz	??_gpio_pin_toggle_logic^0,f,c
  3218   001512  EF86  F00A         	goto	i1u102_25
  3219   001516  5011               	movf	gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3220   001518  6ED9               	movwf	fsr2l,c
  3221   00151A  6ADA               	clrf	fsr2h,c
  3222   00151C  50DF               	movf	223,w,c
  3223   00151E  0B07               	andlw	7
  3224   001520  0D02               	mullw	2
  3225   001522  50F3               	movf	243,w,c
  3226   001524  0F2E               	addlw	low _lat_registers
  3227   001526  6ED9               	movwf	fsr2l,c
  3228   001528  6ADA               	clrf	fsr2h,c
  3229   00152A  CFDE F014          	movff	postinc2,??_gpio_pin_toggle_logic+2
  3230   00152E  CFDD F015          	movff	postdec2,??_gpio_pin_toggle_logic+3
  3231   001532  C014  FFD9         	movff	??_gpio_pin_toggle_logic+2,fsr2l
  3232   001536  C015  FFDA         	movff	??_gpio_pin_toggle_logic+3,fsr2h
  3233   00153A  5013               	movf	(??_gpio_pin_toggle_logic+1)^0,w,c
  3234   00153C  1ADF               	xorwf	indf2,f,c
  3235   00153E                     i1l150:
  3236   00153E  0012               	return		;funcret
  3237   001540                     __end_of_gpio_pin_toggle_logic:
  3238                           	callstack 0
  3239                           
  3240 ;; *************** function _Interrupt_Manager_High *****************
  3241 ;; Defined at:
  3242 ;;		line 12 in file "MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;		None
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3258 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;Total ram usage:        6 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 4
  3263 ;; This function calls:
  3264 ;;		_INT0_ISR
  3265 ;;		_INT2_ISR
  3266 ;; This function is called by:
  3267 ;;		Interrupt level 2
  3268 ;; This function uses a non-reentrant model
  3269 ;;
  3270                           
  3271                           	psect	intcode
  3272   000008                     __pintcode:
  3273                           	callstack 0
  3274   000008                     _Interrupt_Manager_High:
  3275                           	callstack 17
  3276                           
  3277                           ;incstack = 0
  3278   000008  824B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3279   00000A  EF57  F00B         	goto	int_func
  3280                           
  3281                           	psect	intcode_body
  3282   0016AE                     __pintcode_body:
  3283                           	callstack 17
  3284   0016AE                     int_func:
  3285                           	callstack 17
  3286   0016AE  CFFA F00B          	movff	pclath,??_Interrupt_Manager_High
  3287   0016B2  CFFB F00C          	movff	pclatu,??_Interrupt_Manager_High+1
  3288   0016B6  CFD9 F00D          	movff	fsr2l,??_Interrupt_Manager_High+2
  3289   0016BA  CFDA F00E          	movff	fsr2h,??_Interrupt_Manager_High+3
  3290   0016BE  CFF3 F00F          	movff	prodl,??_Interrupt_Manager_High+4
  3291   0016C2  CFF4 F010          	movff	prodh,??_Interrupt_Manager_High+5
  3292   0016C6                     
  3293                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 14:     if ((1 == INTCONbits.INT0IE) && 
      +                          (1 == INTCONbits.INT0IF))
  3294   0016C6  A8F2               	btfss	242,4,c	;volatile
  3295   0016C8  EF68  F00B         	goto	i2u161_41
  3296   0016CC  EF6A  F00B         	goto	i2u161_40
  3297   0016D0                     i2u161_41:
  3298   0016D0  EF73  F00B         	goto	i2l2265
  3299   0016D4                     i2u161_40:
  3300   0016D4  A2F2               	btfss	242,1,c	;volatile
  3301   0016D6  EF6F  F00B         	goto	i2u162_41
  3302   0016DA  EF71  F00B         	goto	i2u162_40
  3303   0016DE                     i2u162_41:
  3304   0016DE  EF73  F00B         	goto	i2l2265
  3305   0016E2                     i2u162_40:
  3306   0016E2                     
  3307                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 15:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 16:         INT0_ISR();
  3308   0016E2  EC1F  F00D         	call	_INT0_ISR	;wreg free
  3309   0016E6                     i2l2265:
  3310                           
  3311                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 18:     if ((1 == INTCON3bits.INT2IE) &&
      +                           (1 == INTCON3bits.INT2IF))
  3312   0016E6  A8F0               	btfss	240,4,c	;volatile
  3313   0016E8  EF78  F00B         	goto	i2u163_41
  3314   0016EC  EF7A  F00B         	goto	i2u163_40
  3315   0016F0                     i2u163_41:
  3316   0016F0  EF83  F00B         	goto	i2l392
  3317   0016F4                     i2u163_40:
  3318   0016F4  A2F0               	btfss	240,1,c	;volatile
  3319   0016F6  EF7F  F00B         	goto	i2u164_41
  3320   0016FA  EF81  F00B         	goto	i2u164_40
  3321   0016FE                     i2u164_41:
  3322   0016FE  EF83  F00B         	goto	i2l392
  3323   001702                     i2u164_40:
  3324   001702                     
  3325                           ;MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 19:     {;MCAL_Layer/Interrupt/mcal_inte
      +                          rrupt_manager.c: 20:         INT2_ISR();
  3326   001702  EC07  F00D         	call	_INT2_ISR	;wreg free
  3327   001706                     i2l392:
  3328   001706  C010  FFF4         	movff	??_Interrupt_Manager_High+5,prodh
  3329   00170A  C00F  FFF3         	movff	??_Interrupt_Manager_High+4,prodl
  3330   00170E  C00E  FFDA         	movff	??_Interrupt_Manager_High+3,fsr2h
  3331   001712  C00D  FFD9         	movff	??_Interrupt_Manager_High+2,fsr2l
  3332   001716  C00C  FFFB         	movff	??_Interrupt_Manager_High+1,pclatu
  3333   00171A  C00B  FFFA         	movff	??_Interrupt_Manager_High,pclath
  3334   00171E  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3335   001720  0011               	retfie		f
  3336   001722                     __end_of_Interrupt_Manager_High:
  3337                           	callstack 0
  3338                           
  3339 ;; *************** function _INT2_ISR *****************
  3340 ;; Defined at:
  3341 ;;		line 631 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3342 ;; Parameters:    Size  Location     Type
  3343 ;;		None
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      void 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;Total ram usage:        0 bytes
  3360 ;; Hardware stack levels used: 1
  3361 ;; Hardware stack levels required when called: 3
  3362 ;; This function calls:
  3363 ;;		NULL
  3364 ;;		i2_INT0_App_ISR
  3365 ;;		i2_INT1_App_ISR
  3366 ;;		i2_INT2_App_ISR
  3367 ;; This function is called by:
  3368 ;;		_Interrupt_Manager_High
  3369 ;; This function uses a non-reentrant model
  3370 ;;
  3371                           
  3372                           	psect	text25
  3373   001A0E                     __ptext25:
  3374                           	callstack 0
  3375   001A0E                     _INT2_ISR:
  3376                           	callstack 17
  3377   001A0E                     
  3378                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 634:     (INTCON3bits.INT2IF = 0);
  3379   001A0E  92F0               	bcf	240,1,c	;volatile
  3380   001A10                     
  3381                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 638:     if (INT2_INTERRUPT_HANDLER)
  3382   001A10  5041               	movf	_INT2_INTERRUPT_HANDLER^0,w,c
  3383   001A12  1042               	iorwf	(_INT2_INTERRUPT_HANDLER+1)^0,w,c
  3384   001A14  B4D8               	btfsc	status,2,c
  3385   001A16  EF0F  F00D         	goto	i2u148_41
  3386   001A1A  EF11  F00D         	goto	i2u148_40
  3387   001A1E                     i2u148_41:
  3388   001A1E  EF1E  F00D         	goto	i2l375
  3389   001A22                     i2u148_40:
  3390   001A22                     
  3391                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 639:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 640:         INT2_INTERRUPT_HANDLER();
  3392   001A22  D802               	call	i2u149_48
  3393   001A24  EF1E  F00D         	goto	i2u149_49
  3394   001A28                     i2u149_48:
  3395   001A28  0005               	push	
  3396   001A2A  6EFA               	movwf	pclath,c
  3397   001A2C  5041               	movf	_INT2_INTERRUPT_HANDLER^0,w,c
  3398   001A2E  6EFD               	movwf	tosl,c
  3399   001A30  5042               	movf	(_INT2_INTERRUPT_HANDLER+1)^0,w,c
  3400   001A32  6EFE               	movwf	tosh,c
  3401   001A34  50F8               	movf	tblptru,w,c
  3402   001A36  6EFF               	movwf	tosu,c
  3403   001A38  50FA               	movf	pclath,w,c
  3404   001A3A  0012               	return		;indir
  3405   001A3C                     i2u149_49:
  3406   001A3C                     i2l375:
  3407   001A3C  0012               	return		;funcret
  3408   001A3E                     __end_of_INT2_ISR:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function _INT0_ISR *****************
  3412 ;; Defined at:
  3413 ;;		line 599 in file "MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;		None
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;		None
  3418 ;; Return value:  Size  Location     Type
  3419 ;;                  1    wreg      void 
  3420 ;; Registers used:
  3421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  3422 ;; Tracked objects:
  3423 ;;		On entry : 0/0
  3424 ;;		On exit  : 0/0
  3425 ;;		Unchanged: 0/0
  3426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;Total ram usage:        0 bytes
  3432 ;; Hardware stack levels used: 1
  3433 ;; Hardware stack levels required when called: 3
  3434 ;; This function calls:
  3435 ;;		NULL
  3436 ;;		i2_INT0_App_ISR
  3437 ;;		i2_INT1_App_ISR
  3438 ;;		i2_INT2_App_ISR
  3439 ;; This function is called by:
  3440 ;;		_Interrupt_Manager_High
  3441 ;; This function uses a non-reentrant model
  3442 ;;
  3443                           
  3444                           	psect	text26
  3445   001A3E                     __ptext26:
  3446                           	callstack 0
  3447   001A3E                     _INT0_ISR:
  3448                           	callstack 17
  3449   001A3E                     
  3450                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 602:     (INTCONbits.INT0IF = 0);
  3451   001A3E  92F2               	bcf	242,1,c	;volatile
  3452   001A40                     
  3453                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 606:     if (INT0_INTERRUPT_HANDLER)
  3454   001A40  5045               	movf	_INT0_INTERRUPT_HANDLER^0,w,c
  3455   001A42  1046               	iorwf	(_INT0_INTERRUPT_HANDLER+1)^0,w,c
  3456   001A44  B4D8               	btfsc	status,2,c
  3457   001A46  EF27  F00D         	goto	i2u144_41
  3458   001A4A  EF29  F00D         	goto	i2u144_40
  3459   001A4E                     i2u144_41:
  3460   001A4E  EF36  F00D         	goto	i2l367
  3461   001A52                     i2u144_40:
  3462   001A52                     
  3463                           ;MCAL_Layer/Interrupt/mcal_external_interrupt.c: 607:     {;MCAL_Layer/Interrupt/mcal_ex
      +                          ternal_interrupt.c: 608:         INT0_INTERRUPT_HANDLER();
  3464   001A52  D802               	call	i2u145_48
  3465   001A54  EF36  F00D         	goto	i2u145_49
  3466   001A58                     i2u145_48:
  3467   001A58  0005               	push	
  3468   001A5A  6EFA               	movwf	pclath,c
  3469   001A5C  5045               	movf	_INT0_INTERRUPT_HANDLER^0,w,c
  3470   001A5E  6EFD               	movwf	tosl,c
  3471   001A60  5046               	movf	(_INT0_INTERRUPT_HANDLER+1)^0,w,c
  3472   001A62  6EFE               	movwf	tosh,c
  3473   001A64  50F8               	movf	tblptru,w,c
  3474   001A66  6EFF               	movwf	tosu,c
  3475   001A68  50FA               	movf	pclath,w,c
  3476   001A6A  0012               	return		;indir
  3477   001A6C                     i2u145_49:
  3478   001A6C                     i2l367:
  3479   001A6C  0012               	return		;funcret
  3480   001A6E                     __end_of_INT0_ISR:
  3481                           	callstack 0
  3482                           
  3483 ;; *************** function i2_INT1_App_ISR *****************
  3484 ;; Defined at:
  3485 ;;		line 17 in file "app.c"
  3486 ;; Parameters:    Size  Location     Type
  3487 ;;		None
  3488 ;; Auto vars:     Size  Location     Type
  3489 ;;		None
  3490 ;; Return value:  Size  Location     Type
  3491 ;;                  1    wreg      void 
  3492 ;; Registers used:
  3493 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3494 ;; Tracked objects:
  3495 ;;		On entry : 0/0
  3496 ;;		On exit  : 0/0
  3497 ;;		Unchanged: 0/0
  3498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3501 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;Total ram usage:        2 bytes
  3504 ;; Hardware stack levels used: 1
  3505 ;; Hardware stack levels required when called: 2
  3506 ;; This function calls:
  3507 ;;		i2_led_toggle
  3508 ;; This function is called by:
  3509 ;;		_INT0_ISR
  3510 ;;		_INT1_ISR
  3511 ;;		_INT2_ISR
  3512 ;; This function uses a non-reentrant model
  3513 ;;
  3514                           
  3515                           	psect	text27
  3516   001B9C                     __ptext27:
  3517                           	callstack 0
  3518   001B9C                     i2_INT1_App_ISR:
  3519                           	callstack 17
  3520   001B9C                     
  3521                           ;app.c: 19:     led_toggle(&led2);
  3522   001B9C  0E3F               	movlw	low _led2
  3523   001B9E  6E06               	movwf	i2led_toggle@led^0,c
  3524   001BA0  EC6A  F00C         	call	i2_led_toggle	;wreg free
  3525   001BA4                     
  3526                           ;app.c: 20:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  3527   001BA4  0E03               	movlw	3
  3528   001BA6  6E0A               	movwf	(??i2_INT1_App_ISR+1)^0,c
  3529   001BA8  0E8A               	movlw	138
  3530   001BAA  6E09               	movwf	??i2_INT1_App_ISR^0,c
  3531   001BAC  0E56               	movlw	86
  3532   001BAE                     i2u210_47:
  3533   001BAE  2EE8               	decfsz	wreg,f,c
  3534   001BB0  D7FE               	bra	i2u210_47
  3535   001BB2  2E09               	decfsz	??i2_INT1_App_ISR^0,f,c
  3536   001BB4  D7FC               	bra	i2u210_47
  3537   001BB6  2E0A               	decfsz	(??i2_INT1_App_ISR+1)^0,f,c
  3538   001BB8  D7FA               	bra	i2u210_47
  3539   001BBA  0012               	return		;funcret
  3540   001BBC                     __end_ofi2_INT1_App_ISR:
  3541                           	callstack 0
  3542                           
  3543 ;; *************** function i2_INT0_App_ISR *****************
  3544 ;; Defined at:
  3545 ;;		line 12 in file "app.c"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;		None
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used: 1
  3565 ;; Hardware stack levels required when called: 2
  3566 ;; This function calls:
  3567 ;;		i2_led_toggle
  3568 ;; This function is called by:
  3569 ;;		_INT0_ISR
  3570 ;;		_INT1_ISR
  3571 ;;		_INT2_ISR
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text28
  3576   001BBC                     __ptext28:
  3577                           	callstack 0
  3578   001BBC                     i2_INT0_App_ISR:
  3579                           	callstack 17
  3580   001BBC                     
  3581                           ;app.c: 14:     led_toggle(&led1);
  3582   001BBC  0E40               	movlw	low _led1
  3583   001BBE  6E06               	movwf	i2led_toggle@led^0,c
  3584   001BC0  EC6A  F00C         	call	i2_led_toggle	;wreg free
  3585   001BC4                     
  3586                           ;app.c: 15:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  3587   001BC4  0E03               	movlw	3
  3588   001BC6  6E0A               	movwf	(??i2_INT0_App_ISR+1)^0,c
  3589   001BC8  0E8A               	movlw	138
  3590   001BCA  6E09               	movwf	??i2_INT0_App_ISR^0,c
  3591   001BCC  0E56               	movlw	86
  3592   001BCE                     i2u211_47:
  3593   001BCE  2EE8               	decfsz	wreg,f,c
  3594   001BD0  D7FE               	bra	i2u211_47
  3595   001BD2  2E09               	decfsz	??i2_INT0_App_ISR^0,f,c
  3596   001BD4  D7FC               	bra	i2u211_47
  3597   001BD6  2E0A               	decfsz	(??i2_INT0_App_ISR+1)^0,f,c
  3598   001BD8  D7FA               	bra	i2u211_47
  3599   001BDA  0012               	return		;funcret
  3600   001BDC                     __end_ofi2_INT0_App_ISR:
  3601                           	callstack 0
  3602                           
  3603 ;; *************** function i2_INT2_App_ISR *****************
  3604 ;; Defined at:
  3605 ;;		line 23 in file "app.c"
  3606 ;; Parameters:    Size  Location     Type
  3607 ;;		None
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;		None
  3610 ;; Return value:  Size  Location     Type
  3611 ;;                  1    wreg      void 
  3612 ;; Registers used:
  3613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3614 ;; Tracked objects:
  3615 ;;		On entry : 0/0
  3616 ;;		On exit  : 0/0
  3617 ;;		Unchanged: 0/0
  3618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;Total ram usage:        2 bytes
  3624 ;; Hardware stack levels used: 1
  3625 ;; Hardware stack levels required when called: 2
  3626 ;; This function calls:
  3627 ;;		i2_led_toggle
  3628 ;; This function is called by:
  3629 ;;		_INT0_ISR
  3630 ;;		_INT1_ISR
  3631 ;;		_INT2_ISR
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text29
  3636   001BDC                     __ptext29:
  3637                           	callstack 0
  3638   001BDC                     i2_INT2_App_ISR:
  3639                           	callstack 17
  3640   001BDC                     
  3641                           ;app.c: 25:     led_toggle(&led3);
  3642   001BDC  0E3E               	movlw	low _led3
  3643   001BDE  6E06               	movwf	i2led_toggle@led^0,c
  3644   001BE0  EC6A  F00C         	call	i2_led_toggle	;wreg free
  3645   001BE4                     
  3646                           ;app.c: 26:     _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  3647   001BE4  0E03               	movlw	3
  3648   001BE6  6E0A               	movwf	(??i2_INT2_App_ISR+1)^0,c
  3649   001BE8  0E8A               	movlw	138
  3650   001BEA  6E09               	movwf	??i2_INT2_App_ISR^0,c
  3651   001BEC  0E56               	movlw	86
  3652   001BEE                     i2u212_47:
  3653   001BEE  2EE8               	decfsz	wreg,f,c
  3654   001BF0  D7FE               	bra	i2u212_47
  3655   001BF2  2E09               	decfsz	??i2_INT2_App_ISR^0,f,c
  3656   001BF4  D7FC               	bra	i2u212_47
  3657   001BF6  2E0A               	decfsz	(??i2_INT2_App_ISR+1)^0,f,c
  3658   001BF8  D7FA               	bra	i2u212_47
  3659   001BFA  0012               	return		;funcret
  3660   001BFC                     __end_ofi2_INT2_App_ISR:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function i2_led_toggle *****************
  3664 ;; Defined at:
  3665 ;;		line 108 in file "ECU_Layer/led/ecu_led.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  led             1    5[COMRAM] PTR const struct .
  3668 ;;		 -> led3(1), led2(1), led1(1), 
  3669 ;; Auto vars:     Size  Location     Type
  3670 ;;  pin             1    7[COMRAM] struct .
  3671 ;;  ret             1    0        unsigned char 
  3672 ;; Return value:  Size  Location     Type
  3673 ;;                  1    wreg      unsigned char 
  3674 ;; Registers used:
  3675 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3676 ;; Tracked objects:
  3677 ;;		On entry : 0/0
  3678 ;;		On exit  : 0/0
  3679 ;;		Unchanged: 0/0
  3680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3681 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3682 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3683 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3684 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3685 ;;Total ram usage:        3 bytes
  3686 ;; Hardware stack levels used: 1
  3687 ;; Hardware stack levels required when called: 1
  3688 ;; This function calls:
  3689 ;;		i2_gpio_pin_toggle_logic
  3690 ;; This function is called by:
  3691 ;;		i2_INT0_App_ISR
  3692 ;;		i2_INT1_App_ISR
  3693 ;;		i2_INT2_App_ISR
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text30
  3698   0018D4                     __ptext30:
  3699                           	callstack 0
  3700   0018D4                     i2_led_toggle:
  3701                           	callstack 17
  3702   0018D4                     
  3703                           ;ECU_Layer/led/ecu_led.c: 111:     if (((void*)0) == led)
  3704   0018D4  5006               	movf	i2led_toggle@led^0,w,c
  3705   0018D6  A4D8               	btfss	status,2,c
  3706   0018D8  EF70  F00C         	goto	i2u118_41
  3707   0018DC  EF72  F00C         	goto	i2u118_40
  3708   0018E0                     i2u118_41:
  3709   0018E0  EF74  F00C         	goto	i2l30
  3710   0018E4                     i2u118_40:
  3711   0018E4                     
  3712                           ;ECU_Layer/led/ecu_led.c: 114:     }
  3713   0018E4  EF9C  F00C         	goto	i2l34
  3714   0018E8                     i2l30:
  3715                           
  3716                           ;ECU_Layer/led/ecu_led.c: 116:     {;ECU_Layer/led/ecu_led.c: 117:         pin_config_t 
      +                          pin = {
  3717   0018E8  C047  F008         	movff	led_toggle@F3171,i2led_toggle@pin
  3718   0018EC  5006               	movf	i2led_toggle@led^0,w,c
  3719   0018EE  6ED9               	movwf	fsr2l,c
  3720   0018F0  6ADA               	clrf	fsr2h,c
  3721   0018F2  50DF               	movf	223,w,c
  3722   0018F4  0B0F               	andlw	15
  3723   0018F6  6E07               	movwf	??i2_led_toggle^0,c
  3724   0018F8  5008               	movf	i2led_toggle@pin^0,w,c
  3725   0018FA  1807               	xorwf	??i2_led_toggle^0,w,c
  3726   0018FC  0BF8               	andlw	-8
  3727   0018FE  1807               	xorwf	??i2_led_toggle^0,w,c
  3728   001900  6E08               	movwf	i2led_toggle@pin^0,c
  3729   001902  5006               	movf	i2led_toggle@led^0,w,c
  3730   001904  6ED9               	movwf	fsr2l,c
  3731   001906  6ADA               	clrf	fsr2h,c
  3732   001908  38DF               	swapf	223,w,c
  3733   00190A  0B07               	andlw	7
  3734   00190C  6E07               	movwf	??i2_led_toggle^0,c
  3735   00190E  4607               	rlncf	??i2_led_toggle^0,f,c
  3736   001910  4607               	rlncf	??i2_led_toggle^0,f,c
  3737   001912  4607               	rlncf	??i2_led_toggle^0,f,c
  3738   001914  5008               	movf	i2led_toggle@pin^0,w,c
  3739   001916  1807               	xorwf	??i2_led_toggle^0,w,c
  3740   001918  0BC7               	andlw	-57
  3741   00191A  1807               	xorwf	??i2_led_toggle^0,w,c
  3742   00191C  6E08               	movwf	i2led_toggle@pin^0,c
  3743   00191E  9C08               	bcf	i2led_toggle@pin^0,6,c
  3744   001920  5006               	movf	i2led_toggle@led^0,w,c
  3745   001922  6ED9               	movwf	fsr2l,c
  3746   001924  6ADA               	clrf	fsr2h,c
  3747   001926  AEDF               	btfss	indf2,7,c
  3748   001928  D002               	bra	i2u119_45
  3749   00192A  8E08               	bsf	i2led_toggle@pin^0,7,c
  3750   00192C  D001               	bra	i2u119_47
  3751   00192E                     i2u119_45:
  3752   00192E  9E08               	bcf	i2led_toggle@pin^0,7,c
  3753   001930                     i2u119_47:
  3754   001930                     
  3755                           ;ECU_Layer/led/ecu_led.c: 123:         gpio_pin_toggle_logic(&pin);
  3756   001930  0E08               	movlw	low i2led_toggle@pin
  3757   001932  6E01               	movwf	i2gpio_pin_toggle_logic@_pin_config_t^0,c
  3758   001934  ECA0  F00A         	call	i2_gpio_pin_toggle_logic	;wreg free
  3759   001938                     i2l34:
  3760   001938  0012               	return		;funcret
  3761   00193A                     __end_ofi2_led_toggle:
  3762                           	callstack 0
  3763                           
  3764 ;; *************** function i2_gpio_pin_toggle_logic *****************
  3765 ;; Defined at:
  3766 ;;		line 150 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  3769 ;;		 -> i2led_toggle@pin(1), led_toggle@pin(1), 
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;  ret             1    0        unsigned char 
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      unsigned char 
  3774 ;; Registers used:
  3775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3781 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3784 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3785 ;;Total ram usage:        5 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		i2_led_toggle
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text31
  3795   001540                     __ptext31:
  3796                           	callstack 0
  3797   001540                     i2_gpio_pin_toggle_logic:
  3798                           	callstack 17
  3799   001540                     
  3800                           ;MCAL_Layer/GPIO/hal_gpio.c: 153:     if (((void*)0) == _pin_config_t || _pin_config_t->
      +                          pin > 8 - 1)
  3801   001540  5001               	movf	i2gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3802   001542  B4D8               	btfsc	status,2,c
  3803   001544  EFA6  F00A         	goto	i2u108_41
  3804   001548  EFA8  F00A         	goto	i2u108_40
  3805   00154C                     i2u108_41:
  3806   00154C  EFB8  F00A         	goto	i2l1835
  3807   001550                     i2u108_40:
  3808   001550  5001               	movf	i2gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3809   001552  6ED9               	movwf	fsr2l,c
  3810   001554  6ADA               	clrf	fsr2h,c
  3811   001556  30DF               	rrcf	223,w,c
  3812   001558  32E8               	rrcf	wreg,f,c
  3813   00155A  32E8               	rrcf	wreg,f,c
  3814   00155C  0B07               	andlw	7
  3815   00155E  6E02               	movwf	??i2_gpio_pin_toggle_logic^0,c
  3816   001560  0E07               	movlw	7
  3817   001562  6402               	cpfsgt	??i2_gpio_pin_toggle_logic^0,c
  3818   001564  EFB6  F00A         	goto	i2u109_41
  3819   001568  EFB8  F00A         	goto	i2u109_40
  3820   00156C                     i2u109_41:
  3821   00156C  EFBA  F00A         	goto	i2l1837
  3822   001570                     i2u109_40:
  3823   001570                     i2l1835:
  3824                           
  3825                           ;MCAL_Layer/GPIO/hal_gpio.c: 156:     }
  3826   001570  EFE0  F00A         	goto	i2l150
  3827   001574                     i2l1837:
  3828                           
  3829                           ;MCAL_Layer/GPIO/hal_gpio.c: 158:     {;MCAL_Layer/GPIO/hal_gpio.c: 159:         (*lat_r
      +                          egisters[_pin_config_t->port] ^= ((uint8)1 << _pin_config_t->pin));
  3830   001574  5001               	movf	i2gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3831   001576  6ED9               	movwf	fsr2l,c
  3832   001578  6ADA               	clrf	fsr2h,c
  3833   00157A  30DF               	rrcf	223,w,c
  3834   00157C  32E8               	rrcf	wreg,f,c
  3835   00157E  32E8               	rrcf	wreg,f,c
  3836   001580  0B07               	andlw	7
  3837   001582  6E02               	movwf	??i2_gpio_pin_toggle_logic^0,c
  3838   001584  0E01               	movlw	1
  3839   001586  6E03               	movwf	(??i2_gpio_pin_toggle_logic+1)^0,c
  3840   001588  2A02               	incf	??i2_gpio_pin_toggle_logic^0,f,c
  3841   00158A  EFC9  F00A         	goto	i2u110_44
  3842   00158E                     i2u110_45:
  3843   00158E  90D8               	bcf	status,0,c
  3844   001590  3603               	rlcf	(??i2_gpio_pin_toggle_logic+1)^0,f,c
  3845   001592                     i2u110_44:
  3846   001592  2E02               	decfsz	??i2_gpio_pin_toggle_logic^0,f,c
  3847   001594  EFC7  F00A         	goto	i2u110_45
  3848   001598  5001               	movf	i2gpio_pin_toggle_logic@_pin_config_t^0,w,c
  3849   00159A  6ED9               	movwf	fsr2l,c
  3850   00159C  6ADA               	clrf	fsr2h,c
  3851   00159E  50DF               	movf	223,w,c
  3852   0015A0  0B07               	andlw	7
  3853   0015A2  0D02               	mullw	2
  3854   0015A4  50F3               	movf	243,w,c
  3855   0015A6  0F2E               	addlw	low _lat_registers
  3856   0015A8  6ED9               	movwf	fsr2l,c
  3857   0015AA  6ADA               	clrf	fsr2h,c
  3858   0015AC  CFDE F004          	movff	postinc2,??i2_gpio_pin_toggle_logic+2
  3859   0015B0  CFDD F005          	movff	postdec2,??i2_gpio_pin_toggle_logic+3
  3860   0015B4  C004  FFD9         	movff	??i2_gpio_pin_toggle_logic+2,fsr2l
  3861   0015B8  C005  FFDA         	movff	??i2_gpio_pin_toggle_logic+3,fsr2h
  3862   0015BC  5003               	movf	(??i2_gpio_pin_toggle_logic+1)^0,w,c
  3863   0015BE  1ADF               	xorwf	indf2,f,c
  3864   0015C0                     i2l150:
  3865   0015C0  0012               	return		;funcret
  3866   0015C2                     __end_ofi2_gpio_pin_toggle_logic:
  3867                           	callstack 0
  3868                           
  3869                           	psect	smallconst
  3870   001000                     __psmallconst:
  3871                           	callstack 0
  3872   001000  00                 	db	0
  3873   001001  00                 	db	0	; dummy byte at the end
  3874   000000                     
  3875                           	psect	rparam
  3876   000000                     
  3877                           	psect	temp
  3878   00004B                     btemp:
  3879                           	callstack 0
  3880   00004B                     	ds	1
  3881   000000                     int$flags	set	btemp
  3882   000000                     wtemp8	set	btemp+1
  3883   000000                     ttemp5	set	btemp+1
  3884   000000                     ttemp6	set	btemp+4
  3885   000000                     ttemp7	set	btemp+8
  3886                           
  3887                           	psect	config
  3888                           
  3889                           ; Padding undefined space
  3890   300000                     	org	3145728
  3891   300000  FF                 	db	255
  3892                           
  3893                           ;Config register CONFIG1H @ 0x300001
  3894                           ;	Oscillator Selection bits
  3895                           ;	FOSC = RCIO6, External RC oscillator, port function on RA6
  3896                           ;	Fail-Safe Clock Monitor Enable bit
  3897                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3898                           ;	Internal/External Oscillator Switchover bit
  3899                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3900   300001                     	org	3145729
  3901   300001  07                 	db	7
  3902                           
  3903                           ;Config register CONFIG2L @ 0x300002
  3904                           ;	Power-up Timer Enable bit
  3905                           ;	PWRTEN = OFF, PWRT disabled
  3906                           ;	Brown-out Reset Enable bits
  3907                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3908                           ;	Brown Out Reset Voltage bits
  3909                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3910   300002                     	org	3145730
  3911   300002  1F                 	db	31
  3912                           
  3913                           ;Config register CONFIG2H @ 0x300003
  3914                           ;	Watchdog Timer Enable bit
  3915                           ;	WDTEN = ON, WDT is always enabled. SWDTEN bit has no effect
  3916                           ;	Watchdog Timer Postscale Select bits
  3917                           ;	WDTPS = 32768, 1:32768
  3918   300003                     	org	3145731
  3919   300003  1F                 	db	31
  3920                           
  3921                           ; Padding undefined space
  3922   300004                     	org	3145732
  3923   300004  FF                 	db	255
  3924                           
  3925                           ;Config register CONFIG3H @ 0x300005
  3926                           ;	CCP2 MUX bit
  3927                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3928                           ;	PORTB A/D Enable bit
  3929                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3930                           ;	Low-Power Timer1 Oscillator Enable bit
  3931                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3932                           ;	HFINTOSC Fast Start-up
  3933                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3934                           ;	MCLR Pin Enable bit
  3935                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3936   300005                     	org	3145733
  3937   300005  89                 	db	137
  3938                           
  3939                           ;Config register CONFIG4L @ 0x300006
  3940                           ;	Stack Full/Underflow Reset Enable bit
  3941                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3942                           ;	Single-Supply ICSP Enable bit
  3943                           ;	LVP = ON, Single-Supply ICSP enabled
  3944                           ;	Extended Instruction Set Enable bit
  3945                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3946                           ;	Background Debugger Enable bit
  3947                           ;	DEBUG = 0x1, unprogrammed default
  3948   300006                     	org	3145734
  3949   300006  85                 	db	133
  3950                           
  3951                           ; Padding undefined space
  3952   300007                     	org	3145735
  3953   300007  FF                 	db	255
  3954                           
  3955                           ;Config register CONFIG5L @ 0x300008
  3956                           ;	Code Protection Block 0
  3957                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3958                           ;	Code Protection Block 1
  3959                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3960                           ;	Code Protection Block 2
  3961                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3962                           ;	Code Protection Block 3
  3963                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3964   300008                     	org	3145736
  3965   300008  0F                 	db	15
  3966                           
  3967                           ;Config register CONFIG5H @ 0x300009
  3968                           ;	Boot Block Code Protection bit
  3969                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3970                           ;	Data EEPROM Code Protection bit
  3971                           ;	CPD = OFF, Data EEPROM not code-protected
  3972   300009                     	org	3145737
  3973   300009  C0                 	db	192
  3974                           
  3975                           ;Config register CONFIG6L @ 0x30000A
  3976                           ;	Write Protection Block 0
  3977                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3978                           ;	Write Protection Block 1
  3979                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3980                           ;	Write Protection Block 2
  3981                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3982                           ;	Write Protection Block 3
  3983                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3984   30000A                     	org	3145738
  3985   30000A  0F                 	db	15
  3986                           
  3987                           ;Config register CONFIG6H @ 0x30000B
  3988                           ;	Configuration Register Write Protection bit
  3989                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3990                           ;	Boot Block Write Protection bit
  3991                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3992                           ;	Data EEPROM Write Protection bit
  3993                           ;	WRTD = OFF, Data EEPROM not write-protected
  3994   30000B                     	org	3145739
  3995   30000B  E0                 	db	224
  3996                           
  3997                           ;Config register CONFIG7L @ 0x30000C
  3998                           ;	Table Read Protection Block 0
  3999                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  4000                           ;	Table Read Protection Block 1
  4001                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  4002                           ;	Table Read Protection Block 2
  4003                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  4004                           ;	Table Read Protection Block 3
  4005                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  4006   30000C                     	org	3145740
  4007   30000C  0F                 	db	15
  4008                           
  4009                           ;Config register CONFIG7H @ 0x30000D
  4010                           ;	Boot Block Table Read Protection bit
  4011                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  4012   30000D                     	org	3145741
  4013   30000D  40                 	db	64
  4014                           tosu	equ	0xFFF
  4015                           tosh	equ	0xFFE
  4016                           tosl	equ	0xFFD
  4017                           stkptr	equ	0xFFC
  4018                           pclatu	equ	0xFFB
  4019                           pclath	equ	0xFFA
  4020                           pcl	equ	0xFF9
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           indf0	equ	0xFEF
  4028                           postinc0	equ	0xFEE
  4029                           postdec0	equ	0xFED
  4030                           preinc0	equ	0xFEC
  4031                           plusw0	equ	0xFEB
  4032                           fsr0h	equ	0xFEA
  4033                           fsr0l	equ	0xFE9
  4034                           wreg	equ	0xFE8
  4035                           indf1	equ	0xFE7
  4036                           postinc1	equ	0xFE6
  4037                           postdec1	equ	0xFE5
  4038                           preinc1	equ	0xFE4
  4039                           plusw1	equ	0xFE3
  4040                           fsr1h	equ	0xFE2
  4041                           fsr1l	equ	0xFE1
  4042                           bsr	equ	0xFE0
  4043                           indf2	equ	0xFDF
  4044                           postinc2	equ	0xFDE
  4045                           postdec2	equ	0xFDD
  4046                           preinc2	equ	0xFDC
  4047                           plusw2	equ	0xFDB
  4048                           fsr2h	equ	0xFDA
  4049                           fsr2l	equ	0xFD9
  4050                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        51
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     35      74
    BANK0           160     15      37
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), led_initialize@pin(BANK0[1]), 

    gpio_pin_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), led_initialize@pin(BANK0[1]), 

    gpio_pin_toggle_logic@_pin_config_t	PTR const struct . size(1) Largest target is 1
		 -> led_toggle@pin(COMRAM[1]), 

    INT0_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), NULL(), 

    int0_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    INT0_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), 

    INT1_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), NULL(), 

    int1_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT1_App_ISR(), INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    INT1_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), 

    INT2_INTERRUPT_HANDLER	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), NULL(), 

    int2_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT2_App_ISR(), INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    INT2_Set_Interrupt_Handler@Interrupt_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> i2_INT0_App_ISR(), i2_INT1_App_ISR(), i2_INT2_App_ISR(), INT0_App_ISR(), 
		 -> INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Clear_Flag@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Clear_Flag@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Disable@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Disable@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Edge_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Edge_Init@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Enable@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Enable@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Pin_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Pin_Init@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Priority_Init@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Priority_Init@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    Interrupt_INTx_Set_Interrupt_Handler@int_obj	PTR const struct . size(1) Largest target is 6
		 -> int0_obj(COMRAM[6]), int1_obj(BANK0[6]), int2_obj(BANK0[6]), 

    Interrupt_INTx_Set_Interrupt_Handler@int_obj$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    led_initialize@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), 

    led_toggle@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), led2(COMRAM[1]), led3(COMRAM[1]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    S278$EXT_interrupt_handler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_App_ISR(), INT1_App_ISR(), INT2_App_ISR(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhhl[1]), TRISC(BITBIGSFRhhl[1]), TRISD(BITBIGSFRhhl[1]), 
		 -> TRISE(BITBIGSFRhhl[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _Interrupt_Manager_Low in COMRAM

    _INT1_ISR->_INT0_App_ISR
    _INT1_ISR->_INT1_App_ISR
    _INT1_ISR->_INT2_App_ISR
    _INT2_App_ISR->_led_toggle
    _INT1_App_ISR->_led_toggle
    _INT0_App_ISR->_led_toggle
    _led_toggle->_gpio_pin_toggle_logic

Critical Paths under _Interrupt_Manager_High in COMRAM

    _INT2_ISR->i2_INT0_App_ISR
    _INT2_ISR->i2_INT1_App_ISR
    _INT2_ISR->i2_INT2_App_ISR
    _INT0_ISR->i2_INT0_App_ISR
    _INT0_ISR->i2_INT1_App_ISR
    _INT0_ISR->i2_INT2_App_ISR
    i2_INT2_App_ISR->i2_led_toggle
    i2_INT1_App_ISR->i2_led_toggle
    i2_INT0_App_ISR->i2_led_toggle
    i2_led_toggle->i2_gpio_pin_toggle_logic

Critical Paths under _main in BANK0

    _main->_Interrupt_INTx_Init
    _main->_led_initialize
    _led_initialize->_gpio_pin_initialize
    _Interrupt_INTx_Init->_Interrupt_INTx_Pin_Init
    _Interrupt_INTx_Set_Interrupt_Handler->_INT0_Set_Interrupt_Handler
    _Interrupt_INTx_Set_Interrupt_Handler->_INT1_Set_Interrupt_Handler
    _Interrupt_INTx_Set_Interrupt_Handler->_INT2_Set_Interrupt_Handler
    _Interrupt_INTx_Pin_Init->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_direction_initialize

Critical Paths under _Interrupt_Manager_Low in BANK0

    None.

Critical Paths under _Interrupt_Manager_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_Manager_Low in BANK1

    None.

Critical Paths under _Interrupt_Manager_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_Manager_Low in BANK2

    None.

Critical Paths under _Interrupt_Manager_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_Manager_Low in BANK3

    None.

Critical Paths under _Interrupt_Manager_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_Manager_Low in BANK4

    None.

Critical Paths under _Interrupt_Manager_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_Manager_Low in BANK5

    None.

Critical Paths under _Interrupt_Manager_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_Manager_Low in BANK6

    None.

Critical Paths under _Interrupt_Manager_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_Manager_Low in BANK7

    None.

Critical Paths under _Interrupt_Manager_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_Manager_Low in BANK8

    None.

Critical Paths under _Interrupt_Manager_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_Manager_Low in BANK9

    None.

Critical Paths under _Interrupt_Manager_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_Manager_Low in BANK10

    None.

Critical Paths under _Interrupt_Manager_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_Manager_Low in BANK11

    None.

Critical Paths under _Interrupt_Manager_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_Manager_Low in BANK12

    None.

Critical Paths under _Interrupt_Manager_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_Manager_Low in BANK13

    None.

Critical Paths under _Interrupt_Manager_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_Manager_Low in BANK14

    None.

Critical Paths under _Interrupt_Manager_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_Manager_Low in BANK15

    None.

Critical Paths under _Interrupt_Manager_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    5289
                                             14 BANK0      1     1      0
                _Interrupt_INTx_Init
                   _application_init
                     _led_initialize
 ---------------------------------------------------------------------------------
 (1) _led_initialize                                       4     3      1    1248
                                             10 BANK0      4     3      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _application_init                                     1     1      0     102
                                              0 BANK0      1     1      0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0      65
 ---------------------------------------------------------------------------------
 (1) _Interrupt_INTx_Init                                  2     1      1    3887
                                             12 BANK0      2     1      1
          _Interrupt_INTx_Clear_Flag
             _Interrupt_INTx_Disable
           _Interrupt_INTx_Edge_Init
              _Interrupt_INTx_Enable
            _Interrupt_INTx_Pin_Init
       _Interrupt_INTx_Priority_Init
_Interrupt_INTx_Set_Interrupt_Handle
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Set_Interrupt_Handler                 4     3      1     861
                                              3 BANK0      4     3      1
         _INT0_Set_Interrupt_Handler
         _INT1_Set_Interrupt_Handler
         _INT2_Set_Interrupt_Handler
 ---------------------------------------------------------------------------------
 (3) _INT2_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _INT1_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _INT0_Set_Interrupt_Handler                           3     1      2     189
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Priority_Init                         4     3      1     325
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Pin_Init                              2     1      1     942
                                             10 BANK0      2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1     750
                                              7 BANK0      3     2      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        7     6      1     347
                                              0 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Enable                                4     3      1     322
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Edge_Init                             4     3      1     387
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Disable                               4     3      1     282
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _Interrupt_INTx_Clear_Flag                            4     3      1     192
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Interrupt_Manager_Low                                9     9      0    1587
                                             26 COMRAM     9     9      0
                           _INT1_ISR
 ---------------------------------------------------------------------------------
 (6) _INT1_ISR                                             0     0      0    1587
                                NULL *
                       _INT0_App_ISR *
                       _INT1_App_ISR *
                       _INT2_App_ISR *
 ---------------------------------------------------------------------------------
 (7) _INT2_App_ISR                                         2     2      0     529
                                             24 COMRAM     2     2      0
                         _led_toggle
 ---------------------------------------------------------------------------------
 (7) _INT1_App_ISR                                         2     2      0     529
                                             24 COMRAM     2     2      0
                         _led_toggle
 ---------------------------------------------------------------------------------
 (7) _INT0_App_ISR                                         2     2      0     529
                                             24 COMRAM     2     2      0
                         _led_toggle
 ---------------------------------------------------------------------------------
 (8) _led_toggle                                           4     3      1     529
                                             21 COMRAM     3     2      1
              _gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (9) _gpio_pin_toggle_logic                                6     5      1     172
                                             16 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Interrupt_Manager_High                              6     6      0    1956
                                             10 COMRAM     6     6      0
                           _INT0_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (11) _INT2_ISR                                            0     0      0     978
                                NULL *
                     i2_INT0_App_ISR *
                     i2_INT1_App_ISR *
                     i2_INT2_App_ISR *
 ---------------------------------------------------------------------------------
 (11) _INT0_ISR                                            0     0      0     978
                                NULL *
                     i2_INT0_App_ISR *
                     i2_INT1_App_ISR *
                     i2_INT2_App_ISR *
 ---------------------------------------------------------------------------------
 (12) i2_INT2_App_ISR                                      2     2      0     326
                                              8 COMRAM     2     2      0
                       i2_led_toggle
 ---------------------------------------------------------------------------------
 (12) i2_INT1_App_ISR                                      2     2      0     326
                                              8 COMRAM     2     2      0
                       i2_led_toggle
 ---------------------------------------------------------------------------------
 (12) i2_INT0_App_ISR                                      2     2      0     326
                                              8 COMRAM     2     2      0
                       i2_led_toggle
 ---------------------------------------------------------------------------------
 (13) i2_led_toggle                                        4     3      1     326
                                              5 COMRAM     3     2      1
            i2_gpio_pin_toggle_logic
 ---------------------------------------------------------------------------------
 (14) i2_gpio_pin_toggle_logic                             6     5      1     122
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (12) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Interrupt_INTx_Init
     _Interrupt_INTx_Clear_Flag
     _Interrupt_INTx_Disable
     _Interrupt_INTx_Edge_Init
     _Interrupt_INTx_Enable
     _Interrupt_INTx_Pin_Init
       _gpio_pin_initialize
         _gpio_pin_direction_initialize
     _Interrupt_INTx_Priority_Init
     _Interrupt_INTx_Set_Interrupt_Handler
       _INT0_Set_Interrupt_Handler
       _INT1_Set_Interrupt_Handler
       _INT2_Set_Interrupt_Handler
   _application_init
     _ecu_layer_initialize
   _led_initialize
     _gpio_pin_initialize

 _Interrupt_Manager_Low (ROOT)
   _INT1_ISR
     NULL(Fake) *
     _INT0_App_ISR *
       _led_toggle
         _gpio_pin_toggle_logic
     _INT1_App_ISR *
       _led_toggle
     _INT2_App_ISR *
       _led_toggle

 _Interrupt_Manager_High (ROOT)
   _INT0_ISR
     NULL(Fake) *
     i2_INT0_App_ISR *
       i2_led_toggle
         i2_gpio_pin_toggle_logic
     i2_INT1_App_ISR *
       i2_led_toggle
     i2_INT2_App_ISR *
       i2_led_toggle
   _INT2_ISR
     NULL(Fake) *
     i2_INT0_App_ISR *
     i2_INT1_App_ISR *
     i2_INT2_App_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      25       5       23.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     23      4A       1       78.7%
BITBIGSFRhhl        39      0       0      38        0.0%
BITBIGSFRll         20      0       0      41        0.0%
BITBIGSFRhhhll      1F      0       0      37        0.0%
BITBIGSFRhhhh        D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      40        0.0%
BITBIGSFRhl          4      0       0      39        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6F      42        0.0%
DATA                 0      0      6F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Aug 06 12:22:08 2024

                      ?_Interrupt_Manager_Low 0001                                             l9 15E0  
                     ?_Interrupt_Manager_High 0001                                            l13 1636  
                                          l60 1C3E                                            bsr 0FE0  
          __end_of_INT0_Set_Interrupt_Handler 1AF2                    _INT0_Set_Interrupt_Handler 1AC6  
                                         l105 19DC                                           l301 111E  
                                         l117 1236                                           l214 16AC  
                                         l312 17B0                                           l232 1256  
                                         l314 17B6                                           l306 1B1C  
                                         l315 17BC                                           l235 125C  
                                         l317 1800                                           l254 1740  
                                         l342 1AF0                                           l256 1746  
                                         l248 132E                                           l352 1A98  
                                         l257 174C                                           l259 1790  
                                         l347 1AC4                                           l363 14BC  
                                         l443 1C3A                                           l437 186A  
                                         l278 1414                                           l438 1866  
                                         l439 1866                           led_initialize@F3156 004A  
               INT0_Set_Interrupt_Handler@ret 0078                                           tosl 0FFD  
                                         wreg 0FE8                                          l2311 1136  
                                        l2313 1156                                          l2411 17C2  
                                        l2403 1792                                          l2315 115E  
                                        l2323 1208                                          l2331 19A6  
                                        l2413 17FE                                          l2405 17A8  
                                        l2317 11B0                                          l2325 1234  
                                        l2309 1120                                          l2333 19C6  
                                        l2501 13D6                                          l2341 1AC6  
                                        l2431 1040                                          l2423 1002  
                                        l2335 19CE                                          l2511 1AF2  
                                        l2503 1412                                          l2343 1ACC  
                                        l2441 1080                                          l2433 105A  
                                        l2425 1018                                          l2337 19DA  
                                        l2329 1994                                          l2513 1B04  
                                        l2345 1ADE                                          l2361 1AC2  
                                        l2353 1A9A                                          l2521 1416  
                                        l2601 1638                                          l2451 10C0  
                                        l2443 109A                                          l2427 1020  
                                        l2515 1B0C                                          l2347 1AE6  
                                        l2355 1AA0                                          l2371 1A8E  
                                        l2523 1428                                          l2611 169E  
                                        l2603 164E                                          l2453 10DA  
                                        l2437 1060                                          l2429 103A  
                                        l2461 10E0                                          l2517 1B1A  
                                        l2349 1AEE                                          l2357 1AB2  
                                        l2373 1A96                                          l2365 1A6E  
                                        l2525 1430                                          l2613 16AA  
                                        l2605 1656                                          l2621 1C38  
                                        l2391 1752                                          l2383 1722  
                                        l2447 10A0                                          l2439 107A  
                                        l2463 111C                                          l2551 127E  
                                        l2471 1330                                          l2359 1ABA  
                                        l2367 1A74                                          l2527 144A  
                                        l2535 147E                                          l2607 1686  
                                        l2393 178E                                          l2385 1738  
                                        l2449 10BA                                          l2561 12C4  
                                        l2553 1288                                          l2545 1238  
                                        l2481 1376                                          l2473 1346  
                                        l2369 1A86                                          l2529 1464  
                                        l2537 14BA                                          l2609 1692  
                                        l2377 1C3C                                          l2617 1C30  
                                        l2563 12CE                                          l2555 12A2  
                                        l2547 124E                                          l2491 13B6  
                                        l2483 1390                                          l2475 134E  
                                        l2379 1C3C                                          l2619 1C30  
                                        l2821 10FE                                          l2565 12E8  
                                        l2549 1264                                          l2573 12F0  
                                        l2493 13D0                                          l2477 1356  
                                        l2823 1770                                          l2559 12AA  
                                        l2575 132C                                          l2487 1396  
                                        l2479 1370                                          l2815 149C  
                                        l2591 1616                                          l2663 181E  
                                        l2825 17E0                                          l2817 13F4  
                                        l2489 13B0                                          l2593 1618  
                                        l2585 15C2                                          l2657 1802  
                                        l2819 130E                                          l2595 162A  
                                        l2587 15D8                                          l2659 180A  
                                        l2589 15E4                                          l2597 1632  
                                        u2010 164E                                          u2011 164A  
                                        u2005 1626                                          u2007 162A  
                                        u2060 181A                                          u2061 1816  
                                        _LATA 0F89                                          _LATB 0F8A  
                                        _LATC 0F8B                                          _LATD 0F8C  
                                        _LATE 0F8D                                          u1800 1018  
                                        u1720 121E                                          u1704 117C  
                                        u1801 1014                                          u1721 1218  
                                        u1705 1178                                          u1810 103A  
                                        u1714 11CE                                          u1730 19A6  
                                        u1811 1036                                          u1715 11CA  
                                        u1731 19A2                                          u1820 105A  
                                        u1740 19C6                                          u1900 13B0  
                                        u1821 1056                                          u1741 19C2  
                                        u1901 13AC                                          u1830 107A  
                                        u1726 1220                                          u1910 13D0  
                                        u1750 1ADE                                          u1831 1076  
                                        u1911 13CC                                          u1751 1ADA  
                                        u1840 109A                                          u1680 1136  
                                        u1920 1B04                                          u1760 1AB2  
                                        u1841 1096                                          u1681 1132  
                                        u1921 1B00                                          u1761 1AAE  
                                        u1850 10BA                                          u1690 1156  
                                        u1770 1A86                                          u1930 1428  
                                        u1851 10B6                                          u1691 1152  
                                        u1771 1A82                                          u1931 1424  
                                        u1780 1738                                          u1860 10DA  
                                        u1940 124E                                          u1781 1734  
                                        u1861 10D6                                          u1941 124A  
                                        u1790 17A8                                          u1950 127E  
                                        u1870 1346                                          u1791 17A4  
                                        u1951 127A                                          u1871 1342  
                                        u1960 12A2                                          u1880 1370  
                                        u1961 129E                                          u1881 136C  
                                        u1970 12C4                                          u1890 1390  
                                        u1971 12C0                                          u1891 138C  
                                        u1980 12E8                                          u1981 12E4  
                                        i1l30 1882                                          u1990 15D8  
                                        u1991 15D4                                          i1l34 18D2  
                                        i2l30 18E8                                          i2l34 1938  
                               ?_INT0_App_ISR 0001                                          _led1 0040  
                                        _led2 003F                                          _led3 003E  
                                        _main 1802                                          fsr2h 0FDA  
                                        indf2 0FDF                                          fsr1l 0FE1  
                                        fsr2l 0FD9                                          btemp 004B  
                      __end_of_led_initialize 1638                                 ?_INT1_App_ISR 0001  
                                        prodh 0FF4                                          prodl 0FF3  
                                        start 0086                                 ?_INT2_App_ISR 0001  
            gpio_pin_initialize@_pin_config_t 007D                __end_of_Interrupt_Manager_High 1722  
                                ___param_bank 0000                        ?_gpio_pin_toggle_logic 0011  
                            __end_of_INT0_ISR 1A6E                              __end_of_INT1_ISR 1A0E  
                            __end_of_INT2_ISR 1A3E                     ?_Interrupt_INTx_Edge_Init 0076  
                                       ?_main 0001   INT2_Set_Interrupt_Handler@Interrupt_Handler 0076  
 INT1_Set_Interrupt_Handler@Interrupt_Handler 0076   INT0_Set_Interrupt_Handler@Interrupt_Handler 0076  
                      _INT0_INTERRUPT_HANDLER 0045                                         i1l150 153E  
                                       i1l422 1B46                                         i1l425 1B9A  
                                       i1l419 1B70                                         i1l371 1A0C  
                                       i2l150 15C0                                         i2l422 1BBA  
                                       i1l398 005E                                         i2l425 1BFA  
                                       i2l419 1BDA                                         i2l367 1A6C  
                                       i2l375 1A3C                                         i2l392 1706  
                                       _PORTA 0F80                                         _PORTB 0F81  
                                       _PORTC 0F82                                         _PORTD 0F83  
                                       _PORTE 0F84                                         _TRISA 0F92  
                                       _TRISB 0F93                                         _TRISC 0F94  
                                       _TRISD 0F95                                         _TRISE 0F96  
     Interrupt_INTx_Set_Interrupt_Handler@ret 007C                      Interrupt_INTx_Enable@ret 0079  
                            ??i2_INT0_App_ISR 0009                              ??i2_INT1_App_ISR 0009  
                                       pclath 0FFA                                         pclatu 0FFB  
                                       tablat 0FF5                                ??_INT0_App_ISR 0019  
                            ??i2_INT2_App_ISR 0009                                         ttemp5 004C  
                                       ttemp6 004F                                         ttemp7 0053  
                              ??_INT1_App_ISR 0019                                         status 0FD8  
                                       wtemp8 004C                               ?_led_initialize 0080  
                              ??_INT2_App_ISR 0019                        _Interrupt_INTx_Disable 1722  
              ?_gpio_pin_direction_initialize 0076                               __initialization 193A  
                     i2_gpio_pin_toggle_logic 1540                                  __end_of_main 186E  
 Interrupt_INTx_Set_Interrupt_Handler@int_obj 0079                                 _lat_registers 002E  
                      _INT0_App_ISR$intlevel1 1B52                                        ??_main 0084  
                               __activetblptr 0002                  ??_INT1_Set_Interrupt_Handler 0078  
                            led_turn_on@F3161 0049                                        i1l2121 1B5A  
                                      i1l2123 1B28                                        i1l2125 1B30  
                                      i1l2127 1B7C                                        i1l2119 1B52  
                                      i1l2129 1B84                                        i1l2181 19DE  
                                      i1l2183 19E0                                        i1l2271 003E  
                                      i1l1801 14BE                                        i1l2185 19F2  
                                      i1l2273 004C                                        i1l1803 14CE  
                                      i1l2275 005A                                        i1l1805 14EE  
                                      i1l1807 14F2                                        i1l1861 18BA  
                                      i1l1853 186E                                        i1l1863 18CA  
                                      i1l1855 187E                                        i1l1857 1886  
                                      i2l2131 1BBC                                        i1l1859 18B8  
                                      i2l2141 1BE4                                        i2l2133 1BC4  
                                      i2l2135 1B9C                                        i2l2137 1BA4  
                                      i2l2139 1BDC                                        i2l2261 16D4  
                                      i2l2175 1A3E                                        i2l2191 1A22  
                                      i2l2263 16E2                                        i2l2177 1A40  
                                      i2l2265 16E6                                        i2l2179 1A52  
                                      i2l2187 1A0E                                        i2l2267 16F4  
                                      i2l2259 16C6                                        i2l2189 1A10  
                                      i2l2269 1702                                        i2l1831 1540  
                                      i2l1911 1920                                        i2l1903 18D4  
                                      i2l1833 1550                                        i2l1913 1930  
                                      i2l1905 18E4                  Interrupt_INTx_Enable@int_obj 0076  
                                      i2l1835 1570                                        i2l1907 18EC  
                                      i2l1837 1574                                        i2l1909 191E  
                                i2_led_toggle 18D4                    ?_Interrupt_INTx_Clear_Flag 0076  
                                      clear_0 1980                                        isa$std 0001  
               __end_of_Interrupt_INTx_Enable 1330                                  __pdataCOMRAM 0024  
                                __mediumconst 0000                                        tblptrh 0FF7  
                                      tblptrl 0FF6                                        tblptru 0FF8  
                                  __accesstop 0060                       __end_of__initialization 1986  
                                   ?_INT0_ISR 0001                                     ?_INT1_ISR 0001  
                                   ?_INT2_ISR 0001                                 ___rparam_used 0001  
           __end_of_Interrupt_INTx_Clear_Flag 1802                     ??i2_gpio_pin_toggle_logic 0002  
                     ??_Interrupt_Manager_Low 001B                             led_initialize@led 0080  
                           led_initialize@pin 0083                             led_initialize@ret 0082  
                     _Interrupt_INTx_Pin_Init 1AF2                                __pcstackCOMRAM 0001  
                            _application_init 1C30                                  __pidataBANK0 1C19  
                        __end_of_INT0_App_ISR 1B72                   ?_INT0_Set_Interrupt_Handler 0076  
                        __end_of_INT1_App_ISR 1B48                          __end_of_INT2_App_ISR 1B9C  
                 __end_of_Interrupt_INTx_Init 16AE  __end_of_Interrupt_INTx_Set_Interrupt_Handler 14BE  
      ??_Interrupt_INTx_Set_Interrupt_Handler 007A         ?_Interrupt_INTx_Set_Interrupt_Handler 0079  
        _Interrupt_INTx_Set_Interrupt_Handler 1416                                    ??_INT0_ISR 000B  
                                  ??_INT1_ISR 001B                                    ??_INT2_ISR 000B  
            __end_of_Interrupt_INTx_Edge_Init 1120                       ??_gpio_pin_toggle_logic 0012  
                           led_turn_off@F3166 0048                                 led_toggle@led 0016  
                               led_toggle@pin 0018                               led_toggle@F3171 0047  
          __end_of_INT1_Set_Interrupt_Handler 1AC6                    _INT1_Set_Interrupt_Handler 1A9A  
                            ??_led_initialize 0081                       ?_Interrupt_INTx_Disable 0076  
                                  _led_toggle 186E                                _tris_registers 0024  
                   ??_Interrupt_INTx_Pin_Init 0081                 INT1_Set_Interrupt_Handler@ret 0078  
                                     __Hparam 0000                                       __Lparam 0000  
                         _gpio_pin_initialize 1994                                  __psmallconst 1000  
                                     __pcinit 193A                                       __ramtop 1000  
                                     __ptext0 1802                                       __ptext1 15C2  
                                     __ptext2 1C30                                       __ptext3 1C3C  
                                     __ptext4 1638                                       __ptext5 1416  
                                     __ptext6 1A6E                                       __ptext7 1A9A  
                                     __ptext8 1AC6                                       __ptext9 1330  
                      _INT1_INTERRUPT_HANDLER 0043               ??_gpio_pin_direction_initialize 0077  
                        ?_gpio_pin_initialize 007D                __end_of_Interrupt_INTx_Disable 1792  
                                     main@ret 0084                                __pintcode_body 16AE  
                        end_of_initialization 1986                                 __Lmediumconst 0000  
                                     int_func 16AE                   ??_Interrupt_INTx_Clear_Flag 0077  
                                     postdec1 0FE5                                       postdec2 0FDD  
                    _Interrupt_INTx_Edge_Init 1002                                       postinc0 0FEE  
                                     postinc2 0FDE                        _INT1_App_ISR$intlevel1 1B28  
                ??_INT2_Set_Interrupt_Handler 0078                         ??_gpio_pin_initialize 007E  
                    __end_of_application_init 1C3C                                   ?_led_toggle 0016  
                 Interrupt_INTx_Edge_Init@ret 0079                      ??_Interrupt_Manager_High 000B  
                                _INT0_App_ISR 1B48           Interrupt_INTx_Priority_Init@int_obj 0076  
                                _INT1_App_ISR 1B1E                                  _INT2_App_ISR 1B72  
               __end_of_Interrupt_Manager_Low 0086            gpio_pin_toggle_logic@_pin_config_t 0011  
        i2gpio_pin_toggle_logic@_pin_config_t 0001                        Interrupt_INTx_Init@ret 0083  
        __end_of_Interrupt_INTx_Priority_Init 1416                  _Interrupt_INTx_Priority_Init 1330  
                               __pidataCOMRAM 1BFC                 Interrupt_INTx_Disable@int_obj 0076  
                   _Interrupt_INTx_Clear_Flag 1792                         _Interrupt_INTx_Enable 1238  
                         start_initialization 193A         __end_of_gpio_pin_direction_initialize 1238  
               _gpio_pin_direction_initialize 1120                 __end_of_gpio_pin_toggle_logic 1540  
                         application_init@ret 0076                                   __pdataBANK0 0060  
                __end_of_ecu_layer_initialize 1C40                 ?_Interrupt_INTx_Priority_Init 0076  
                 ?_INT1_Set_Interrupt_Handler 0076                                   __pbssCOMRAM 0041  
                               __pcstackBANK0 0076               Interrupt_INTx_Priority_Init@ret 0079  
                    ?i2_gpio_pin_toggle_logic 0001                                     __pintcode 0008  
                                 __pintcodelo 0018            __end_of_INT2_Set_Interrupt_Handler 1A9A  
                  _INT2_Set_Interrupt_Handler 1A6E                        ?_Interrupt_INTx_Enable 0076  
                                 __smallconst 1000               Interrupt_INTx_Edge_Init@int_obj 0076  
                               ?i2_led_toggle 0006                    ??_Interrupt_INTx_Edge_Init 0077  
                                    _INT0_ISR 1A3E                                      _INT1_ISR 19DE  
                                    _INT2_ISR 1A0E                                      i1u100_20 14CE  
                                    i1u100_21 14CA                                      i1u101_20 14EE  
                                    i1u101_21 14EA                                      i1u102_24 1510  
                                    i1u102_25 150C                                      i1u113_20 187E  
                                    i1u113_21 187A                                      i1u114_25 18C8  
                                    i1u114_27 18CA                                      i1u207_27 1B3A  
                                    i1u208_27 1B64                                      i1u209_27 1B8E  
                                    i1u146_20 19F2                                      i1u146_21 19EE  
                                    i1u147_28 19F8                                      i1u147_29 1A0C  
                                    i1u165_20 004C                                      i1u165_21 0048  
                              i2_INT0_App_ISR 1BBC                                      i1u166_20 005A  
                                    i1u166_21 0056                                      i2u110_44 1592  
                                    i2u110_45 158E                                      i2u210_47 1BAE  
                                    i2u211_47 1BCE                                      i2u108_40 1550  
                                    i2u108_41 154C                                      i2u212_47 1BEE  
                                    i2u109_40 1570                                      i2u109_41 156C  
                                    i2u118_40 18E4                                      i2u118_41 18E0  
                                    i2u119_45 192E                                      i2u119_47 1930  
                                    i2u144_40 1A52                                      i2u144_41 1A4E  
                                    i2u161_40 16D4                                      i2u161_41 16D0  
                                    i2u145_48 1A58                                      i2u162_40 16E2  
                                    i2u145_49 1A6C                                      i2u162_41 16DE  
                                    i2u163_40 16F4                                      i2u163_41 16F0  
                                    i2u148_40 1A22                                      i2u164_40 1702  
                                    i2u148_41 1A1E                                      i2u164_41 16FE  
                                    i2u149_48 1A28                                      i2u149_49 1A3C  
                              i2_INT1_App_ISR 1B9C                Interrupt_INTx_Pin_Init@int_obj 0080  
                                    _RCONbits 0FD0                                i2_INT2_App_ISR 1BDC  
            gpio_pin_direction_initialize@ret 007C    gpio_pin_direction_initialize@_pin_config_t 0076  
                      _Interrupt_Manager_High 0008                        _INT2_INTERRUPT_HANDLER 0041  
                             i2led_toggle@led 0006                 INT2_Set_Interrupt_Handler@ret 0078  
                             i2led_toggle@pin 0008                        gpio_pin_initialize@ret 007F  
             __end_ofi2_gpio_pin_toggle_logic 15C2                ??_Interrupt_INTx_Priority_Init 0077  
                           ?_application_init 0001                                   _INTCON2bits 0FF1  
                                 _INTCON3bits 0FF0                                     copy_data0 194E  
                                   copy_data1 196E                                ??i2_led_toggle 0007  
                    ?_Interrupt_INTx_Pin_Init 0080                                  ??_led_toggle 0017  
                          ??_application_init 0076                          _ecu_layer_initialize 1C3C  
                      __end_ofi2_INT0_App_ISR 1BDC                        __end_ofi2_INT1_App_ISR 1BBC  
                                    __Hrparam 0000                        __end_ofi2_INT2_App_ISR 1BFC  
                                    __Lrparam 0000                     Interrupt_INTx_Disable@ret 0079  
                      _INT2_App_ISR$intlevel1 1B7C                    Interrupt_INTx_Init@int_obj 0082  
                 __end_of_gpio_pin_initialize 19DE                            __end_of_led_toggle 18D4  
                ??_INT0_Set_Interrupt_Handler 0078                                      __ptext10 1AF2  
                                    __ptext11 1994                                      __ptext20 1B48  
                                    __ptext12 1120                                      __ptext21 1B72  
                                    __ptext13 1238                                      __ptext30 18D4  
                                    __ptext22 186E                                      __ptext14 1002  
                                    __ptext31 1540                                      __ptext23 14BE  
                                    __ptext15 1722                                      __ptext16 1792  
                                    __ptext25 1A0E                                      __ptext26 1A3E  
                                    __ptext18 19DE                                      __ptext27 1B9C  
                                    __ptext19 1B1E                                      __ptext28 1BBC  
                                    __ptext29 1BDC                                      _int0_obj 0038  
                                    _int1_obj 0070                                      _int2_obj 006A  
            Interrupt_INTx_Clear_Flag@int_obj 0076                         ?_ecu_layer_initialize 0001  
                             ?i2_INT0_App_ISR 0001                               ?i2_INT1_App_ISR 0001  
                             ?i2_INT2_App_ISR 0001                                      isa$xinst 0000  
                                    int$flags 004B                         _Interrupt_Manager_Low 0018  
                    ??_Interrupt_INTx_Disable 0077                           _Interrupt_INTx_Init 1638  
                                  _INTCONbits 0FF2               __end_of_Interrupt_INTx_Pin_Init 1B1E  
                                    intlevel1 0000                                      intlevel2 0000  
                Interrupt_INTx_Clear_Flag@ret 0079                          ?_Interrupt_INTx_Init 0082  
                  Interrupt_INTx_Pin_Init@ret 0081                         _gpio_pin_toggle_logic 14BE  
                     ??_Interrupt_INTx_Enable 0077                          __end_ofi2_led_toggle 193A  
                 ?_INT2_Set_Interrupt_Handler 0076                                _port_registers 0060  
                      ??_ecu_layer_initialize 0076                         ??_Interrupt_INTx_Init 0083  
                              _led_initialize 15C2  
