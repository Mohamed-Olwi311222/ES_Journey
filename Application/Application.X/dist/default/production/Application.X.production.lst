

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 05 06:35:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43   000000                     
    44                           ; Generated 12/10/2023 GMT
    45                           ; 
    46                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    47                           ; All rights reserved.
    48                           ; 
    49                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    50                           ; 
    51                           ; Redistribution and use in source and binary forms, with or without modification, are
    52                           ; permitted provided that the following conditions are met:
    53                           ; 
    54                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    55                           ;        conditions and the following disclaimer.
    56                           ; 
    57                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    58                           ;        of conditions and the following disclaimer in the documentation and/or other
    59                           ;        materials provided with the distribution. Publication is not required when
    60                           ;        this file is used in an embedded application.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC18F46K20 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78   000000                     
    79                           	psect	idataCOMRAM
    80   002060                     __pidataCOMRAM:
    81                           	callstack 0
    82                           
    83                           ;initializer for _seconds
    84   002060  2D                 	db	45
    85                           
    86                           ;initializer for _minutes
    87   002061  3B                 	db	59
    88                           
    89                           ;initializer for _hours
    90   002062  17                 	db	23
    91                           
    92                           ;initializer for _dc_motor_2
    93   002063  12                 	db	18
    94   002064  1A                 	db	26
    95                           
    96                           ;initializer for _dc_motor_1
    97   002065  02                 	db	2
    98   002066  0A                 	db	10
    99                           
   100                           ;initializer for _seg6_enable
   101   002067  2B                 	db	43
   102                           
   103                           ;initializer for _seg5_enable
   104   002068  23                 	db	35
   105                           
   106                           ;initializer for _seg4_enable
   107   002069  1B                 	db	27
   108                           
   109                           ;initializer for _seg3_enable
   110   00206A  13                 	db	19
   111                           
   112                           ;initializer for _seg2_enable
   113   00206B  0B                 	db	11
   114                           
   115                           ;initializer for _seg1_enable
   116   00206C  03                 	db	3
   117                           
   118                           ;initializer for _relay2
   119   00206D  12                 	db	18
   120                           
   121                           ;initializer for _relay1
   122   00206E  02                 	db	2
   123                           
   124                           ;initializer for _led2
   125   00206F  12                 	db	18
   126                           
   127                           ;initializer for _led1
   128   002070  02                 	db	2
   129                           
   130                           	psect	idataBANK0
   131   001F52                     __pidataBANK0:
   132                           	callstack 0
   133                           
   134                           ;initializer for _port_registers
   135   001F52  80                 	db	128
   136   001F53  0F                 	db	15
   137   001F54  81                 	db	129
   138   001F55  0F                 	db	15
   139   001F56  82                 	db	130
   140   001F57  0F                 	db	15
   141   001F58  83                 	db	131
   142   001F59  0F                 	db	15
   143   001F5A  84                 	db	132
   144   001F5B  0F                 	db	15
   145                           
   146                           ;initializer for _tris_registers
   147   001F5C  92                 	db	146
   148   001F5D  0F                 	db	15
   149   001F5E  93                 	db	147
   150   001F5F  0F                 	db	15
   151   001F60  94                 	db	148
   152   001F61  0F                 	db	15
   153   001F62  95                 	db	149
   154   001F63  0F                 	db	15
   155   001F64  96                 	db	150
   156   001F65  0F                 	db	15
   157                           
   158                           ;initializer for _lat_registers
   159   001F66  89                 	db	137
   160   001F67  0F                 	db	15
   161   001F68  8A                 	db	138
   162   001F69  0F                 	db	15
   163   001F6A  8B                 	db	139
   164   001F6B  0F                 	db	15
   165   001F6C  8C                 	db	140
   166   001F6D  0F                 	db	15
   167   001F6E  8D                 	db	141
   168   001F6F  0F                 	db	15
   169                           
   170                           ;initializer for _lcd_2
   171   001F70  32                 	db	50
   172   001F71  3A                 	db	58
   173   001F72  03                 	db	3
   174   001F73  0B                 	db	11
   175   001F74  13                 	db	19
   176   001F75  1B                 	db	27
   177   001F76  23                 	db	35
   178   001F77  2B                 	db	43
   179   001F78  33                 	db	51
   180   001F79  3B                 	db	59
   181                           
   182                           ;initializer for _keypad1
   183   001F7A  82                 	db	130
   184   001F7B  8A                 	db	138
   185   001F7C  92                 	db	146
   186   001F7D  9A                 	db	154
   187   001F7E  62                 	db	98
   188   001F7F  6A                 	db	106
   189   001F80  72                 	db	114
   190   001F81  7A                 	db	122
   191                           
   192                           ;initializer for _lcd_1
   193   001F82  02                 	db	2
   194   001F83  0A                 	db	10
   195   001F84  12                 	db	18
   196   001F85  1A                 	db	26
   197   001F86  22                 	db	34
   198   001F87  2A                 	db	42
   199                           
   200                           ;initializer for _seg1
   201   001F88  02                 	db	2
   202   001F89  0A                 	db	10
   203   001F8A  12                 	db	18
   204   001F8B  1A                 	db	26
   205   001F8C  01                 	db	1
   206                           
   207                           ;initializer for _btn_high
   208   001F8D  52                 	db	82
   209   001F8E  00                 	db	0
   210   001F8F  00                 	db	0
   211                           
   212                           ;initializer for _btn_low
   213   001F90  C3                 	db	195
   214   001F91  00                 	db	0
   215   001F92  01                 	db	1
   216                           
   217                           	psect	smallconst
   218   001000                     __psmallconst:
   219                           	callstack 0
   220   001000  00                 	db	0
   221   001001                     _btn_values:
   222                           	callstack 0
   223   001001  37                 	db	55
   224   001002  38                 	db	56
   225   001003  39                 	db	57
   226   001004  2F                 	db	47
   227   001005  34                 	db	52
   228   001006  35                 	db	53
   229   001007  36                 	db	54
   230   001008  2A                 	db	42
   231   001009  31                 	db	49
   232   00100A  32                 	db	50
   233   00100B  33                 	db	51
   234   00100C  2D                 	db	45
   235   00100D  23                 	db	35
   236   00100E  30                 	db	48
   237   00100F  3D                 	db	61
   238   001010  2B                 	db	43
   239   001011                     __end_of_btn_values:
   240                           	callstack 0
   241   000000                     _PORTA	set	3968
   242   000000                     _LATA	set	3977
   243   000000                     _TRISA	set	3986
   244   000000                     _LATE	set	3981
   245   000000                     _LATD	set	3980
   246   000000                     _LATC	set	3979
   247   000000                     _LATB	set	3978
   248   000000                     _TRISE	set	3990
   249   000000                     _TRISD	set	3989
   250   000000                     _TRISC	set	3988
   251   000000                     _TRISB	set	3987
   252   000000                     _PORTE	set	3972
   253   000000                     _PORTD	set	3971
   254   000000                     _PORTC	set	3970
   255   000000                     _PORTB	set	3969
   256   001011                     STR_1:
   257   001011  25                 	db	37
   258   001012  69                 	db	105	;'i'
   259   001013  00                 	db	0
   260   001014  00                 	db	0	; dummy byte at the end
   261   000000                     
   262                           ; #config settings
   263                           
   264                           	psect	cinit
   265   001D10                     __pcinit:
   266                           	callstack 0
   267   001D10                     start_initialization:
   268                           	callstack 0
   269   001D10                     __initialization:
   270                           	callstack 0
   271                           
   272                           ; Initialize objects allocated to BANK0 (65 bytes)
   273                           ; load TBLPTR registers with __pidataBANK0
   274   001D10  0E52               	movlw	low __pidataBANK0
   275   001D12  6EF6               	movwf	tblptrl,c
   276   001D14  0E1F               	movlw	high __pidataBANK0
   277   001D16  6EF7               	movwf	tblptrh,c
   278   001D18  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   279   001D1A  6EF8               	movwf	tblptru,c
   280   001D1C  EE00  F060         	lfsr	0,__pdataBANK0
   281   001D20  EE10 F041          	lfsr	1,65
   282   001D24                     copy_data0:
   283   001D24  0009               	tblrd		*+
   284   001D26  CFF5 FFEE          	movff	tablat,postinc0
   285   001D2A  50E5               	movf	postdec1,w,c
   286   001D2C  50E1               	movf	fsr1l,w,c
   287   001D2E  E1FA               	bnz	copy_data0
   288                           
   289                           ; Initialize objects allocated to COMRAM (17 bytes)
   290                           ; load TBLPTR registers with __pidataCOMRAM
   291   001D30  0E60               	movlw	low __pidataCOMRAM
   292   001D32  6EF6               	movwf	tblptrl,c
   293   001D34  0E20               	movlw	high __pidataCOMRAM
   294   001D36  6EF7               	movwf	tblptrh,c
   295   001D38  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   296   001D3A  6EF8               	movwf	tblptru,c
   297   001D3C  EE00  F04F         	lfsr	0,__pdataCOMRAM
   298   001D40  EE10 F011          	lfsr	1,17
   299   001D44                     copy_data1:
   300   001D44  0009               	tblrd		*+
   301   001D46  CFF5 FFEE          	movff	tablat,postinc0
   302   001D4A  50E5               	movf	postdec1,w,c
   303   001D4C  50E1               	movf	fsr1l,w,c
   304   001D4E  E1FA               	bnz	copy_data1
   305                           
   306                           ; Clear objects allocated to BANK0 (50 bytes)
   307   001D50  EE00  F0A1         	lfsr	0,__pbssBANK0
   308   001D54  0E32               	movlw	50
   309   001D56                     clear_0:
   310   001D56  6AEE               	clrf	postinc0,c
   311   001D58  06E8               	decf	wreg,f,c
   312   001D5A  E1FD               	bnz	clear_0
   313                           
   314                           ; Clear objects allocated to COMRAM (26 bytes)
   315   001D5C  EE00  F035         	lfsr	0,__pbssCOMRAM
   316   001D60  0E1A               	movlw	26
   317   001D62                     clear_1:
   318   001D62  6AEE               	clrf	postinc0,c
   319   001D64  06E8               	decf	wreg,f,c
   320   001D66  E1FD               	bnz	clear_1
   321   001D68                     end_of_initialization:
   322                           	callstack 0
   323   001D68                     __end_of__initialization:
   324                           	callstack 0
   325   001D68  0100               	movlb	0
   326   001D6A  EF1E  F00E         	goto	_main	;jump to C main() function
   327                           
   328                           	psect	bssCOMRAM
   329   000035                     __pbssCOMRAM:
   330                           	callstack 0
   331   000035                     _nout:
   332                           	callstack 0
   333   000035                     	ds	2
   334   000037                     _prec:
   335                           	callstack 0
   336   000037                     	ds	2
   337   000039                     _number2:
   338                           	callstack 0
   339   000039                     	ds	2
   340   00003B                     button_read_state@btn_low_valid:
   341                           	callstack 0
   342   00003B                     	ds	2
   343   00003D                     button_read_state@btn_high_valid:
   344                           	callstack 0
   345   00003D                     	ds	2
   346   00003F                     _flags:
   347                           	callstack 0
   348   00003F                     	ds	1
   349   000040                     _count:
   350                           	callstack 0
   351   000040                     	ds	1
   352   000041                     _number:
   353                           	callstack 0
   354   000041                     	ds	1
   355   000042                     _counter:
   356                           	callstack 0
   357   000042                     	ds	1
   358   000043                     _seg_val:
   359                           	callstack 0
   360   000043                     	ds	1
   361   000044                     relay_turn_off@F3160:
   362                           	callstack 0
   363   000044                     	ds	1
   364   000045                     relay_turn_on@F3155:
   365                           	callstack 0
   366   000045                     	ds	1
   367   000046                     relay_initialize@F3150:
   368                           	callstack 0
   369   000046                     	ds	1
   370   000047                     led_toggle@F3175:
   371                           	callstack 0
   372   000047                     	ds	1
   373   000048                     led_turn_off@F3170:
   374                           	callstack 0
   375   000048                     	ds	1
   376   000049                     led_turn_on@F3165:
   377                           	callstack 0
   378   000049                     	ds	1
   379   00004A                     led_intitialize@F3160:
   380                           	callstack 0
   381   00004A                     	ds	1
   382   00004B                     turn_on_leds@_POS:
   383                           	callstack 0
   384   00004B                     	ds	1
   385   00004C                     btn_high_magic_button@led_status:
   386                           	callstack 0
   387   00004C                     	ds	1
   388   00004D                     btn_high_magic_button@btn_high_last_valid_status:
   389                           	callstack 0
   390   00004D                     	ds	1
   391   00004E                     _value:
   392                           	callstack 0
   393   00004E                     	ds	1
   394                           
   395                           	psect	dataCOMRAM
   396   00004F                     __pdataCOMRAM:
   397                           	callstack 0
   398   00004F                     _seconds:
   399                           	callstack 0
   400   00004F                     	ds	1
   401   000050                     _minutes:
   402                           	callstack 0
   403   000050                     	ds	1
   404   000051                     _hours:
   405                           	callstack 0
   406   000051                     	ds	1
   407   000052                     _dc_motor_2:
   408                           	callstack 0
   409   000052                     	ds	2
   410   000054                     _dc_motor_1:
   411                           	callstack 0
   412   000054                     	ds	2
   413   000056                     _seg6_enable:
   414                           	callstack 0
   415   000056                     	ds	1
   416   000057                     _seg5_enable:
   417                           	callstack 0
   418   000057                     	ds	1
   419   000058                     _seg4_enable:
   420                           	callstack 0
   421   000058                     	ds	1
   422   000059                     _seg3_enable:
   423                           	callstack 0
   424   000059                     	ds	1
   425   00005A                     _seg2_enable:
   426                           	callstack 0
   427   00005A                     	ds	1
   428   00005B                     _seg1_enable:
   429                           	callstack 0
   430   00005B                     	ds	1
   431   00005C                     _relay2:
   432                           	callstack 0
   433   00005C                     	ds	1
   434   00005D                     _relay1:
   435                           	callstack 0
   436   00005D                     	ds	1
   437   00005E                     _led2:
   438                           	callstack 0
   439   00005E                     	ds	1
   440   00005F                     _led1:
   441                           	callstack 0
   442   00005F                     	ds	1
   443                           
   444                           	psect	bssBANK0
   445   0000A1                     __pbssBANK0:
   446                           	callstack 0
   447   0000A1                     _dbuf:
   448                           	callstack 0
   449   0000A1                     	ds	32
   450   0000C1                     _funcs:
   451                           	callstack 0
   452   0000C1                     	ds	6
   453   0000C7                     _lcd_counter_txt:
   454                           	callstack 0
   455   0000C7                     	ds	4
   456   0000CB                     _width:
   457                           	callstack 0
   458   0000CB                     	ds	2
   459   0000CD                     _lcd_counter_txt2:
   460                           	callstack 0
   461   0000CD                     	ds	6
   462                           
   463                           	psect	dataBANK0
   464   000060                     __pdataBANK0:
   465                           	callstack 0
   466   000060                     _port_registers:
   467                           	callstack 0
   468   000060                     	ds	10
   469   00006A                     _tris_registers:
   470                           	callstack 0
   471   00006A                     	ds	10
   472   000074                     _lat_registers:
   473                           	callstack 0
   474   000074                     	ds	10
   475   00007E                     _lcd_2:
   476                           	callstack 0
   477   00007E                     	ds	10
   478   000088                     _keypad1:
   479                           	callstack 0
   480   000088                     	ds	8
   481   000090                     _lcd_1:
   482                           	callstack 0
   483   000090                     	ds	6
   484   000096                     _seg1:
   485                           	callstack 0
   486   000096                     	ds	5
   487   00009B                     _btn_high:
   488                           	callstack 0
   489   00009B                     	ds	3
   490   00009E                     _btn_low:
   491                           	callstack 0
   492   00009E                     	ds	3
   493                           
   494                           	psect	cstackCOMRAM
   495   000001                     __pcstackCOMRAM:
   496                           	callstack 0
   497   000001                     ?___awdiv:
   498                           	callstack 0
   499   000001                     ?___awmod:
   500                           	callstack 0
   501   000001                     gpio_pin_direction_initialize@_pin_config_t:
   502                           	callstack 0
   503   000001                     gpio_pin_write_logic@_pin_config_t:
   504                           	callstack 0
   505   000001                     memset@dest:
   506                           	callstack 0
   507   000001                     ___awdiv@dividend:
   508                           	callstack 0
   509   000001                     ___awmod@dividend:
   510                           	callstack 0
   511   000001                     fputc@c:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x0
   515   000001                     	ds	1
   516   000002                     ??_gpio_pin_direction_initialize:
   517   000002                     gpio_pin_write_logic@logic:
   518                           	callstack 0
   519   000002                     memset@c:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0x1
   523   000002                     	ds	1
   524   000003                     ??_gpio_pin_write_logic:
   525   000003                     fputc@fp:
   526                           	callstack 0
   527   000003                     ___awdiv@divisor:
   528                           	callstack 0
   529   000003                     ___awmod@divisor:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x2
   533   000003                     	ds	1
   534   000004                     ??_fputc:
   535   000004                     memset@n:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x3
   539   000004                     	ds	1
   540   000005                     ___awdiv@counter:
   541                           	callstack 0
   542   000005                     ___awmod@counter:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x4
   546   000005                     	ds	1
   547   000006                     ___awdiv@sign:
   548                           	callstack 0
   549   000006                     ___awmod@sign:
   550                           	callstack 0
   551   000006                     memset@p:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x5
   555   000006                     	ds	1
   556   000007                     ?_abs:
   557                           	callstack 0
   558   000007                     gpio_pin_direction_initialize@ret:
   559                           	callstack 0
   560   000007                     ___awdiv@quotient:
   561                           	callstack 0
   562   000007                     abs@a:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x6
   566   000007                     	ds	1
   567   000008                     gpio_pin_initialize@_pin_config_t:
   568                           	callstack 0
   569   000008                     gpio_pin_write_logic@ret:
   570                           	callstack 0
   571                           
   572                           ; 1 bytes @ 0x7
   573   000008                     	ds	1
   574   000009                     ??_gpio_pin_initialize:
   575   000009                     ??_abs:
   576   000009                     lcd_send_4bits@lcd:
   577                           	callstack 0
   578   000009                     lcd_4bit_send_enable_signal@lcd:
   579                           	callstack 0
   580   000009                     lcd_8bit_send_enable_signal@lcd:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x8
   584   000009                     	ds	1
   585   00000A                     lcd_send_4bits@data_command:
   586                           	callstack 0
   587   00000A                     lcd_4bit_send_enable_signal@ret:
   588                           	callstack 0
   589   00000A                     lcd_8bit_send_enable_signal@ret:
   590                           	callstack 0
   591   00000A                     gpio_pin_initialize@ret:
   592                           	callstack 0
   593                           
   594                           ; 1 bytes @ 0x9
   595   00000A                     	ds	1
   596   00000B                     ??_lcd_send_4bits:
   597   00000B                     ?_vfpfcnvrt:
   598                           	callstack 0
   599   00000B                     lcd_8bit_send_command@lcd:
   600                           	callstack 0
   601   00000B                     lcd_8bit_send_char_data@lcd:
   602                           	callstack 0
   603   00000B                     vfpfcnvrt@fp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xA
   607   00000B                     	ds	1
   608   00000C                     lcd_8bit_send_command@command:
   609                           	callstack 0
   610   00000C                     lcd_8bit_send_char_data@data:
   611                           	callstack 0
   612   00000C                     vfpfcnvrt@fmt:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0xB
   616   00000C                     	ds	1
   617   00000D                     ??_lcd_8bit_send_command:
   618   00000D                     ??_lcd_8bit_send_char_data:
   619   00000D                     lcd_send_4bits@ret:
   620                           	callstack 0
   621   00000D                     vfpfcnvrt@ap:
   622                           	callstack 0
   623                           
   624                           ; 1 bytes @ 0xC
   625   00000D                     	ds	1
   626   00000E                     ??_vfpfcnvrt:
   627   00000E                     lcd_send_4bits@counter:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xD
   631   00000E                     	ds	1
   632   00000F                     lcd_4bit_send_command@lcd:
   633                           	callstack 0
   634   00000F                     lcd_8bit_send_command@counter:
   635                           	callstack 0
   636   00000F                     lcd_8bit_send_char_data@counter:
   637                           	callstack 0
   638   00000F                     vfpfcnvrt@done:
   639                           	callstack 0
   640                           
   641                           ; 1 bytes @ 0xE
   642   00000F                     	ds	1
   643   000010                     lcd_4bit_send_command@command:
   644                           	callstack 0
   645   000010                     lcd_8bit_send_command@ret:
   646                           	callstack 0
   647   000010                     lcd_8bit_send_char_data@ret:
   648                           	callstack 0
   649   000010                     vfpfcnvrt@cnt:
   650                           	callstack 0
   651                           
   652                           ; 2 bytes @ 0xF
   653   000010                     	ds	1
   654   000011                     lcd_4bit_send_command@ret:
   655                           	callstack 0
   656   000011                     lcd_8bit_initialize@lcd:
   657                           	callstack 0
   658   000011                     lcd_8bit_send_string@lcd:
   659                           	callstack 0
   660   000011                     lcd_8bit_set_cursor@lcd:
   661                           	callstack 0
   662                           
   663                           ; 1 bytes @ 0x10
   664   000011                     	ds	1
   665   000012                     ??_lcd_8bit_initialize:
   666   000012                     lcd_4bit_initialize@lcd:
   667                           	callstack 0
   668   000012                     lcd_8bit_send_string@str:
   669                           	callstack 0
   670   000012                     lcd_8bit_set_cursor@row:
   671                           	callstack 0
   672   000012                     vfpfcnvrt@cp:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x11
   676   000012                     	ds	1
   677   000013                     ??_lcd_4bit_initialize:
   678   000013                     lcd_8bit_initialize@lcd_data_counter:
   679                           	callstack 0
   680   000013                     lcd_8bit_send_string@ret:
   681                           	callstack 0
   682   000013                     lcd_8bit_set_cursor@col:
   683                           	callstack 0
   684   000013                     vfpfcnvrt@convarg:
   685                           	callstack 0
   686                           
   687                           ; 4 bytes @ 0x12
   688   000013                     	ds	1
   689   000014                     lcd_4bit_initialize@lcd_data_counter:
   690                           	callstack 0
   691   000014                     lcd_8bit_initialize@ret:
   692                           	callstack 0
   693   000014                     lcd_8bit_set_cursor@ret:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x13
   697   000014                     	ds	1
   698   000015                     lcd_4bit_initialize@ret:
   699                           	callstack 0
   700   000015                     lcd_8bit_send_string_pos@lcd:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x14
   704   000015                     	ds	1
   705   000016                     lcd_8bit_send_string_pos@row:
   706                           	callstack 0
   707   000016                     ecu_layer_initialize@ret:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x15
   711   000016                     	ds	1
   712   000017                     lcd_8bit_send_string_pos@col:
   713                           	callstack 0
   714   000017                     application_init@ret:
   715                           	callstack 0
   716   000017                     vfpfcnvrt@c:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x16
   720   000017                     	ds	1
   721   000018                     ?_vfprintf:
   722                           	callstack 0
   723   000018                     lcd_8bit_send_string_pos@str:
   724                           	callstack 0
   725   000018                     vfprintf@fp:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x17
   729   000018                     	ds	1
   730   000019                     lcd_8bit_send_string_pos@ret:
   731                           	callstack 0
   732   000019                     vfprintf@fmt:
   733                           	callstack 0
   734                           
   735                           ; 1 bytes @ 0x18
   736   000019                     	ds	1
   737   00001A                     vfprintf@ap:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x19
   741   00001A                     	ds	1
   742   00001B                     vfprintf@cfmt:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x1A
   746   00001B                     	ds	1
   747   00001C                     ?_sprintf:
   748                           	callstack 0
   749   00001C                     sprintf@s:
   750                           	callstack 0
   751                           
   752                           ; 1 bytes @ 0x1B
   753   00001C                     	ds	1
   754   00001D                     sprintf@fmt:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x1C
   758   00001D                     	ds	3
   759   000020                     sprintf@ret:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1F
   763   000020                     	ds	2
   764   000022                     sprintf@ap:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x21
   768   000022                     	ds	1
   769   000023                     sprintf@f:
   770                           	callstack 0
   771                           
   772                           ; 12 bytes @ 0x22
   773   000023                     	ds	12
   774   00002F                     convert_short_to_string@value:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x2E
   778   00002F                     	ds	2
   779   000031                     convert_short_to_string@str:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x30
   783   000031                     	ds	1
   784   000032                     convert_short_to_string@ret:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x31
   788   000032                     	ds	1
   789   000033                     ??_main:
   790                           
   791                           ; 1 bytes @ 0x32
   792   000033                     	ds	1
   793   000034                     main@ret:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x33
   797   000034                     	ds	1
   798                           
   799 ;;
   800 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   801 ;;
   802 ;; *************** function _main *****************
   803 ;; Defined at:
   804 ;;		line 13 in file "app.c"
   805 ;; Parameters:    Size  Location     Type
   806 ;;		None
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  ret             1   51[COMRAM] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  2  749[None  ] int 
   811 ;; Registers used:
   812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;Total ram usage:        2 bytes
   823 ;; Hardware stack levels required when called: 6
   824 ;; This function calls:
   825 ;;		_application_init
   826 ;;		_convert_short_to_string
   827 ;;		_lcd_8bit_send_command
   828 ;;		_lcd_8bit_send_string_pos
   829 ;; This function is called by:
   830 ;;		Startup code after reset
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           	psect	text0
   835   001C3C                     __ptext0:
   836                           	callstack 0
   837   001C3C                     _main:
   838                           	callstack 25
   839   001C3C                     
   840                           ;app.c: 15:     Std_ReturnType ret = application_init();
   841   001C3C  EC39  F010         	call	_application_init	;wreg free
   842   001C40  6E34               	movwf	main@ret^0,c
   843   001C42                     
   844                           ;app.c: 17:     if ((Std_ReturnType)0x01u == ret)
   845   001C42  0434               	decf	main@ret^0,w,c
   846   001C44  A4D8               	btfss	status,2,c
   847   001C46  EF27  F00E         	goto	u4021
   848   001C4A  EF29  F00E         	goto	u4020
   849   001C4E                     u4021:
   850   001C4E  EF2B  F00E         	goto	l4485
   851   001C52                     u4020:
   852   001C52  EF56  F00E         	goto	l751
   853   001C56                     l4485:
   854   001C56  0E7E               	movlw	low _lcd_2
   855   001C58  6E0B               	movwf	lcd_8bit_send_command@lcd^0,c
   856   001C5A  0E01               	movlw	1
   857   001C5C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   858   001C5E  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
   859   001C62                     
   860                           ;app.c: 27:             _delay((unsigned long)((25)*((8 *1000UL *1000UL)/4000.0)));
   861   001C62  0E41               	movlw	65
   862   001C64  6E33               	movwf	??_main^0,c
   863   001C66  0EEE               	movlw	238
   864   001C68                     u4037:
   865   001C68  2EE8               	decfsz	wreg,f,c
   866   001C6A  D7FE               	bra	u4037
   867   001C6C  2E33               	decfsz	??_main^0,f,c
   868   001C6E  D7FC               	bra	u4037
   869   001C70  F000 F000          	nop2	
   870   001C74  0E00               	movlw	0
   871   001C76  6E30               	movwf	(convert_short_to_string@value+1)^0,c
   872   001C78  0E00               	movlw	0
   873   001C7A  6E2F               	movwf	convert_short_to_string@value^0,c
   874   001C7C  0ECD               	movlw	low _lcd_counter_txt2
   875   001C7E  6E31               	movwf	convert_short_to_string@str^0,c
   876   001C80  ECB7  F00E         	call	_convert_short_to_string	;wreg free
   877   001C84  0E7E               	movlw	low _lcd_2
   878   001C86  6E15               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   879   001C88  0E01               	movlw	1
   880   001C8A  6E16               	movwf	lcd_8bit_send_string_pos@row^0,c
   881   001C8C  0E01               	movlw	1
   882   001C8E  6E17               	movwf	lcd_8bit_send_string_pos@col^0,c
   883   001C90  0ECD               	movlw	low _lcd_counter_txt2
   884   001C92  6E18               	movwf	lcd_8bit_send_string_pos@str^0,c
   885   001C94  ECE6  F00E         	call	_lcd_8bit_send_string_pos	;wreg free
   886   001C98                     
   887                           ;app.c: 31:         _delay((unsigned long)((50)*((8 *1000UL *1000UL)/4000.0)));
   888   001C98  0E82               	movlw	130
   889   001C9A  6E33               	movwf	??_main^0,c
   890   001C9C  0EDE               	movlw	222
   891   001C9E                     u4047:
   892   001C9E  2EE8               	decfsz	wreg,f,c
   893   001CA0  D7FE               	bra	u4047
   894   001CA2  2E33               	decfsz	??_main^0,f,c
   895   001CA4  D7FC               	bra	u4047
   896   001CA6                     
   897                           ;app.c: 32:         number++;
   898   001CA6  2A41               	incf	_number^0,f,c
   899   001CA8  EF2B  F00E         	goto	l4485
   900   001CAC                     l751:
   901   001CAC  EF00  F000         	goto	start
   902   001CB0                     __end_of_main:
   903                           	callstack 0
   904                           
   905 ;; *************** function _lcd_8bit_send_string_pos *****************
   906 ;; Defined at:
   907 ;;		line 343 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
   908 ;; Parameters:    Size  Location     Type
   909 ;;  lcd             1   20[COMRAM] PTR const struct .
   910 ;;		 -> lcd_2(10), 
   911 ;;  row             1   21[COMRAM] unsigned char 
   912 ;;  col             1   22[COMRAM] unsigned char 
   913 ;;  str             1   23[COMRAM] PTR unsigned char 
   914 ;;		 -> lcd_counter_txt2(6), 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  ret             1   24[COMRAM] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;                  1    wreg      unsigned char 
   919 ;; Registers used:
   920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   926 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   929 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   930 ;;Total ram usage:        5 bytes
   931 ;; Hardware stack levels used: 1
   932 ;; Hardware stack levels required when called: 4
   933 ;; This function calls:
   934 ;;		_lcd_8bit_send_string
   935 ;;		_lcd_8bit_set_cursor
   936 ;; This function is called by:
   937 ;;		_main
   938 ;; This function uses a non-reentrant model
   939 ;;
   940                           
   941                           	psect	text1
   942   001DCC                     __ptext1:
   943                           	callstack 0
   944   001DCC                     _lcd_8bit_send_string_pos:
   945                           	callstack 26
   946   001DCC                     
   947                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 346:  if (((void*)0) == lcd || ((void*)0) == str)
   948   001DCC  5015               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   949   001DCE  B4D8               	btfsc	status,2,c
   950   001DD0  EFEC  F00E         	goto	u3141
   951   001DD4  EFEE  F00E         	goto	u3140
   952   001DD8                     u3141:
   953   001DD8  EFF6  F00E         	goto	l3729
   954   001DDC                     u3140:
   955   001DDC  5018               	movf	lcd_8bit_send_string_pos@str^0,w,c
   956   001DDE  A4D8               	btfss	status,2,c
   957   001DE0  EFF4  F00E         	goto	u3151
   958   001DE4  EFF6  F00E         	goto	u3150
   959   001DE8                     u3151:
   960   001DE8  EFFA  F00E         	goto	l3731
   961   001DEC                     u3150:
   962   001DEC                     l3729:
   963                           
   964                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 347:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 348:     
      +                           ret = (Std_ReturnType)0x01u;
   965   001DEC  0E01               	movlw	1
   966   001DEE  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   967                           
   968                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 349:  }
   969   001DF0  EF12  F00F         	goto	l3737
   970   001DF4                     l3731:
   971                           
   972                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 351:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 352:   re
      +                          t = lcd_8bit_set_cursor(lcd, row, col);
   973   001DF4  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   974   001DF8  C016  F012         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   975   001DFC  C017  F013         	movff	lcd_8bit_send_string_pos@col,lcd_8bit_set_cursor@col
   976   001E00  ECE8  F00C         	call	_lcd_8bit_set_cursor	;wreg free
   977   001E04  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   978   001E06                     
   979                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 353:   if ((Std_ReturnType)0x00u == ret)
   980   001E06  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   981   001E08  A4D8               	btfss	status,2,c
   982   001E0A  EF09  F00F         	goto	u3161
   983   001E0E  EF0B  F00F         	goto	u3160
   984   001E12                     u3161:
   985   001E12  EF12  F00F         	goto	l3737
   986   001E16                     u3160:
   987   001E16                     
   988                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 354:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 355:    
      +                          ret = lcd_8bit_send_string(lcd, str);
   989   001E16  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
   990   001E1A  C018  F012         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
   991   001E1E  EC58  F00E         	call	_lcd_8bit_send_string	;wreg free
   992   001E22  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   993   001E24                     l3737:
   994                           
   995                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 358:  return (ret);
   996   001E24  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   997   001E26  0012               	return		;funcret
   998   001E28                     __end_of_lcd_8bit_send_string_pos:
   999                           	callstack 0
  1000                           
  1001 ;; *************** function _lcd_8bit_set_cursor *****************
  1002 ;; Defined at:
  1003 ;;		line 470 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  lcd             1   16[COMRAM] PTR const struct .
  1006 ;;		 -> lcd_2(10), 
  1007 ;;  row             1   17[COMRAM] unsigned char 
  1008 ;;  col             1   18[COMRAM] unsigned char 
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;  ret             1   19[COMRAM] unsigned char 
  1011 ;; Return value:  Size  Location     Type
  1012 ;;                  1    wreg      unsigned char 
  1013 ;; Registers used:
  1014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1020 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1023 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1024 ;;Total ram usage:        4 bytes
  1025 ;; Hardware stack levels used: 1
  1026 ;; Hardware stack levels required when called: 3
  1027 ;; This function calls:
  1028 ;;		_lcd_8bit_send_command
  1029 ;; This function is called by:
  1030 ;;		_lcd_8bit_send_string_pos
  1031 ;;		_lcd_8bit_send_char_data_pos
  1032 ;; This function uses a non-reentrant model
  1033 ;;
  1034                           
  1035                           	psect	text2
  1036   0019D0                     __ptext2:
  1037                           	callstack 0
  1038   0019D0                     _lcd_8bit_set_cursor:
  1039                           	callstack 26
  1040   0019D0                     
  1041                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 474:  if (((void*)0) == lcd)
  1042   0019D0  5011               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1043   0019D2  A4D8               	btfss	status,2,c
  1044   0019D4  EFEE  F00C         	goto	u2911
  1045   0019D8  EFF0  F00C         	goto	u2910
  1046   0019DC                     u2911:
  1047   0019DC  EFF4  F00C         	goto	l3549
  1048   0019E0                     u2910:
  1049   0019E0                     l3547:
  1050                           
  1051                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 475:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 476:   re
      +                          t = (Std_ReturnType)0x01u;
  1052   0019E0  0E01               	movlw	1
  1053   0019E2  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1054                           
  1055                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 477:  }
  1056   0019E4  EF3C  F00D         	goto	l3569
  1057   0019E8                     l3549:
  1058                           
  1059                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 479:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 480:   co
      +                          l--;
  1060   0019E8  0613               	decf	lcd_8bit_set_cursor@col^0,f,c
  1061   0019EA                     
  1062                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 481:   if ((0xff) == col)
  1063   0019EA  2813               	incf	lcd_8bit_set_cursor@col^0,w,c
  1064   0019EC  A4D8               	btfss	status,2,c
  1065   0019EE  EFFB  F00C         	goto	u2921
  1066   0019F2  EFFD  F00C         	goto	u2920
  1067   0019F6                     u2921:
  1068   0019F6  EF29  F00D         	goto	l3567
  1069   0019FA                     u2920:
  1070   0019FA                     
  1071                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 482:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 483:    
      +                          col = 0;
  1072   0019FA  0E00               	movlw	0
  1073   0019FC  6E13               	movwf	lcd_8bit_set_cursor@col^0,c
  1074   0019FE  EF29  F00D         	goto	l3567
  1075   001A02                     l3555:
  1076                           
  1077                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 488:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x80 + col);
  1078   001A02  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1079   001A06  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1080   001A08  0F80               	addlw	128
  1081   001A0A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1082   001A0C  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  1083   001A10  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1084                           
  1085                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 489:                 break;
  1086   001A12  EF3C  F00D         	goto	l3569
  1087   001A16                     l3557:
  1088                           
  1089                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 491:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xC0 + col);
  1090   001A16  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1091   001A1A  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1092   001A1C  0FC0               	addlw	192
  1093   001A1E  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1094   001A20  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  1095   001A24  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1096                           
  1097                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 492:                 break;
  1098   001A26  EF3C  F00D         	goto	l3569
  1099   001A2A                     l3559:
  1100                           
  1101                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 494:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x94 + col);
  1102   001A2A  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1103   001A2E  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1104   001A30  0F94               	addlw	148
  1105   001A32  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1106   001A34  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  1107   001A38  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1108                           
  1109                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 495:                 break;
  1110   001A3A  EF3C  F00D         	goto	l3569
  1111   001A3E                     l3561:
  1112                           
  1113                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 497:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xD4 + col);
  1114   001A3E  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1115   001A42  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1116   001A44  0FD4               	addlw	212
  1117   001A46  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1118   001A48  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  1119   001A4C  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1120                           
  1121                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 498:                 break;
  1122   001A4E  EF3C  F00D         	goto	l3569
  1123   001A52                     l3567:
  1124   001A52  5012               	movf	lcd_8bit_set_cursor@row^0,w,c
  1125                           
  1126                           ; Switch size 1, requested type "simple"
  1127                           ; Number of cases is 4, Range of values is 1 to 4
  1128                           ; switch strategies available:
  1129                           ; Name         Instructions Cycles
  1130                           ; simple_byte           13     7 (average)
  1131                           ;	Chosen strategy is simple_byte
  1132   001A54  0A01               	xorlw	1	; case 1
  1133   001A56  B4D8               	btfsc	status,2,c
  1134   001A58  EF01  F00D         	goto	l3555
  1135   001A5C  0A03               	xorlw	3	; case 2
  1136   001A5E  B4D8               	btfsc	status,2,c
  1137   001A60  EF0B  F00D         	goto	l3557
  1138   001A64  0A01               	xorlw	1	; case 3
  1139   001A66  B4D8               	btfsc	status,2,c
  1140   001A68  EF15  F00D         	goto	l3559
  1141   001A6C  0A07               	xorlw	7	; case 4
  1142   001A6E  B4D8               	btfsc	status,2,c
  1143   001A70  EF1F  F00D         	goto	l3561
  1144   001A74  EFF0  F00C         	goto	l3547
  1145   001A78                     l3569:
  1146                           
  1147                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 504:  return (ret);
  1148   001A78  5014               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1149   001A7A  0012               	return		;funcret
  1150   001A7C                     __end_of_lcd_8bit_set_cursor:
  1151                           	callstack 0
  1152                           
  1153 ;; *************** function _lcd_8bit_send_string *****************
  1154 ;; Defined at:
  1155 ;;		line 322 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1156 ;; Parameters:    Size  Location     Type
  1157 ;;  lcd             1   16[COMRAM] PTR const struct .
  1158 ;;		 -> lcd_2(10), 
  1159 ;;  str             1   17[COMRAM] PTR unsigned char 
  1160 ;;		 -> lcd_counter_txt2(6), 
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;  ret             1   18[COMRAM] unsigned char 
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      unsigned char 
  1165 ;; Registers used:
  1166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1172 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;Total ram usage:        3 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 3
  1179 ;; This function calls:
  1180 ;;		_lcd_8bit_send_char_data
  1181 ;; This function is called by:
  1182 ;;		_lcd_8bit_send_string_pos
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           	psect	text3
  1187   001CB0                     __ptext3:
  1188                           	callstack 0
  1189   001CB0                     _lcd_8bit_send_string:
  1190                           	callstack 26
  1191   001CB0                     
  1192                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 322: Std_ReturnType lcd_8bit_send_string(const char_
      +                          lcd_8bit_t *lcd, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 323: {;ECU_Layer/Char_LC
      +                          D/ecu_char_lcd.c: 324:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  1193   001CB0  0E00               	movlw	0
  1194   001CB2  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1195                           
  1196                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 325:  if (((void*)0) == lcd)
  1197   001CB4  5011               	movf	lcd_8bit_send_string@lcd^0,w,c
  1198   001CB6  A4D8               	btfss	status,2,c
  1199   001CB8  EF60  F00E         	goto	u2931
  1200   001CBC  EF62  F00E         	goto	u2930
  1201   001CC0                     u2931:
  1202   001CC0  EF7B  F00E         	goto	l3585
  1203   001CC4                     u2930:
  1204   001CC4                     
  1205                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 326:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 327:     
      +                           ret = (Std_ReturnType)0x01u;
  1206   001CC4  0E01               	movlw	1
  1207   001CC6  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1208                           
  1209                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 328:  }
  1210   001CC8  EF86  F00E         	goto	l3587
  1211   001CCC                     l3577:
  1212                           
  1213                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 332:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 333:    
      +                          ret = lcd_8bit_send_char_data(lcd, *str++);
  1214   001CCC  C011  F00B         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1215   001CD0  5012               	movf	lcd_8bit_send_string@str^0,w,c
  1216   001CD2  6ED9               	movwf	fsr2l,c
  1217   001CD4  6ADA               	clrf	fsr2h,c
  1218   001CD6  50DF               	movf	indf2,w,c
  1219   001CD8  6E0C               	movwf	lcd_8bit_send_char_data@data^0,c
  1220   001CDA  EC3A  F00C         	call	_lcd_8bit_send_char_data	;wreg free
  1221   001CDE  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1222   001CE0  2A12               	incf	lcd_8bit_send_string@str^0,f,c
  1223   001CE2                     
  1224                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 334:    if ((Std_ReturnType)0x01u == ret)
  1225   001CE2  0413               	decf	lcd_8bit_send_string@ret^0,w,c
  1226   001CE4  A4D8               	btfss	status,2,c
  1227   001CE6  EF77  F00E         	goto	u2941
  1228   001CEA  EF79  F00E         	goto	u2940
  1229   001CEE                     u2941:
  1230   001CEE  EF7B  F00E         	goto	l3585
  1231   001CF2                     u2940:
  1232   001CF2  EF86  F00E         	goto	l3587
  1233   001CF6                     l3585:
  1234                           
  1235                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 331:   while (*str)
  1236   001CF6  5012               	movf	lcd_8bit_send_string@str^0,w,c
  1237   001CF8  6ED9               	movwf	fsr2l,c
  1238   001CFA  6ADA               	clrf	fsr2h,c
  1239   001CFC  50DF               	movf	indf2,w,c
  1240   001CFE  A4D8               	btfss	status,2,c
  1241   001D00  EF84  F00E         	goto	u2951
  1242   001D04  EF86  F00E         	goto	u2950
  1243   001D08                     u2951:
  1244   001D08  EF66  F00E         	goto	l3577
  1245   001D0C                     u2950:
  1246   001D0C                     l3587:
  1247                           
  1248                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 340:  return (ret);
  1249   001D0C  5013               	movf	lcd_8bit_send_string@ret^0,w,c
  1250   001D0E  0012               	return		;funcret
  1251   001D10                     __end_of_lcd_8bit_send_string:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _lcd_8bit_send_char_data *****************
  1255 ;; Defined at:
  1256 ;;		line 273 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  lcd             1   10[COMRAM] PTR const struct .
  1259 ;;		 -> lcd_2(10), 
  1260 ;;  data            1   11[COMRAM] unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  ret             1   15[COMRAM] unsigned char 
  1263 ;;  counter         1   14[COMRAM] unsigned char 
  1264 ;; Return value:  Size  Location     Type
  1265 ;;                  1    wreg      unsigned char 
  1266 ;; Registers used:
  1267 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1268 ;; Tracked objects:
  1269 ;;		On entry : 0/0
  1270 ;;		On exit  : 0/0
  1271 ;;		Unchanged: 0/0
  1272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1275 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1276 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1277 ;;Total ram usage:        6 bytes
  1278 ;; Hardware stack levels used: 1
  1279 ;; Hardware stack levels required when called: 2
  1280 ;; This function calls:
  1281 ;;		_gpio_pin_write_logic
  1282 ;;		_lcd_8bit_send_enable_signal
  1283 ;; This function is called by:
  1284 ;;		_lcd_8bit_send_string
  1285 ;;		_lcd_8bit_send_char_data_pos
  1286 ;; This function uses a non-reentrant model
  1287 ;;
  1288                           
  1289                           	psect	text4
  1290   001874                     __ptext4:
  1291                           	callstack 0
  1292   001874                     _lcd_8bit_send_char_data:
  1293                           	callstack 26
  1294   001874                     
  1295                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 276:  uint8 counter = 0x00;
  1296   001874  0E00               	movlw	0
  1297   001876  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1298                           
  1299                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 278:  if (((void*)0) == lcd)
  1300   001878  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1301   00187A  A4D8               	btfss	status,2,c
  1302   00187C  EF42  F00C         	goto	u2741
  1303   001880  EF44  F00C         	goto	u2740
  1304   001884                     u2741:
  1305   001884  EF48  F00C         	goto	l3467
  1306   001888                     u2740:
  1307   001888                     
  1308                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 279:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 280:     
      +                           ret = (Std_ReturnType)0x01u;
  1309   001888  0E01               	movlw	1
  1310   00188A  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1311                           
  1312                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 281:  }
  1313   00188C  EF8F  F00C         	goto	l3491
  1314   001890                     l3467:
  1315                           
  1316                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 283:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 284:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  1317   001890  C00B  F001         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config_t
  1318   001894  0E01               	movlw	1
  1319   001896  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1320   001898  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  1321   00189C  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1322   00189E                     
  1323                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 285:   if ((Std_ReturnType)0x00u == ret)
  1324   00189E  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1325   0018A0  A4D8               	btfss	status,2,c
  1326   0018A2  EF55  F00C         	goto	u2751
  1327   0018A6  EF57  F00C         	goto	u2750
  1328   0018AA                     u2751:
  1329   0018AA  EF8F  F00C         	goto	l3491
  1330   0018AE                     u2750:
  1331   0018AE                     
  1332                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 286:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 287:    
      +                          for (counter = 0x00; counter < 8; counter++)
  1333   0018AE  0E00               	movlw	0
  1334   0018B0  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1335   0018B2                     l3477:
  1336                           
  1337                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 288:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 289:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data >> counter) & (uint8)1);
  1338   0018B2  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1339   0018B4  240F               	addwf	lcd_8bit_send_char_data@counter^0,w,c
  1340   0018B6  0F02               	addlw	2
  1341   0018B8  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1342   0018BA  C00F  F00D         	movff	lcd_8bit_send_char_data@counter,??_lcd_8bit_send_char_data
  1343   0018BE  C00C  F00E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1344   0018C2  2A0D               	incf	??_lcd_8bit_send_char_data^0,f,c
  1345   0018C4  EF66  F00C         	goto	u2764
  1346   0018C8                     u2765:
  1347   0018C8  90D8               	bcf	status,0,c
  1348   0018CA  320E               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1349   0018CC                     u2764:
  1350   0018CC  2E0D               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1351   0018CE  EF64  F00C         	goto	u2765
  1352   0018D2  500E               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1353   0018D4  0B01               	andlw	1
  1354   0018D6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1355   0018D8  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  1356   0018DC  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1357   0018DE                     
  1358                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 290:     if ((Std_ReturnType)0x01u == ret)
  1359   0018DE  0410               	decf	lcd_8bit_send_char_data@ret^0,w,c
  1360   0018E0  A4D8               	btfss	status,2,c
  1361   0018E2  EF75  F00C         	goto	u2771
  1362   0018E6  EF77  F00C         	goto	u2770
  1363   0018EA                     u2771:
  1364   0018EA  EF79  F00C         	goto	l3483
  1365   0018EE                     u2770:
  1366   0018EE  EF82  F00C         	goto	l3487
  1367   0018F2                     l3483:
  1368                           
  1369                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 294:    }
  1370   0018F2  2A0F               	incf	lcd_8bit_send_char_data@counter^0,f,c
  1371   0018F4  0E07               	movlw	7
  1372   0018F6  640F               	cpfsgt	lcd_8bit_send_char_data@counter^0,c
  1373   0018F8  EF80  F00C         	goto	u2781
  1374   0018FC  EF82  F00C         	goto	u2780
  1375   001900                     u2781:
  1376   001900  EF59  F00C         	goto	l3477
  1377   001904                     u2780:
  1378   001904                     l3487:
  1379                           
  1380                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 295:    if ((Std_ReturnType)0x00u == ret)
  1381   001904  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1382   001906  A4D8               	btfss	status,2,c
  1383   001908  EF88  F00C         	goto	u2791
  1384   00190C  EF8A  F00C         	goto	u2790
  1385   001910                     u2791:
  1386   001910  EF8F  F00C         	goto	l3491
  1387   001914                     u2790:
  1388   001914                     
  1389                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 296:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 297:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  1390   001914  C00B  F009         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1391   001918  ECCA  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  1392   00191C  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1393   00191E                     l3491:
  1394                           
  1395                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 301:  return (ret);
  1396   00191E  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1397   001920  0012               	return		;funcret
  1398   001922                     __end_of_lcd_8bit_send_char_data:
  1399                           	callstack 0
  1400                           
  1401 ;; *************** function _convert_short_to_string *****************
  1402 ;; Defined at:
  1403 ;;		line 525 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  value           2   46[COMRAM] unsigned short 
  1406 ;;  str             1   48[COMRAM] PTR unsigned char 
  1407 ;;		 -> lcd_counter_txt2(6), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  ret             1   49[COMRAM] unsigned char 
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      unsigned char 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1419 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1420 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1423 ;;Total ram usage:        4 bytes
  1424 ;; Hardware stack levels used: 1
  1425 ;; Hardware stack levels required when called: 5
  1426 ;; This function calls:
  1427 ;;		_memset
  1428 ;;		_sprintf
  1429 ;; This function is called by:
  1430 ;;		_main
  1431 ;; This function uses a non-reentrant model
  1432 ;;
  1433                           
  1434                           	psect	text5
  1435   001D6E                     __ptext5:
  1436                           	callstack 0
  1437   001D6E                     _convert_short_to_string:
  1438                           	callstack 25
  1439   001D6E                     
  1440                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 525: Std_ReturnType convert_short_to_string(uint16 v
      +                          alue, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 526: {;ECU_Layer/Char_LCD/ecu_char_
      +                          lcd.c: 527:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  1441   001D6E  0E00               	movlw	0
  1442   001D70  6E32               	movwf	convert_short_to_string@ret^0,c
  1443                           
  1444                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 528:  if (((void*)0) == str)
  1445   001D72  5031               	movf	convert_short_to_string@str^0,w,c
  1446   001D74  A4D8               	btfss	status,2,c
  1447   001D76  EFBF  F00E         	goto	u3171
  1448   001D7A  EFC1  F00E         	goto	u3170
  1449   001D7E                     u3171:
  1450   001D7E  EFC5  F00E         	goto	l3745
  1451   001D82                     u3170:
  1452   001D82                     l3743:
  1453                           
  1454                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 529:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 530:     
      +                           ret = (Std_ReturnType)0x01u;
  1455   001D82  0E01               	movlw	1
  1456   001D84  6E32               	movwf	convert_short_to_string@ret^0,c
  1457                           
  1458                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 531:  }
  1459   001D86  EFE4  F00E         	goto	l247
  1460   001D8A                     l3745:
  1461                           
  1462                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 533:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 534:   me
      +                          mset(str, '\0', 6);
  1463   001D8A  C031  F001         	movff	convert_short_to_string@str,memset@dest
  1464   001D8E  0E00               	movlw	0
  1465   001D90  6E03               	movwf	(memset@c+1)^0,c
  1466   001D92  0E00               	movlw	0
  1467   001D94  6E02               	movwf	memset@c^0,c
  1468   001D96  0E00               	movlw	0
  1469   001D98  6E05               	movwf	(memset@n+1)^0,c
  1470   001D9A  0E06               	movlw	6
  1471   001D9C  6E04               	movwf	memset@n^0,c
  1472   001D9E  EC04  F010         	call	_memset	;wreg free
  1473   001DA2                     
  1474                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 535:   if (sprintf(str, "%i", value) < 0)
  1475   001DA2  C031  F01C         	movff	convert_short_to_string@str,sprintf@s
  1476   001DA6  0E11               	movlw	low STR_1
  1477   001DA8  6E1D               	movwf	sprintf@fmt^0,c
  1478   001DAA  C02F  F01E         	movff	convert_short_to_string@value,?_sprintf+2
  1479   001DAE  C030  F01F         	movff	convert_short_to_string@value+1,?_sprintf+3
  1480   001DB2  EC87  F00F         	call	_sprintf	;wreg free
  1481   001DB6  BE1D               	btfsc	(?_sprintf+1)^0,7,c
  1482   001DB8  EFE2  F00E         	goto	u3180
  1483   001DBC  EFE0  F00E         	goto	u3181
  1484   001DC0                     u3181:
  1485   001DC0  EFE4  F00E         	goto	l247
  1486   001DC4                     u3180:
  1487   001DC4  EFC1  F00E         	goto	l3743
  1488   001DC8                     l247:
  1489                           
  1490                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 540:  return (ret);
  1491   001DC8  5032               	movf	convert_short_to_string@ret^0,w,c
  1492   001DCA  0012               	return		;funcret
  1493   001DCC                     __end_of_convert_short_to_string:
  1494                           	callstack 0
  1495                           
  1496 ;; *************** function _sprintf *****************
  1497 ;; Defined at:
  1498 ;;		line 9 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  1499 ;; Parameters:    Size  Location     Type
  1500 ;;  s               1   27[COMRAM] PTR unsigned char 
  1501 ;;		 -> lcd_counter_txt2(6), 
  1502 ;;  fmt             1   28[COMRAM] PTR const unsigned char 
  1503 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1504 ;; Auto vars:     Size  Location     Type
  1505 ;;  f              12   34[COMRAM] struct _IO_FILE
  1506 ;;  ret             2   31[COMRAM] int 
  1507 ;;  ap              1   33[COMRAM] PTR void [1]
  1508 ;;		 -> ?_sprintf(2), 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  2   27[COMRAM] int 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Locals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1522 ;;Total ram usage:       19 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 4
  1525 ;; This function calls:
  1526 ;;		_vfprintf
  1527 ;; This function is called by:
  1528 ;;		_convert_short_to_string
  1529 ;;		_convert_byte_to_string
  1530 ;;		_convert_int_to_string
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534                           	psect	text6
  1535   001F0E                     __ptext6:
  1536                           	callstack 0
  1537   001F0E                     _sprintf:
  1538                           	callstack 25
  1539   001F0E  0E1E               	movlw	low (?_sprintf+2)
  1540   001F10  6E22               	movwf	sprintf@ap^0,c
  1541   001F12  C01C  F023         	movff	sprintf@s,sprintf@f
  1542   001F16  0E00               	movlw	0
  1543   001F18  6E27               	movwf	(sprintf@f+4)^0,c
  1544   001F1A  0E00               	movlw	0
  1545   001F1C  6E26               	movwf	(sprintf@f+3)^0,c
  1546   001F1E  0E00               	movlw	0
  1547   001F20  6E2E               	movwf	(sprintf@f+11)^0,c
  1548   001F22  0E00               	movlw	0
  1549   001F24  6E2D               	movwf	(sprintf@f+10)^0,c
  1550   001F26  0E23               	movlw	low sprintf@f
  1551   001F28  6E18               	movwf	vfprintf@fp^0,c
  1552   001F2A  C01D  F019         	movff	sprintf@fmt,vfprintf@fmt
  1553   001F2E  0E22               	movlw	low sprintf@ap
  1554   001F30  6E1A               	movwf	vfprintf@ap^0,c
  1555   001F32  EC14  F00F         	call	_vfprintf	;wreg free
  1556   001F36  C018  F020         	movff	?_vfprintf,sprintf@ret
  1557   001F3A  C019  F021         	movff	?_vfprintf+1,sprintf@ret+1
  1558   001F3E  501C               	movf	sprintf@s^0,w,c
  1559   001F40  2426               	addwf	(sprintf@f+3)^0,w,c
  1560   001F42  6ED9               	movwf	fsr2l,c
  1561   001F44  6ADA               	clrf	fsr2h,c
  1562   001F46  6ADF               	clrf	indf2,c
  1563   001F48  C020  F01C         	movff	sprintf@ret,?_sprintf
  1564   001F4C  C021  F01D         	movff	sprintf@ret+1,?_sprintf+1
  1565   001F50  0012               	return		;funcret
  1566   001F52                     __end_of_sprintf:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _vfprintf *****************
  1570 ;; Defined at:
  1571 ;;		line 1817 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  fp              1   23[COMRAM] PTR struct _IO_FILE
  1574 ;;		 -> sprintf@f(12), 
  1575 ;;  fmt             1   24[COMRAM] PTR const unsigned char 
  1576 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1577 ;;  ap              1   25[COMRAM] PTR PTR void 
  1578 ;;		 -> sprintf@ap(1), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  cfmt            1   26[COMRAM] PTR unsigned char 
  1581 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   23[COMRAM] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1591 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 3
  1598 ;; This function calls:
  1599 ;;		_vfpfcnvrt
  1600 ;; This function is called by:
  1601 ;;		_sprintf
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text7
  1606   001E28                     __ptext7:
  1607                           	callstack 0
  1608   001E28                     _vfprintf:
  1609                           	callstack 25
  1610   001E28                     
  1611                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(
      +                          FILE *fp, const char *fmt, va_list ap);D:\Programming\Microchip\xc8\v2.46\pic\sources\c9
      +                          9\common\doprnt.c: 1818: {;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\dop
      +                          rnt.c: 1820:     char *cfmt;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\d
      +                          oprnt.c: 1822:     cfmt = (char *)fmt;
  1612   001E28  C019  F01B         	movff	vfprintf@fmt,vfprintf@cfmt
  1613   001E2C                     
  1614                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1824:     nout = 0;
  1615   001E2C  0E00               	movlw	0
  1616   001E2E  6E36               	movwf	(_nout+1)^0,c
  1617   001E30  0E00               	movlw	0
  1618   001E32  6E35               	movwf	_nout^0,c
  1619                           
  1620                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (*c
      +                          fmt) {
  1621   001E34  EF28  F00F         	goto	l3501
  1622   001E38                     l3499:
  1623                           
  1624                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1828:         nout 
      +                          +=
  1625   001E38  C018  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1626   001E3C  0E1B               	movlw	low vfprintf@cfmt
  1627   001E3E  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1628   001E40  C01A  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1629   001E44  EC0B  F008         	call	_vfpfcnvrt	;wreg free
  1630   001E48  500B               	movf	?_vfpfcnvrt^0,w,c
  1631   001E4A  2635               	addwf	_nout^0,f,c
  1632   001E4C  500C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1633   001E4E  2236               	addwfc	(_nout+1)^0,f,c
  1634   001E50                     l3501:
  1635                           
  1636                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (*c
      +                          fmt) {
  1637   001E50  C01B  FFF6         	movff	vfprintf@cfmt,tblptrl
  1638   001E54                     	if	1	;There is more than 1 active tblptr byte
  1639   001E54  0E10               	movlw	high __smallconst
  1640   001E56  6EF7               	movwf	tblptrh,c
  1641   001E58                     	endif
  1642   001E58                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1643   001E58  6AF8               	clrf	tblptru,c
  1644   001E5A                     	endif
  1645   001E5A                     	if	0	;tblptru may be non-zero
  1646   001E5A                     	endif
  1647   001E5A  0008               	tblrd		*
  1648   001E5C  50F5               	movf	tablat,w,c
  1649   001E5E  0900               	iorlw	0
  1650   001E60  A4D8               	btfss	status,2,c
  1651   001E62  EF35  F00F         	goto	u2801
  1652   001E66  EF37  F00F         	goto	u2800
  1653   001E6A                     u2801:
  1654   001E6A  EF1C  F00F         	goto	l3499
  1655   001E6E                     u2800:
  1656   001E6E                     
  1657                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1833:     return no
      +                          ut;
  1658   001E6E  C035  F018         	movff	_nout,?_vfprintf
  1659   001E72  C036  F019         	movff	_nout+1,?_vfprintf+1
  1660   001E76  0012               	return		;funcret
  1661   001E78                     __end_of_vfprintf:
  1662                           	callstack 0
  1663                           
  1664 ;; *************** function _vfpfcnvrt *****************
  1665 ;; Defined at:
  1666 ;;		line 1177 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1667 ;; Parameters:    Size  Location     Type
  1668 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1669 ;;		 -> sprintf@f(12), 
  1670 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1671 ;;		 -> vfprintf@cfmt(1), 
  1672 ;;  ap              1   12[COMRAM] PTR PTR void 
  1673 ;;		 -> sprintf@ap(1), 
  1674 ;; Auto vars:     Size  Location     Type
  1675 ;;  convarg         4   18[COMRAM] struct .
  1676 ;;  cnt             2   15[COMRAM] int 
  1677 ;;  c               1   22[COMRAM] unsigned char 
  1678 ;;  cp              1   17[COMRAM] PTR unsigned char 
  1679 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1680 ;;  done            1   14[COMRAM] _Bool 
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2   10[COMRAM] int 
  1683 ;; Registers used:
  1684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1690 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1691 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1692 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1693 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1694 ;;Total ram usage:       13 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; Hardware stack levels required when called: 2
  1697 ;; This function calls:
  1698 ;;		___awdiv
  1699 ;;		___awmod
  1700 ;;		_abs
  1701 ;;		_fputc
  1702 ;; This function is called by:
  1703 ;;		_vfprintf
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           	psect	text8
  1708   001016                     __ptext8:
  1709                           	callstack 0
  1710   001016                     _vfpfcnvrt:
  1711                           	callstack 25
  1712   001016                     
  1713                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 1178: {;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1179:     char c, *cp;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1180:     _Bool done;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1188:  } convarg;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1191:  int cnt = 0;
  1714   001016  0E00               	movlw	0
  1715   001018  6E11               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1716   00101A  0E00               	movlw	0
  1717   00101C  6E10               	movwf	vfpfcnvrt@cnt^0,c
  1718   00101E                     
  1719                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt
      +                          )[0] == '%') {
  1720   00101E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1721   001020  6ED9               	movwf	fsr2l,c
  1722   001022  6ADA               	clrf	fsr2h,c
  1723   001024  CFDF FFF6          	movff	indf2,tblptrl
  1724   001028                     	if	1	;There is more than 1 active tblptr byte
  1725   001028  0E10               	movlw	high __smallconst
  1726   00102A  6EF7               	movwf	tblptrh,c
  1727   00102C                     	endif
  1728   00102C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1729   00102C  6AF8               	clrf	tblptru,c
  1730   00102E                     	endif
  1731   00102E                     	if	0	;tblptru may be non-zero
  1732   00102E                     	endif
  1733   00102E  0008               	tblrd		*
  1734   001030  50F5               	movf	tablat,w,c
  1735   001032  0A25               	xorlw	37
  1736   001034  A4D8               	btfss	status,2,c
  1737   001036  EF1F  F008         	goto	u2511
  1738   00103A  EF21  F008         	goto	u2510
  1739   00103E                     u2511:
  1740   00103E  EFE9  F008         	goto	l3361
  1741   001042                     u2510:
  1742   001042                     
  1743                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*fm
      +                          t;
  1744   001042  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1745   001044  6ED9               	movwf	fsr2l,c
  1746   001046  6ADA               	clrf	fsr2h,c
  1747   001048  2ADF               	incf	indf2,f,c
  1748   00104A                     
  1749                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         flags
      +                           = width = 0;
  1750   00104A  0E00               	movlw	0
  1751   00104C  0100               	movlb	0	; () banked
  1752   00104E  6FCC               	movwf	(_width+1)& (0+255),b
  1753   001050  0E00               	movlw	0
  1754   001052  6FCB               	movwf	_width& (0+255),b
  1755   001054  C0CB  F03F         	movff	_width,_flags
  1756   001058                     
  1757                           ; BSR set to: 0
  1758                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         prec 
      +                          = -1;
  1759   001058  6837               	setf	_prec^0,c
  1760   00105A  6838               	setf	(_prec+1)^0,c
  1761   00105C                     
  1762                           ; BSR set to: 0
  1763                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt;
  1764   00105C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1765   00105E  6ED9               	movwf	fsr2l,c
  1766   001060  6ADA               	clrf	fsr2h,c
  1767   001062  50DF               	movf	indf2,w,c
  1768   001064  6E12               	movwf	vfpfcnvrt@cp^0,c
  1769   001066                     
  1770                           ; BSR set to: 0
  1771                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp == 
      +                          'd' || *cp == 'i') {
  1772   001066  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1773   00106A                     	if	1	;There is more than 1 active tblptr byte
  1774   00106A  0E10               	movlw	high __smallconst
  1775   00106C  6EF7               	movwf	tblptrh,c
  1776   00106E                     	endif
  1777   00106E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1778   00106E  6AF8               	clrf	tblptru,c
  1779   001070                     	endif
  1780   001070                     	if	0	;tblptru may be non-zero
  1781   001070                     	endif
  1782   001070  0008               	tblrd		*
  1783   001072  50F5               	movf	tablat,w,c
  1784   001074  0A64               	xorlw	100
  1785   001076  B4D8               	btfsc	status,2,c
  1786   001078  EF40  F008         	goto	u2521
  1787   00107C  EF42  F008         	goto	u2520
  1788   001080                     u2521:
  1789   001080  EF51  F008         	goto	l3325
  1790   001084                     u2520:
  1791   001084                     
  1792                           ; BSR set to: 0
  1793   001084  C012  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1794   001088                     	if	1	;There is more than 1 active tblptr byte
  1795   001088  0E10               	movlw	high __smallconst
  1796   00108A  6EF7               	movwf	tblptrh,c
  1797   00108C                     	endif
  1798   00108C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1799   00108C  6AF8               	clrf	tblptru,c
  1800   00108E                     	endif
  1801   00108E                     	if	0	;tblptru may be non-zero
  1802   00108E                     	endif
  1803   00108E  0008               	tblrd		*
  1804   001090  50F5               	movf	tablat,w,c
  1805   001092  0A69               	xorlw	105
  1806   001094  A4D8               	btfss	status,2,c
  1807   001096  EF4F  F008         	goto	u2531
  1808   00109A  EF51  F008         	goto	u2530
  1809   00109E                     u2531:
  1810   00109E  EFDF  F008         	goto	l3355
  1811   0010A2                     u2530:
  1812   0010A2                     l3325:
  1813                           
  1814                           ; BSR set to: 0
  1815                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.si
      +                          nt = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1816   0010A2  500D               	movf	vfpfcnvrt@ap^0,w,c
  1817   0010A4  6ED9               	movwf	fsr2l,c
  1818   0010A6  6ADA               	clrf	fsr2h,c
  1819   0010A8  0E02               	movlw	2
  1820   0010AA  26DF               	addwf	indf2,f,c
  1821   0010AC  5CDF               	subwf	indf2,w,c
  1822   0010AE  6ED9               	movwf	fsr2l,c
  1823   0010B0  6ADA               	clrf	fsr2h,c
  1824   0010B2  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg
  1825   0010B6  CFDE F014          	movff	postinc2,vfpfcnvrt@convarg+1
  1826   0010BA                     
  1827                           ; BSR set to: 0
  1828                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = cp+
      +                          1;
  1829   0010BA  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1830   0010BC  6ED9               	movwf	fsr2l,c
  1831   0010BE  6ADA               	clrf	fsr2h,c
  1832   0010C0  2812               	incf	vfpfcnvrt@cp^0,w,c
  1833   0010C2  6EDF               	movwf	indf2,c
  1834   0010C4                     
  1835                           ; BSR set to: 0
  1836                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = sizeof
      +                          (dbuf);
  1837   0010C4  0E20               	movlw	32
  1838   0010C6  6E17               	movwf	vfpfcnvrt@c^0,c
  1839                           
  1840                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = con
      +                          varg.sint < 0;
  1841   0010C8  BE14               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1842   0010CA  EF69  F008         	goto	u2541
  1843   0010CE  EF6C  F008         	goto	u2540
  1844   0010D2                     u2541:
  1845   0010D2  0E01               	movlw	1
  1846   0010D4  EF6D  F008         	goto	u2550
  1847   0010D8                     u2540:
  1848   0010D8  0E00               	movlw	0
  1849   0010DA                     u2550:
  1850   0010DA  6E0F               	movwf	vfpfcnvrt@done^0,c
  1851   0010DC                     l3331:
  1852                           
  1853                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--c]
      +                           = abs(convarg.sint % 10) + '0';
  1854   0010DC  0617               	decf	vfpfcnvrt@c^0,f,c
  1855   0010DE  5017               	movf	vfpfcnvrt@c^0,w,c
  1856   0010E0  0FA1               	addlw	low _dbuf
  1857   0010E2  6ED9               	movwf	fsr2l,c
  1858   0010E4  6ADA               	clrf	fsr2h,c
  1859   0010E6  C013  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1860   0010EA  C014  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1861   0010EE  0E00               	movlw	0
  1862   0010F0  6E04               	movwf	(___awmod@divisor+1)^0,c
  1863   0010F2  0E0A               	movlw	10
  1864   0010F4  6E03               	movwf	___awmod@divisor^0,c
  1865   0010F6  ECE2  F00B         	call	___awmod	;wreg free
  1866   0010FA  C001  F007         	movff	?___awmod,abs@a
  1867   0010FE  C002  F008         	movff	?___awmod+1,abs@a+1
  1868   001102  ECEA  F00F         	call	_abs	;wreg free
  1869   001106  5007               	movf	?_abs^0,w,c
  1870   001108  0F30               	addlw	48
  1871   00110A  6EDF               	movwf	indf2,c
  1872   00110C                     
  1873                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg.s
      +                          int /= 10;
  1874   00110C  C013  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1875   001110  C014  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1876   001114  0E00               	movlw	0
  1877   001116  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1878   001118  0E0A               	movlw	10
  1879   00111A  6E03               	movwf	___awdiv@divisor^0,c
  1880   00111C  EC80  F00B         	call	___awdiv	;wreg free
  1881   001120  C001  F013         	movff	?___awdiv,vfpfcnvrt@convarg
  1882   001124  C002  F014         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1883   001128                     
  1884                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1414:     cnt++;
  1885   001128  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1886   00112A  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1887   00112C                     
  1888                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while (c
      +                          onvarg.sint != 0 && c != 0);
  1889   00112C  5013               	movf	vfpfcnvrt@convarg^0,w,c
  1890   00112E  1014               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1891   001130  B4D8               	btfsc	status,2,c
  1892   001132  EF9D  F008         	goto	u2561
  1893   001136  EF9F  F008         	goto	u2560
  1894   00113A                     u2561:
  1895   00113A  EFA7  F008         	goto	l3341
  1896   00113E                     u2560:
  1897   00113E  5017               	movf	vfpfcnvrt@c^0,w,c
  1898   001140  A4D8               	btfss	status,2,c
  1899   001142  EFA5  F008         	goto	u2571
  1900   001146  EFA7  F008         	goto	u2570
  1901   00114A                     u2571:
  1902   00114A  EF6E  F008         	goto	l3331
  1903   00114E                     u2570:
  1904   00114E                     l3341:
  1905                           
  1906                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c != 0
      +                           && done) {
  1907   00114E  5017               	movf	vfpfcnvrt@c^0,w,c
  1908   001150  B4D8               	btfsc	status,2,c
  1909   001152  EFAD  F008         	goto	u2581
  1910   001156  EFAF  F008         	goto	u2580
  1911   00115A                     u2581:
  1912   00115A  EFD0  F008         	goto	l3353
  1913   00115E                     u2580:
  1914   00115E  500F               	movf	vfpfcnvrt@done^0,w,c
  1915   001160  B4D8               	btfsc	status,2,c
  1916   001162  EFB5  F008         	goto	u2591
  1917   001166  EFB7  F008         	goto	u2590
  1918   00116A                     u2591:
  1919   00116A  EFD0  F008         	goto	l3353
  1920   00116E                     u2590:
  1921   00116E                     
  1922                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--c]
      +                           = '-';
  1923   00116E  0617               	decf	vfpfcnvrt@c^0,f,c
  1924   001170  5017               	movf	vfpfcnvrt@c^0,w,c
  1925   001172  0FA1               	addlw	low _dbuf
  1926   001174  6ED9               	movwf	fsr2l,c
  1927   001176  6ADA               	clrf	fsr2h,c
  1928   001178  0E2D               	movlw	45
  1929   00117A  6EDF               	movwf	indf2,c
  1930   00117C                     
  1931                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1420:     cnt++;
  1932   00117C  4A10               	infsnz	vfpfcnvrt@cnt^0,f,c
  1933   00117E  2A11               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1934   001180  EFD0  F008         	goto	l3353
  1935   001184                     l3349:
  1936                           
  1937                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(dbu
      +                          f[c++], fp);
  1938   001184  5017               	movf	vfpfcnvrt@c^0,w,c
  1939   001186  0FA1               	addlw	low _dbuf
  1940   001188  6ED9               	movwf	fsr2l,c
  1941   00118A  6ADA               	clrf	fsr2h,c
  1942   00118C  50DF               	movf	indf2,w,c
  1943   00118E  6E0E               	movwf	??_vfpfcnvrt^0,c
  1944   001190  500E               	movf	??_vfpfcnvrt^0,w,c
  1945   001192  6E01               	movwf	fputc@c^0,c
  1946   001194  6A02               	clrf	(fputc@c+1)^0,c
  1947   001196  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1948   00119A  EC3E  F00D         	call	_fputc	;wreg free
  1949   00119E  2A17               	incf	vfpfcnvrt@c^0,f,c
  1950   0011A0                     l3353:
  1951                           
  1952                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c !
      +                          = sizeof(dbuf)) {
  1953   0011A0  0E20               	movlw	32
  1954   0011A2  1817               	xorwf	vfpfcnvrt@c^0,w,c
  1955   0011A4  A4D8               	btfss	status,2,c
  1956   0011A6  EFD7  F008         	goto	u2601
  1957   0011AA  EFD9  F008         	goto	u2600
  1958   0011AE                     u2601:
  1959   0011AE  EFC2  F008         	goto	l3349
  1960   0011B2                     u2600:
  1961   0011B2                     
  1962                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1427:    return cnt
      +                          ;
  1963   0011B2  C010  F00B         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1964   0011B6  C011  F00C         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1965   0011BA  EF01  F009         	goto	l1513
  1966   0011BE                     l3355:
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*fm
      +                          t;
  1970   0011BE  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1971   0011C0  6ED9               	movwf	fsr2l,c
  1972   0011C2  6ADA               	clrf	fsr2h,c
  1973   0011C4  2ADF               	incf	indf2,f,c
  1974   0011C6                     
  1975                           ; BSR set to: 0
  1976                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1807:         retur
      +                          n (int) 0;
  1977   0011C6  0E00               	movlw	0
  1978   0011C8  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  1979   0011CA  0E00               	movlw	0
  1980   0011CC  6E0B               	movwf	?_vfpfcnvrt^0,c
  1981   0011CE  EF01  F009         	goto	l1513
  1982   0011D2                     l3361:
  1983                           
  1984                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((in
      +                          t)(*fmt)[0], fp);
  1985   0011D2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1986   0011D4  6ED9               	movwf	fsr2l,c
  1987   0011D6  6ADA               	clrf	fsr2h,c
  1988   0011D8  CFDF FFF6          	movff	indf2,tblptrl
  1989   0011DC                     	if	1	;There is more than 1 active tblptr byte
  1990   0011DC  0E10               	movlw	high __smallconst
  1991   0011DE  6EF7               	movwf	tblptrh,c
  1992   0011E0                     	endif
  1993   0011E0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1994   0011E0  6AF8               	clrf	tblptru,c
  1995   0011E2                     	endif
  1996   0011E2                     	if	0	;tblptru may be non-zero
  1997   0011E2                     	endif
  1998   0011E2  0008               	tblrd		*
  1999   0011E4  50F5               	movf	tablat,w,c
  2000   0011E6  6E01               	movwf	fputc@c^0,c
  2001   0011E8  6A02               	clrf	(fputc@c+1)^0,c
  2002   0011EA  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2003   0011EE  EC3E  F00D         	call	_fputc	;wreg free
  2004   0011F2                     
  2005                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2006   0011F2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  2007   0011F4  6ED9               	movwf	fsr2l,c
  2008   0011F6  6ADA               	clrf	fsr2h,c
  2009   0011F8  2ADF               	incf	indf2,f,c
  2010   0011FA                     
  2011                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1813:     return (i
      +                          nt) 1;
  2012   0011FA  0E00               	movlw	0
  2013   0011FC  6E0C               	movwf	(?_vfpfcnvrt+1)^0,c
  2014   0011FE  0E01               	movlw	1
  2015   001200  6E0B               	movwf	?_vfpfcnvrt^0,c
  2016   001202                     l1513:
  2017   001202  0012               	return		;funcret
  2018   001204                     __end_of_vfpfcnvrt:
  2019                           	callstack 0
  2020                           
  2021 ;; *************** function _fputc *****************
  2022 ;; Defined at:
  2023 ;;		line 8 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2024 ;; Parameters:    Size  Location     Type
  2025 ;;  c               2    0[COMRAM] int 
  2026 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2027 ;;		 -> sprintf@f(12), 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    0[COMRAM] int 
  2032 ;; Registers used:
  2033 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2039 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;Total ram usage:        8 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; Hardware stack levels required when called: 1
  2046 ;; This function calls:
  2047 ;;		_putch
  2048 ;; This function is called by:
  2049 ;;		_vfpfcnvrt
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           	psect	text9
  2054   001A7C                     __ptext9:
  2055                           	callstack 0
  2056   001A7C                     _fputc:
  2057                           	callstack 25
  2058   001A7C  5003               	movf	fputc@fp^0,w,c
  2059   001A7E  B4D8               	btfsc	status,2,c
  2060   001A80  EF44  F00D         	goto	u2331
  2061   001A84  EF46  F00D         	goto	u2330
  2062   001A88                     u2331:
  2063   001A88  EF4E  F00D         	goto	l3225
  2064   001A8C                     u2330:
  2065   001A8C  5003               	movf	fputc@fp^0,w,c
  2066   001A8E  A4D8               	btfss	status,2,c
  2067   001A90  EF4C  F00D         	goto	u2341
  2068   001A94  EF4E  F00D         	goto	u2340
  2069   001A98                     u2341:
  2070   001A98  EF53  F00D         	goto	l3227
  2071   001A9C                     u2340:
  2072   001A9C                     l3225:
  2073   001A9C  5001               	movf	fputc@c^0,w,c
  2074   001A9E  EC3E  F010         	call	_putch
  2075   001AA2  EF92  F00D         	goto	l1538
  2076   001AA6                     l3227:
  2077   001AA6  5003               	movf	fputc@fp^0,w,c
  2078   001AA8  6ED9               	movwf	fsr2l,c
  2079   001AAA  6ADA               	clrf	fsr2h,c
  2080   001AAC  0E0A               	movlw	10
  2081   001AAE  26D9               	addwf	fsr2l,f,c
  2082   001AB0  50DE               	movf	postinc2,w,c
  2083   001AB2  10DE               	iorwf	postinc2,w,c
  2084   001AB4  B4D8               	btfsc	status,2,c
  2085   001AB6  EF5F  F00D         	goto	u2351
  2086   001ABA  EF61  F00D         	goto	u2350
  2087   001ABE                     u2351:
  2088   001ABE  EF7A  F00D         	goto	l3231
  2089   001AC2                     u2350:
  2090   001AC2  5003               	movf	fputc@fp^0,w,c
  2091   001AC4  6ED9               	movwf	fsr2l,c
  2092   001AC6  6ADA               	clrf	fsr2h,c
  2093   001AC8  0E0A               	movlw	10
  2094   001ACA  26D9               	addwf	fsr2l,f,c
  2095   001ACC  5003               	movf	fputc@fp^0,w,c
  2096   001ACE  6EE1               	movwf	fsr1l,c
  2097   001AD0  6AE2               	clrf	fsr1h,c
  2098   001AD2  0E03               	movlw	3
  2099   001AD4  26E1               	addwf	fsr1l,f,c
  2100   001AD6  50DE               	movf	postinc2,w,c
  2101   001AD8  5CE6               	subwf	postinc1,w,c
  2102   001ADA  50E6               	movf	postinc1,w,c
  2103   001ADC  0A80               	xorlw	128
  2104   001ADE  6E08               	movwf	(??_fputc+4)^0,c
  2105   001AE0  50DE               	movf	postinc2,w,c
  2106   001AE2  0A80               	xorlw	128
  2107   001AE4  5808               	subwfb	(??_fputc+4)^0,w,c
  2108   001AE6  B0D8               	btfsc	status,0,c
  2109   001AE8  EF78  F00D         	goto	u2361
  2110   001AEC  EF7A  F00D         	goto	u2360
  2111   001AF0                     u2361:
  2112   001AF0  EF92  F00D         	goto	l1538
  2113   001AF4                     u2360:
  2114   001AF4                     l3231:
  2115   001AF4  5003               	movf	fputc@fp^0,w,c
  2116   001AF6  6ED9               	movwf	fsr2l,c
  2117   001AF8  6ADA               	clrf	fsr2h,c
  2118   001AFA  0E03               	movlw	3
  2119   001AFC  26D9               	addwf	fsr2l,f,c
  2120   001AFE  50DF               	movf	indf2,w,c
  2121   001B00  6E04               	movwf	??_fputc^0,c
  2122   001B02  5003               	movf	fputc@fp^0,w,c
  2123   001B04  6ED9               	movwf	fsr2l,c
  2124   001B06  6ADA               	clrf	fsr2h,c
  2125   001B08  50DF               	movf	indf2,w,c
  2126   001B0A  2404               	addwf	??_fputc^0,w,c
  2127   001B0C  6ED9               	movwf	fsr2l,c
  2128   001B0E  6ADA               	clrf	fsr2h,c
  2129   001B10  C001  FFDF         	movff	fputc@c,indf2
  2130   001B14  5003               	movf	fputc@fp^0,w,c
  2131   001B16  6ED9               	movwf	fsr2l,c
  2132   001B18  6ADA               	clrf	fsr2h,c
  2133   001B1A  0E03               	movlw	3
  2134   001B1C  26D9               	addwf	fsr2l,f,c
  2135   001B1E  2ADE               	incf	postinc2,f,c
  2136   001B20  0E00               	movlw	0
  2137   001B22  22DD               	addwfc	postdec2,f,c
  2138   001B24                     l1538:
  2139   001B24  0012               	return		;funcret
  2140   001B26                     __end_of_fputc:
  2141                           	callstack 0
  2142                           
  2143 ;; *************** function _putch *****************
  2144 ;; Defined at:
  2145 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  c               1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  c               1    0[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_fputc
  2169 ;; This function uses a non-reentrant model
  2170 ;;
  2171                           
  2172                           	psect	text10
  2173   00207C                     __ptext10:
  2174                           	callstack 0
  2175   00207C                     _putch:
  2176                           	callstack 25
  2177   00207C  0012               	return		;funcret
  2178   00207E                     __end_of_putch:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _abs *****************
  2182 ;; Defined at:
  2183 ;;		line 1 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  a               2    6[COMRAM] int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2    6[COMRAM] int 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2199 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2200 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; This function calls:
  2204 ;;		Nothing
  2205 ;; This function is called by:
  2206 ;;		_vfpfcnvrt
  2207 ;; This function uses a non-reentrant model
  2208 ;;
  2209                           
  2210                           	psect	text11
  2211   001FD4                     __ptext11:
  2212                           	callstack 0
  2213   001FD4                     _abs:
  2214                           	callstack 26
  2215   001FD4  BE08               	btfsc	(abs@a+1)^0,7,c
  2216   001FD6  EFEF  F00F         	goto	u2371
  2217   001FDA  EFF1  F00F         	goto	u2370
  2218   001FDE                     u2371:
  2219   001FDE  EFF7  F00F         	goto	l1523
  2220   001FE2                     u2370:
  2221   001FE2  C007  F007         	movff	abs@a,?_abs
  2222   001FE6  C008  F008         	movff	abs@a+1,?_abs+1
  2223   001FEA  EF03  F010         	goto	l1526
  2224   001FEE                     l1523:
  2225   001FEE  C007  F009         	movff	abs@a,??_abs
  2226   001FF2  C008  F00A         	movff	abs@a+1,??_abs+1
  2227   001FF6  1E09               	comf	??_abs^0,f,c
  2228   001FF8  1E0A               	comf	(??_abs+1)^0,f,c
  2229   001FFA  4A09               	infsnz	??_abs^0,f,c
  2230   001FFC  2A0A               	incf	(??_abs+1)^0,f,c
  2231   001FFE  C009  F007         	movff	??_abs,?_abs
  2232   002002  C00A  F008         	movff	??_abs+1,?_abs+1
  2233   002006                     l1526:
  2234   002006  0012               	return		;funcret
  2235   002008                     __end_of_abs:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function ___awmod *****************
  2239 ;; Defined at:
  2240 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  dividend        2    0[COMRAM] int 
  2243 ;;  divisor         2    2[COMRAM] int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  sign            1    5[COMRAM] unsigned char 
  2246 ;;  counter         1    4[COMRAM] unsigned char 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    0[COMRAM] int 
  2249 ;; Registers used:
  2250 ;;		wreg, status,2, status,0
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2256 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2257 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2259 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used: 1
  2262 ;; This function calls:
  2263 ;;		Nothing
  2264 ;; This function is called by:
  2265 ;;		_vfpfcnvrt
  2266 ;;		_seven_segment_test
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           	psect	text12
  2271   0017C4                     __ptext12:
  2272                           	callstack 0
  2273   0017C4                     ___awmod:
  2274                           	callstack 26
  2275   0017C4  0E00               	movlw	0
  2276   0017C6  6E06               	movwf	___awmod@sign^0,c
  2277   0017C8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2278   0017CA  EFEB  F00B         	goto	u2270
  2279   0017CE  EFE9  F00B         	goto	u2271
  2280   0017D2                     u2271:
  2281   0017D2  EFF1  F00B         	goto	l3193
  2282   0017D6                     u2270:
  2283   0017D6  6C01               	negf	___awmod@dividend^0,c
  2284   0017D8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2285   0017DA  B0D8               	btfsc	status,0,c
  2286   0017DC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2287   0017DE  0E01               	movlw	1
  2288   0017E0  6E06               	movwf	___awmod@sign^0,c
  2289   0017E2                     l3193:
  2290   0017E2  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2291   0017E4  EFF8  F00B         	goto	u2280
  2292   0017E8  EFF6  F00B         	goto	u2281
  2293   0017EC                     u2281:
  2294   0017EC  EFFC  F00B         	goto	l3197
  2295   0017F0                     u2280:
  2296   0017F0  6C03               	negf	___awmod@divisor^0,c
  2297   0017F2  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2298   0017F4  B0D8               	btfsc	status,0,c
  2299   0017F6  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2300   0017F8                     l3197:
  2301   0017F8  5003               	movf	___awmod@divisor^0,w,c
  2302   0017FA  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2303   0017FC  B4D8               	btfsc	status,2,c
  2304   0017FE  EF03  F00C         	goto	u2291
  2305   001802  EF05  F00C         	goto	u2290
  2306   001806                     u2291:
  2307   001806  EF29  F00C         	goto	l3213
  2308   00180A                     u2290:
  2309   00180A  0E01               	movlw	1
  2310   00180C  6E05               	movwf	___awmod@counter^0,c
  2311   00180E  EF0D  F00C         	goto	l3203
  2312   001812                     l3201:
  2313   001812  90D8               	bcf	status,0,c
  2314   001814  3603               	rlcf	___awmod@divisor^0,f,c
  2315   001816  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2316   001818  2A05               	incf	___awmod@counter^0,f,c
  2317   00181A                     l3203:
  2318   00181A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2319   00181C  EF12  F00C         	goto	u2301
  2320   001820  EF14  F00C         	goto	u2300
  2321   001824                     u2301:
  2322   001824  EF09  F00C         	goto	l3201
  2323   001828                     u2300:
  2324   001828                     l3205:
  2325   001828  5003               	movf	___awmod@divisor^0,w,c
  2326   00182A  5C01               	subwf	___awmod@dividend^0,w,c
  2327   00182C  5004               	movf	(___awmod@divisor+1)^0,w,c
  2328   00182E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2329   001830  A0D8               	btfss	status,0,c
  2330   001832  EF1D  F00C         	goto	u2311
  2331   001836  EF1F  F00C         	goto	u2310
  2332   00183A                     u2311:
  2333   00183A  EF23  F00C         	goto	l3209
  2334   00183E                     u2310:
  2335   00183E  5003               	movf	___awmod@divisor^0,w,c
  2336   001840  5E01               	subwf	___awmod@dividend^0,f,c
  2337   001842  5004               	movf	(___awmod@divisor+1)^0,w,c
  2338   001844  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2339   001846                     l3209:
  2340   001846  90D8               	bcf	status,0,c
  2341   001848  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2342   00184A  3203               	rrcf	___awmod@divisor^0,f,c
  2343   00184C  2E05               	decfsz	___awmod@counter^0,f,c
  2344   00184E  EF14  F00C         	goto	l3205
  2345   001852                     l3213:
  2346   001852  5006               	movf	___awmod@sign^0,w,c
  2347   001854  B4D8               	btfsc	status,2,c
  2348   001856  EF2F  F00C         	goto	u2321
  2349   00185A  EF31  F00C         	goto	u2320
  2350   00185E                     u2321:
  2351   00185E  EF35  F00C         	goto	l3217
  2352   001862                     u2320:
  2353   001862  6C01               	negf	___awmod@dividend^0,c
  2354   001864  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2355   001866  B0D8               	btfsc	status,0,c
  2356   001868  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2357   00186A                     l3217:
  2358   00186A  C001  F001         	movff	___awmod@dividend,?___awmod
  2359   00186E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2360   001872  0012               	return		;funcret
  2361   001874                     __end_of___awmod:
  2362                           	callstack 0
  2363                           
  2364 ;; *************** function ___awdiv *****************
  2365 ;; Defined at:
  2366 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;  dividend        2    0[COMRAM] int 
  2369 ;;  divisor         2    2[COMRAM] int 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  quotient        2    6[COMRAM] int 
  2372 ;;  sign            1    5[COMRAM] unsigned char 
  2373 ;;  counter         1    4[COMRAM] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  2    0[COMRAM] int 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2386 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2387 ;;Total ram usage:        8 bytes
  2388 ;; Hardware stack levels used: 1
  2389 ;; This function calls:
  2390 ;;		Nothing
  2391 ;; This function is called by:
  2392 ;;		_vfpfcnvrt
  2393 ;;		_seven_segment_test
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text13
  2398   001700                     __ptext13:
  2399                           	callstack 0
  2400   001700                     ___awdiv:
  2401                           	callstack 26
  2402   001700  0E00               	movlw	0
  2403   001702  6E06               	movwf	___awdiv@sign^0,c
  2404   001704  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2405   001706  EF89  F00B         	goto	u2210
  2406   00170A  EF87  F00B         	goto	u2211
  2407   00170E                     u2211:
  2408   00170E  EF8F  F00B         	goto	l3149
  2409   001712                     u2210:
  2410   001712  6C03               	negf	___awdiv@divisor^0,c
  2411   001714  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2412   001716  B0D8               	btfsc	status,0,c
  2413   001718  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2414   00171A  0E01               	movlw	1
  2415   00171C  6E06               	movwf	___awdiv@sign^0,c
  2416   00171E                     l3149:
  2417   00171E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2418   001720  EF96  F00B         	goto	u2220
  2419   001724  EF94  F00B         	goto	u2221
  2420   001728                     u2221:
  2421   001728  EF9C  F00B         	goto	l3155
  2422   00172C                     u2220:
  2423   00172C  6C01               	negf	___awdiv@dividend^0,c
  2424   00172E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2425   001730  B0D8               	btfsc	status,0,c
  2426   001732  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2427   001734  0E01               	movlw	1
  2428   001736  1A06               	xorwf	___awdiv@sign^0,f,c
  2429   001738                     l3155:
  2430   001738  0E00               	movlw	0
  2431   00173A  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2432   00173C  0E00               	movlw	0
  2433   00173E  6E07               	movwf	___awdiv@quotient^0,c
  2434   001740  5003               	movf	___awdiv@divisor^0,w,c
  2435   001742  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2436   001744  B4D8               	btfsc	status,2,c
  2437   001746  EFA7  F00B         	goto	u2231
  2438   00174A  EFA9  F00B         	goto	u2230
  2439   00174E                     u2231:
  2440   00174E  EFD1  F00B         	goto	l3177
  2441   001752                     u2230:
  2442   001752  0E01               	movlw	1
  2443   001754  6E05               	movwf	___awdiv@counter^0,c
  2444   001756  EFB1  F00B         	goto	l3163
  2445   00175A                     l3161:
  2446   00175A  90D8               	bcf	status,0,c
  2447   00175C  3603               	rlcf	___awdiv@divisor^0,f,c
  2448   00175E  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2449   001760  2A05               	incf	___awdiv@counter^0,f,c
  2450   001762                     l3163:
  2451   001762  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2452   001764  EFB6  F00B         	goto	u2241
  2453   001768  EFB8  F00B         	goto	u2240
  2454   00176C                     u2241:
  2455   00176C  EFAD  F00B         	goto	l3161
  2456   001770                     u2240:
  2457   001770                     l3165:
  2458   001770  90D8               	bcf	status,0,c
  2459   001772  3607               	rlcf	___awdiv@quotient^0,f,c
  2460   001774  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2461   001776  5003               	movf	___awdiv@divisor^0,w,c
  2462   001778  5C01               	subwf	___awdiv@dividend^0,w,c
  2463   00177A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2464   00177C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2465   00177E  A0D8               	btfss	status,0,c
  2466   001780  EFC4  F00B         	goto	u2251
  2467   001784  EFC6  F00B         	goto	u2250
  2468   001788                     u2251:
  2469   001788  EFCB  F00B         	goto	l3173
  2470   00178C                     u2250:
  2471   00178C  5003               	movf	___awdiv@divisor^0,w,c
  2472   00178E  5E01               	subwf	___awdiv@dividend^0,f,c
  2473   001790  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2474   001792  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2475   001794  8007               	bsf	___awdiv@quotient^0,0,c
  2476   001796                     l3173:
  2477   001796  90D8               	bcf	status,0,c
  2478   001798  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2479   00179A  3203               	rrcf	___awdiv@divisor^0,f,c
  2480   00179C  2E05               	decfsz	___awdiv@counter^0,f,c
  2481   00179E  EFB8  F00B         	goto	l3165
  2482   0017A2                     l3177:
  2483   0017A2  5006               	movf	___awdiv@sign^0,w,c
  2484   0017A4  B4D8               	btfsc	status,2,c
  2485   0017A6  EFD7  F00B         	goto	u2261
  2486   0017AA  EFD9  F00B         	goto	u2260
  2487   0017AE                     u2261:
  2488   0017AE  EFDD  F00B         	goto	l3181
  2489   0017B2                     u2260:
  2490   0017B2  6C07               	negf	___awdiv@quotient^0,c
  2491   0017B4  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2492   0017B6  B0D8               	btfsc	status,0,c
  2493   0017B8  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2494   0017BA                     l3181:
  2495   0017BA  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2496   0017BE  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2497   0017C2  0012               	return		;funcret
  2498   0017C4                     __end_of___awdiv:
  2499                           	callstack 0
  2500                           
  2501 ;; *************** function _memset *****************
  2502 ;; Defined at:
  2503 ;;		line 3 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;  dest            1    0[COMRAM] PTR void 
  2506 ;;		 -> lcd_counter_txt2(6), 
  2507 ;;  c               2    1[COMRAM] int 
  2508 ;;  n               2    3[COMRAM] unsigned int 
  2509 ;; Auto vars:     Size  Location     Type
  2510 ;;  p               1    5[COMRAM] PTR unsigned char 
  2511 ;;		 -> lcd_counter_txt2(6), 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      PTR void 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2521 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2525 ;;Total ram usage:        6 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_convert_short_to_string
  2531 ;;		_convert_byte_to_string
  2532 ;;		_convert_int_to_string
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text14
  2537   002008                     __ptext14:
  2538                           	callstack 0
  2539   002008                     _memset:
  2540                           	callstack 29
  2541   002008  C001  F006         	movff	memset@dest,memset@p
  2542   00200C  EF0E  F010         	goto	l3597
  2543   002010                     l3593:
  2544   002010  5006               	movf	memset@p^0,w,c
  2545   002012  6ED9               	movwf	fsr2l,c
  2546   002014  6ADA               	clrf	fsr2h,c
  2547   002016  C002  FFDF         	movff	memset@c,indf2
  2548   00201A  2A06               	incf	memset@p^0,f,c
  2549   00201C                     l3597:
  2550   00201C  0604               	decf	memset@n^0,f,c
  2551   00201E  A0D8               	btfss	status,0,c
  2552   002020  0605               	decf	(memset@n+1)^0,f,c
  2553   002022  2804               	incf	memset@n^0,w,c
  2554   002024  E106               	bnz	u2961
  2555   002026  2805               	incf	(memset@n+1)^0,w,c
  2556   002028  A4D8               	btfss	status,2,c
  2557   00202A  EF19  F010         	goto	u2961
  2558   00202E  EF1B  F010         	goto	u2960
  2559   002032                     u2961:
  2560   002032  EF08  F010         	goto	l3593
  2561   002036                     u2960:
  2562   002036  0012               	return		;funcret
  2563   002038                     __end_of_memset:
  2564                           	callstack 0
  2565                           
  2566 ;; *************** function _application_init *****************
  2567 ;; Defined at:
  2568 ;;		line 37 in file "app.c"
  2569 ;; Parameters:    Size  Location     Type
  2570 ;;		None
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  ret             1   22[COMRAM] unsigned char 
  2573 ;; Return value:  Size  Location     Type
  2574 ;;                  1    wreg      unsigned char 
  2575 ;; Registers used:
  2576 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2577 ;; Tracked objects:
  2578 ;;		On entry : 0/0
  2579 ;;		On exit  : 0/0
  2580 ;;		Unchanged: 0/0
  2581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2583 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2585 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2586 ;;Total ram usage:        1 bytes
  2587 ;; Hardware stack levels used: 1
  2588 ;; Hardware stack levels required when called: 5
  2589 ;; This function calls:
  2590 ;;		_ecu_layer_initialize
  2591 ;; This function is called by:
  2592 ;;		_main
  2593 ;; This function uses a non-reentrant model
  2594 ;;
  2595                           
  2596                           	psect	text15
  2597   002072                     __ptext15:
  2598                           	callstack 0
  2599   002072                     _application_init:
  2600                           	callstack 25
  2601   002072                     
  2602                           ;app.c: 40:     ret = ecu_layer_initialize();
  2603   002072  EC1C  F010         	call	_ecu_layer_initialize	;wreg free
  2604   002076  6E17               	movwf	application_init@ret^0,c
  2605   002078                     
  2606                           ;app.c: 42:     return (ret);
  2607   002078  5017               	movf	application_init@ret^0,w,c
  2608   00207A  0012               	return		;funcret
  2609   00207C                     __end_of_application_init:
  2610                           	callstack 0
  2611                           
  2612 ;; *************** function _ecu_layer_initialize *****************
  2613 ;; Defined at:
  2614 ;;		line 78 in file "ECU_Layer/ecu_layer_init.c"
  2615 ;; Parameters:    Size  Location     Type
  2616 ;;		None
  2617 ;; Auto vars:     Size  Location     Type
  2618 ;;  ret             1   21[COMRAM] unsigned char 
  2619 ;; Return value:  Size  Location     Type
  2620 ;;                  1    wreg      unsigned char 
  2621 ;; Registers used:
  2622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2623 ;; Tracked objects:
  2624 ;;		On entry : 0/0
  2625 ;;		On exit  : 0/0
  2626 ;;		Unchanged: 0/0
  2627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2629 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2631 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2632 ;;Total ram usage:        1 bytes
  2633 ;; Hardware stack levels used: 1
  2634 ;; Hardware stack levels required when called: 4
  2635 ;; This function calls:
  2636 ;;		_lcd_4bit_initialize
  2637 ;;		_lcd_8bit_initialize
  2638 ;; This function is called by:
  2639 ;;		_application_init
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           	psect	text16
  2644   002038                     __ptext16:
  2645                           	callstack 0
  2646   002038                     _ecu_layer_initialize:
  2647                           	callstack 25
  2648   002038                     
  2649                           ;ECU_Layer/ecu_layer_init.c: 82:     ret = lcd_4bit_initialize(&lcd_1);
  2650   002038  0E90               	movlw	low _lcd_1
  2651   00203A  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
  2652   00203C  ECB5  F009         	call	_lcd_4bit_initialize	;wreg free
  2653   002040  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2654   002042                     
  2655                           ;ECU_Layer/ecu_layer_init.c: 83:     if ((Std_ReturnType)0x00u == ret)
  2656   002042  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2657   002044  A4D8               	btfss	status,2,c
  2658   002046  EF27  F010         	goto	u2971
  2659   00204A  EF29  F010         	goto	u2970
  2660   00204E                     u2971:
  2661   00204E  EF2E  F010         	goto	l3621
  2662   002052                     u2970:
  2663   002052                     
  2664                           ;ECU_Layer/ecu_layer_init.c: 84:     {;ECU_Layer/ecu_layer_init.c: 85:         ret = lcd
      +                          _8bit_initialize(&lcd_2);
  2665   002052  0E7E               	movlw	low _lcd_2
  2666   002054  6E11               	movwf	lcd_8bit_initialize@lcd^0,c
  2667   002056  EC5B  F00A         	call	_lcd_8bit_initialize	;wreg free
  2668   00205A  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2669   00205C                     l3621:
  2670                           
  2671                           ;ECU_Layer/ecu_layer_init.c: 88:     return (ret);
  2672   00205C  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2673   00205E  0012               	return		;funcret
  2674   002060                     __end_of_ecu_layer_initialize:
  2675                           	callstack 0
  2676                           
  2677 ;; *************** function _lcd_8bit_initialize *****************
  2678 ;; Defined at:
  2679 ;;		line 195 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  lcd             1   16[COMRAM] PTR const struct .
  2682 ;;		 -> lcd_2(10), 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  ret             1   19[COMRAM] unsigned char 
  2685 ;;  lcd_data_cou    1   18[COMRAM] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      unsigned char 
  2688 ;; Registers used:
  2689 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2695 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2697 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2698 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;Total ram usage:        4 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; Hardware stack levels required when called: 3
  2702 ;; This function calls:
  2703 ;;		_gpio_pin_initialize
  2704 ;;		_lcd_8bit_send_command
  2705 ;; This function is called by:
  2706 ;;		_ecu_layer_initialize
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text17
  2711   0014B6                     __ptext17:
  2712                           	callstack 0
  2713   0014B6                     _lcd_8bit_initialize:
  2714                           	callstack 25
  2715   0014B6                     
  2716                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 198:     uint8 lcd_data_counter = 0x00;
  2717   0014B6  0E00               	movlw	0
  2718   0014B8  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2719                           
  2720                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 199:  if (((void*)0) == lcd)
  2721   0014BA  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2722   0014BC  A4D8               	btfss	status,2,c
  2723   0014BE  EF63  F00A         	goto	u2681
  2724   0014C2  EF65  F00A         	goto	u2680
  2725   0014C6                     u2681:
  2726   0014C6  EF69  F00A         	goto	l3421
  2727   0014CA                     u2680:
  2728   0014CA                     
  2729                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 200:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 201:     
      +                           ret = (Std_ReturnType)0x01u;
  2730   0014CA  0E01               	movlw	1
  2731   0014CC  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2732                           
  2733                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 202:  }
  2734   0014CE  EFF5  F00A         	goto	l3459
  2735   0014D2                     l3421:
  2736                           
  2737                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 204:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 205:     
      +                              ret = gpio_pin_initialize(&(lcd->lcd_rs));
  2738   0014D2  C011  F008         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  2739   0014D6  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  2740   0014DA  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2741   0014DC                     
  2742                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 206:         if ((Std_ReturnType)0x00u == ret)
  2743   0014DC  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2744   0014DE  A4D8               	btfss	status,2,c
  2745   0014E0  EF74  F00A         	goto	u2691
  2746   0014E4  EF76  F00A         	goto	u2690
  2747   0014E8                     u2691:
  2748   0014E8  EFF5  F00A         	goto	l3459
  2749   0014EC                     u2690:
  2750   0014EC                     
  2751                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 207:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 20
      +                          8:             ret = gpio_pin_initialize(&(lcd->lcd_en));
  2752   0014EC  2811               	incf	lcd_8bit_initialize@lcd^0,w,c
  2753   0014EE  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2754   0014F0  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  2755   0014F4  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2756   0014F6                     
  2757                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 209:             if ((Std_ReturnType)0x00u == ret)
  2758   0014F6  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2759   0014F8  A4D8               	btfss	status,2,c
  2760   0014FA  EF81  F00A         	goto	u2701
  2761   0014FE  EF83  F00A         	goto	u2700
  2762   001502                     u2701:
  2763   001502  EF9F  F00A         	goto	l3445
  2764   001506                     u2700:
  2765   001506                     
  2766                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 210:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c
      +                          : 211:                 for (lcd_data_counter = 0x00; lcd_data_counter < 8; lcd_data_coun
      +                          ter++)
  2767   001506  0E00               	movlw	0
  2768   001508  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2769   00150A                     l3435:
  2770                           
  2771                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 212:                 {;ECU_Layer/Char_LCD/ecu_char_l
      +                          cd.c: 213:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counte
      +                          r]));
  2772   00150A  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2773   00150C  2413               	addwf	lcd_8bit_initialize@lcd_data_counter^0,w,c
  2774   00150E  0F02               	addlw	2
  2775   001510  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2776   001512  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  2777   001516  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2778   001518                     
  2779                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 214:                     if ((Std_ReturnType)0x01u =
      +                          = ret)
  2780   001518  0414               	decf	lcd_8bit_initialize@ret^0,w,c
  2781   00151A  A4D8               	btfss	status,2,c
  2782   00151C  EF92  F00A         	goto	u2711
  2783   001520  EF94  F00A         	goto	u2710
  2784   001524                     u2711:
  2785   001524  EF96  F00A         	goto	l3441
  2786   001528                     u2710:
  2787   001528  EF9F  F00A         	goto	l3445
  2788   00152C                     l3441:
  2789                           
  2790                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 218:                 }
  2791   00152C  2A13               	incf	lcd_8bit_initialize@lcd_data_counter^0,f,c
  2792   00152E  0E07               	movlw	7
  2793   001530  6413               	cpfsgt	lcd_8bit_initialize@lcd_data_counter^0,c
  2794   001532  EF9D  F00A         	goto	u2721
  2795   001536  EF9F  F00A         	goto	u2720
  2796   00153A                     u2721:
  2797   00153A  EF85  F00A         	goto	l3435
  2798   00153E                     u2720:
  2799   00153E                     l3445:
  2800                           
  2801                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 221:    _delay((unsigned long)((20)*((8 *1000UL *100
      +                          0UL)/4000.0)));
  2802   00153E  0E34               	movlw	52
  2803   001540  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2804   001542  0EF2               	movlw	242
  2805   001544                     u4057:
  2806   001544  2EE8               	decfsz	wreg,f,c
  2807   001546  D7FE               	bra	u4057
  2808   001548  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2809   00154A  D7FC               	bra	u4057
  2810   00154C  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2811   001550  0E38               	movlw	56
  2812   001552  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2813   001554  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2814   001558                     
  2815                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 223:    _delay((unsigned long)((5)*((8 *1000UL *1000
      +                          UL)/4000.0)));
  2816   001558  0E0D               	movlw	13
  2817   00155A  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2818   00155C  0EFC               	movlw	252
  2819   00155E                     u4067:
  2820   00155E  2EE8               	decfsz	wreg,f,c
  2821   001560  D7FE               	bra	u4067
  2822   001562  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2823   001564  D7FC               	bra	u4067
  2824   001566  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2825   00156A  0E38               	movlw	56
  2826   00156C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2827   00156E  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2828   001572                     
  2829                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 225:    _delay((unsigned long)((150)*((8 *1000UL *10
      +                          00UL)/4000000.0)));
  2830   001572  0E64               	movlw	100
  2831   001574                     u4077:
  2832   001574  2EE8               	decfsz	wreg,f,c
  2833   001576  D7FE               	bra	u4077
  2834   001578                     
  2835                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 226:    ret = lcd_8bit_send_command(lcd, 0x38);
  2836   001578  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2837   00157C  0E38               	movlw	56
  2838   00157E  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2839   001580  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2840   001584  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2841   001586                     
  2842                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 228:    if ((Std_ReturnType)0x00u == ret)
  2843   001586  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2844   001588  A4D8               	btfss	status,2,c
  2845   00158A  EFC9  F00A         	goto	u2731
  2846   00158E  EFCB  F00A         	goto	u2730
  2847   001592                     u2731:
  2848   001592  EFF5  F00A         	goto	l3459
  2849   001596                     u2730:
  2850   001596                     
  2851                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 229:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 230:   
      +                            ret |= lcd_8bit_send_command(lcd, 0x01);
  2852   001596  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2853   00159A  0E01               	movlw	1
  2854   00159C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2855   00159E  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2856   0015A2  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2857                           
  2858                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 231:     ret |= lcd_8bit_send_command(lcd, 0x02);
  2859   0015A4  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2860   0015A8  0E02               	movlw	2
  2861   0015AA  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2862   0015AC  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2863   0015B0  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2864                           
  2865                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 232:     ret |= lcd_8bit_send_command(lcd, 0x06);
  2866   0015B2  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2867   0015B6  0E06               	movlw	6
  2868   0015B8  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2869   0015BA  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2870   0015BE  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2871                           
  2872                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 233:     ret |= lcd_8bit_send_command(lcd, 0x0C);
  2873   0015C0  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2874   0015C4  0E0C               	movlw	12
  2875   0015C6  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2876   0015C8  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2877   0015CC  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2878                           
  2879                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 234:     ret |= lcd_8bit_send_command(lcd, 0x38);
  2880   0015CE  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2881   0015D2  0E38               	movlw	56
  2882   0015D4  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2883   0015D6  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2884   0015DA  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2885                           
  2886                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 235:     ret |= lcd_8bit_send_command(lcd, 0x80);
  2887   0015DC  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2888   0015E0  0E80               	movlw	128
  2889   0015E2  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2890   0015E4  EC91  F00C         	call	_lcd_8bit_send_command	;wreg free
  2891   0015E8  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2892   0015EA                     l3459:
  2893                           
  2894                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 239:  return (ret);
  2895   0015EA  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2896   0015EC  0012               	return		;funcret
  2897   0015EE                     __end_of_lcd_8bit_initialize:
  2898                           	callstack 0
  2899                           
  2900 ;; *************** function _lcd_8bit_send_command *****************
  2901 ;; Defined at:
  2902 ;;		line 242 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  lcd             1   10[COMRAM] PTR const struct .
  2905 ;;		 -> lcd_2(10), 
  2906 ;;  command         1   11[COMRAM] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;  ret             1   15[COMRAM] unsigned char 
  2909 ;;  counter         1   14[COMRAM] unsigned char 
  2910 ;; Return value:  Size  Location     Type
  2911 ;;                  1    wreg      unsigned char 
  2912 ;; Registers used:
  2913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2914 ;; Tracked objects:
  2915 ;;		On entry : 0/0
  2916 ;;		On exit  : 0/0
  2917 ;;		Unchanged: 0/0
  2918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2919 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2920 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2921 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2922 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2923 ;;Total ram usage:        6 bytes
  2924 ;; Hardware stack levels used: 1
  2925 ;; Hardware stack levels required when called: 2
  2926 ;; This function calls:
  2927 ;;		_gpio_pin_write_logic
  2928 ;;		_lcd_8bit_send_enable_signal
  2929 ;; This function is called by:
  2930 ;;		_lcd_8bit_initialize
  2931 ;;		_lcd_8bit_set_cursor
  2932 ;;		_main
  2933 ;; This function uses a non-reentrant model
  2934 ;;
  2935                           
  2936                           	psect	text18
  2937   001922                     __ptext18:
  2938                           	callstack 0
  2939   001922                     _lcd_8bit_send_command:
  2940                           	callstack 26
  2941   001922                     
  2942                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 245:  uint8 counter = 0x00;
  2943   001922  0E00               	movlw	0
  2944   001924  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  2945                           
  2946                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 247:  if (((void*)0) == lcd)
  2947   001926  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  2948   001928  A4D8               	btfss	status,2,c
  2949   00192A  EF99  F00C         	goto	u2451
  2950   00192E  EF9B  F00C         	goto	u2450
  2951   001932                     u2451:
  2952   001932  EF9F  F00C         	goto	l3281
  2953   001936                     u2450:
  2954   001936                     
  2955                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 248:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 249:     
      +                           ret = (Std_ReturnType)0x01u;
  2956   001936  0E01               	movlw	1
  2957   001938  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2958                           
  2959                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 250:  }
  2960   00193A  EFE6  F00C         	goto	l3305
  2961   00193E                     l3281:
  2962                           
  2963                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 252:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 253:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  2964   00193E  C00B  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  2965   001942  0E00               	movlw	0
  2966   001944  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2967   001946  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  2968   00194A  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2969   00194C                     
  2970                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 254:   if ((Std_ReturnType)0x00u == ret)
  2971   00194C  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  2972   00194E  A4D8               	btfss	status,2,c
  2973   001950  EFAC  F00C         	goto	u2461
  2974   001954  EFAE  F00C         	goto	u2460
  2975   001958                     u2461:
  2976   001958  EFE6  F00C         	goto	l3305
  2977   00195C                     u2460:
  2978   00195C                     
  2979                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 255:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 256:    
      +                          for (counter = 0x00; counter < 8; counter++)
  2980   00195C  0E00               	movlw	0
  2981   00195E  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  2982   001960                     l3291:
  2983                           
  2984                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 257:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 258:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (command >> counter) & (uint8)1)
      +                          ;
  2985   001960  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  2986   001962  240F               	addwf	lcd_8bit_send_command@counter^0,w,c
  2987   001964  0F02               	addlw	2
  2988   001966  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  2989   001968  C00F  F00D         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  2990   00196C  C00C  F00E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2991   001970  2A0D               	incf	??_lcd_8bit_send_command^0,f,c
  2992   001972  EFBD  F00C         	goto	u2474
  2993   001976                     u2475:
  2994   001976  90D8               	bcf	status,0,c
  2995   001978  320E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2996   00197A                     u2474:
  2997   00197A  2E0D               	decfsz	??_lcd_8bit_send_command^0,f,c
  2998   00197C  EFBB  F00C         	goto	u2475
  2999   001980  500E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  3000   001982  0B01               	andlw	1
  3001   001984  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3002   001986  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3003   00198A  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3004   00198C                     
  3005                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 259:     if ((Std_ReturnType)0x01u == ret)
  3006   00198C  0410               	decf	lcd_8bit_send_command@ret^0,w,c
  3007   00198E  A4D8               	btfss	status,2,c
  3008   001990  EFCC  F00C         	goto	u2481
  3009   001994  EFCE  F00C         	goto	u2480
  3010   001998                     u2481:
  3011   001998  EFD0  F00C         	goto	l3297
  3012   00199C                     u2480:
  3013   00199C  EFD9  F00C         	goto	l3301
  3014   0019A0                     l3297:
  3015                           
  3016                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 263:    }
  3017   0019A0  2A0F               	incf	lcd_8bit_send_command@counter^0,f,c
  3018   0019A2  0E07               	movlw	7
  3019   0019A4  640F               	cpfsgt	lcd_8bit_send_command@counter^0,c
  3020   0019A6  EFD7  F00C         	goto	u2491
  3021   0019AA  EFD9  F00C         	goto	u2490
  3022   0019AE                     u2491:
  3023   0019AE  EFB0  F00C         	goto	l3291
  3024   0019B2                     u2490:
  3025   0019B2                     l3301:
  3026                           
  3027                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 264:    if ((Std_ReturnType)0x00u == ret)
  3028   0019B2  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  3029   0019B4  A4D8               	btfss	status,2,c
  3030   0019B6  EFDF  F00C         	goto	u2501
  3031   0019BA  EFE1  F00C         	goto	u2500
  3032   0019BE                     u2501:
  3033   0019BE  EFE6  F00C         	goto	l3305
  3034   0019C2                     u2500:
  3035   0019C2                     
  3036                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 265:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 266:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  3037   0019C2  C00B  F009         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  3038   0019C6  ECCA  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  3039   0019CA  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3040   0019CC                     l3305:
  3041                           
  3042                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 270:  return (ret);
  3043   0019CC  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  3044   0019CE  0012               	return		;funcret
  3045   0019D0                     __end_of_lcd_8bit_send_command:
  3046                           	callstack 0
  3047                           
  3048 ;; *************** function _lcd_8bit_send_enable_signal *****************
  3049 ;; Defined at:
  3050 ;;		line 454 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  lcd             1    8[COMRAM] PTR const struct .
  3053 ;;		 -> lcd_2(10), 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  ret             1    9[COMRAM] unsigned char 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  1    wreg      unsigned char 
  3058 ;; Registers used:
  3059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;Total ram usage:        2 bytes
  3070 ;; Hardware stack levels used: 1
  3071 ;; Hardware stack levels required when called: 1
  3072 ;; This function calls:
  3073 ;;		_gpio_pin_write_logic
  3074 ;; This function is called by:
  3075 ;;		_lcd_8bit_send_command
  3076 ;;		_lcd_8bit_send_char_data
  3077 ;; This function uses a non-reentrant model
  3078 ;;
  3079                           
  3080                           	psect	text19
  3081   001F94                     __ptext19:
  3082                           	callstack 0
  3083   001F94                     _lcd_8bit_send_enable_signal:
  3084                           	callstack 26
  3085   001F94                     
  3086                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 458:  if (((void*)0) == lcd)
  3087   001F94  5009               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3088   001F96  A4D8               	btfss	status,2,c
  3089   001F98  EFD0  F00F         	goto	u2201
  3090   001F9C  EFD2  F00F         	goto	u2200
  3091   001FA0                     u2201:
  3092   001FA0  EFD6  F00F         	goto	l3131
  3093   001FA4                     u2200:
  3094   001FA4                     
  3095                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 459:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 460:   re
      +                          t = (Std_ReturnType)0x01u;
  3096   001FA4  0E01               	movlw	1
  3097   001FA6  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3098                           
  3099                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 461:  }
  3100   001FA8  EFE8  F00F         	goto	l3137
  3101   001FAC                     l3131:
  3102                           
  3103                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 463:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 464:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3104   001FAC  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3105   001FAE  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3106   001FB0  0E01               	movlw	1
  3107   001FB2  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3108   001FB4  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3109   001FB8  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3110   001FBA                     
  3111                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 465:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3112   001FBA  0E03               	movlw	3
  3113   001FBC                     u4087:
  3114   001FBC  2EE8               	decfsz	wreg,f,c
  3115   001FBE  D7FE               	bra	u4087
  3116   001FC0  0000               	nop	
  3117   001FC2                     
  3118                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 466:   ret |= gpio_pin_write_logic(&(lcd->lcd_en), G
      +                          PIO_LOW);
  3119   001FC2  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3120   001FC4  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3121   001FC6  0E00               	movlw	0
  3122   001FC8  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3123   001FCA  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3124   001FCE  120A               	iorwf	lcd_8bit_send_enable_signal@ret^0,f,c
  3125   001FD0                     l3137:
  3126                           
  3127                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 468:  return (ret);
  3128   001FD0  500A               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  3129   001FD2  0012               	return		;funcret
  3130   001FD4                     __end_of_lcd_8bit_send_enable_signal:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _lcd_4bit_initialize *****************
  3134 ;; Defined at:
  3135 ;;		line 14 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;  lcd             1   17[COMRAM] PTR const struct .
  3138 ;;		 -> lcd_1(6), 
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;  ret             1   20[COMRAM] unsigned char 
  3141 ;;  lcd_data_cou    1   19[COMRAM] unsigned char 
  3142 ;; Return value:  Size  Location     Type
  3143 ;;                  1    wreg      unsigned char 
  3144 ;; Registers used:
  3145 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3146 ;; Tracked objects:
  3147 ;;		On entry : 0/0
  3148 ;;		On exit  : 0/0
  3149 ;;		Unchanged: 0/0
  3150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3151 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;Total ram usage:        4 bytes
  3156 ;; Hardware stack levels used: 1
  3157 ;; Hardware stack levels required when called: 3
  3158 ;; This function calls:
  3159 ;;		_gpio_pin_initialize
  3160 ;;		_lcd_4bit_send_command
  3161 ;; This function is called by:
  3162 ;;		_ecu_layer_initialize
  3163 ;; This function uses a non-reentrant model
  3164 ;;
  3165                           
  3166                           	psect	text20
  3167   00136A                     __ptext20:
  3168                           	callstack 0
  3169   00136A                     _lcd_4bit_initialize:
  3170                           	callstack 25
  3171   00136A                     
  3172                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 17:     uint8 lcd_data_counter = 0x00;
  3173   00136A  0E00               	movlw	0
  3174   00136C  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3175                           
  3176                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 18:  if (((void*)0) == lcd)
  3177   00136E  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3178   001370  A4D8               	btfss	status,2,c
  3179   001372  EFBD  F009         	goto	u2611
  3180   001376  EFBF  F009         	goto	u2610
  3181   00137A                     u2611:
  3182   00137A  EFC3  F009         	goto	l3373
  3183   00137E                     u2610:
  3184   00137E                     
  3185                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 19:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 20:      r
      +                          et = (Std_ReturnType)0x01u;
  3186   00137E  0E01               	movlw	1
  3187   001380  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3188                           
  3189                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 21:  }
  3190   001382  EF59  F00A         	goto	l3413
  3191   001386                     l3373:
  3192                           
  3193                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 23:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 24:       
      +                            ret = gpio_pin_initialize(&(lcd->lcd_rs));
  3194   001386  C012  F008         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  3195   00138A  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  3196   00138E  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3197   001390                     
  3198                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 25:         if ((Std_ReturnType)0x00u == ret)
  3199   001390  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3200   001392  A4D8               	btfss	status,2,c
  3201   001394  EFCE  F009         	goto	u2621
  3202   001398  EFD0  F009         	goto	u2620
  3203   00139C                     u2621:
  3204   00139C  EF59  F00A         	goto	l3413
  3205   0013A0                     u2620:
  3206   0013A0                     
  3207                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 26:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 27:
      +                                       ret = gpio_pin_initialize(&(lcd->lcd_en));
  3208   0013A0  2812               	incf	lcd_4bit_initialize@lcd^0,w,c
  3209   0013A2  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3210   0013A4  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  3211   0013A8  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3212   0013AA                     
  3213                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 28:             if ((Std_ReturnType)0x00u == ret)
  3214   0013AA  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3215   0013AC  A4D8               	btfss	status,2,c
  3216   0013AE  EFDB  F009         	goto	u2631
  3217   0013B2  EFDD  F009         	goto	u2630
  3218   0013B6                     u2631:
  3219   0013B6  EF59  F00A         	goto	l3413
  3220   0013BA                     u2630:
  3221   0013BA                     
  3222                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 29:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c:
      +                           30:                 for (lcd_data_counter = 0x00; lcd_data_counter < 4; lcd_data_counte
      +                          r++)
  3223   0013BA  0E00               	movlw	0
  3224   0013BC  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3225   0013BE                     l3387:
  3226                           
  3227                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 31:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 32:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counter]
      +                          ));
  3228   0013BE  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3229   0013C0  2414               	addwf	lcd_4bit_initialize@lcd_data_counter^0,w,c
  3230   0013C2  0F02               	addlw	2
  3231   0013C4  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3232   0013C6  EC64  F00F         	call	_gpio_pin_initialize	;wreg free
  3233   0013CA  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3234   0013CC                     
  3235                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 33:                     if ((Std_ReturnType)0x01u ==
      +                           ret)
  3236   0013CC  0415               	decf	lcd_4bit_initialize@ret^0,w,c
  3237   0013CE  A4D8               	btfss	status,2,c
  3238   0013D0  EFEC  F009         	goto	u2641
  3239   0013D4  EFEE  F009         	goto	u2640
  3240   0013D8                     u2641:
  3241   0013D8  EFF0  F009         	goto	l3393
  3242   0013DC                     u2640:
  3243   0013DC  EFF9  F009         	goto	l3397
  3244   0013E0                     l3393:
  3245                           
  3246                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 37:                 }
  3247   0013E0  2A14               	incf	lcd_4bit_initialize@lcd_data_counter^0,f,c
  3248   0013E2  0E03               	movlw	3
  3249   0013E4  6414               	cpfsgt	lcd_4bit_initialize@lcd_data_counter^0,c
  3250   0013E6  EFF7  F009         	goto	u2651
  3251   0013EA  EFF9  F009         	goto	u2650
  3252   0013EE                     u2651:
  3253   0013EE  EFDF  F009         	goto	l3387
  3254   0013F2                     u2650:
  3255   0013F2                     l3397:
  3256                           
  3257                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 38:                 if ((Std_ReturnType)0x00u == ret
      +                          )
  3258   0013F2  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3259   0013F4  A4D8               	btfss	status,2,c
  3260   0013F6  EFFF  F009         	goto	u2661
  3261   0013FA  EF01  F00A         	goto	u2660
  3262   0013FE                     u2661:
  3263   0013FE  EF59  F00A         	goto	l3413
  3264   001402                     u2660:
  3265   001402                     
  3266                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 39:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 41:                     _delay((unsigned long)((20)*((8 *1000UL *1000UL)/4000.0)));
  3267   001402  0E34               	movlw	52
  3268   001404  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3269   001406  0EF2               	movlw	242
  3270   001408                     u4097:
  3271   001408  2EE8               	decfsz	wreg,f,c
  3272   00140A  D7FE               	bra	u4097
  3273   00140C  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3274   00140E  D7FC               	bra	u4097
  3275   001410  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3276   001414  0E38               	movlw	56
  3277   001416  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3278   001418  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3279   00141C                     
  3280                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 43:                     _delay((unsigned long)((5)*(
      +                          (8 *1000UL *1000UL)/4000.0)));
  3281   00141C  0E0D               	movlw	13
  3282   00141E  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3283   001420  0EFC               	movlw	252
  3284   001422                     u4107:
  3285   001422  2EE8               	decfsz	wreg,f,c
  3286   001424  D7FE               	bra	u4107
  3287   001426  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3288   001428  D7FC               	bra	u4107
  3289   00142A  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3290   00142E  0E38               	movlw	56
  3291   001430  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3292   001432  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3293   001436                     
  3294                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 45:                     _delay((unsigned long)((150)
      +                          *((8 *1000UL *1000UL)/4000000.0)));
  3295   001436  0E64               	movlw	100
  3296   001438                     u4117:
  3297   001438  2EE8               	decfsz	wreg,f,c
  3298   00143A  D7FE               	bra	u4117
  3299   00143C                     
  3300                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 46:                     ret = lcd_4bit_send_command(
      +                          lcd, 0x38);
  3301   00143C  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3302   001440  0E38               	movlw	56
  3303   001442  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3304   001444  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3305   001448  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3306   00144A                     
  3307                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 48:                     if ((Std_ReturnType)0x00u ==
      +                           ret)
  3308   00144A  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3309   00144C  A4D8               	btfss	status,2,c
  3310   00144E  EF2B  F00A         	goto	u2671
  3311   001452  EF2D  F00A         	goto	u2670
  3312   001456                     u2671:
  3313   001456  EF59  F00A         	goto	l78
  3314   00145A                     u2670:
  3315   00145A                     
  3316                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 49:                     {;ECU_Layer/Char_LCD/ecu_cha
      +                          r_lcd.c: 50:                         ret |= lcd_4bit_send_command(lcd, 0x01);
  3317   00145A  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3318   00145E  0E01               	movlw	1
  3319   001460  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3320   001462  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3321   001466  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3322                           
  3323                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 51:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x02);
  3324   001468  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3325   00146C  0E02               	movlw	2
  3326   00146E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3327   001470  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3328   001474  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3329                           
  3330                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 52:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x06);
  3331   001476  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3332   00147A  0E06               	movlw	6
  3333   00147C  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3334   00147E  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3335   001482  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3336                           
  3337                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 53:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x0C);
  3338   001484  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3339   001488  0E0C               	movlw	12
  3340   00148A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3341   00148C  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3342   001490  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3343                           
  3344                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 54:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x28);
  3345   001492  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3346   001496  0E28               	movlw	40
  3347   001498  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3348   00149A  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3349   00149E  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3350                           
  3351                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 55:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x80);
  3352   0014A0  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3353   0014A4  0E80               	movlw	128
  3354   0014A6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3355   0014A8  EC93  F00D         	call	_lcd_4bit_send_command	;wreg free
  3356   0014AC  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3357   0014AE  EF59  F00A         	goto	l3413
  3358   0014B2                     l78:
  3359   0014B2                     l3413:
  3360                           
  3361                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 61:  return (ret);
  3362   0014B2  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3363   0014B4  0012               	return		;funcret
  3364   0014B6                     __end_of_lcd_4bit_initialize:
  3365                           	callstack 0
  3366                           
  3367 ;; *************** function _lcd_4bit_send_command *****************
  3368 ;; Defined at:
  3369 ;;		line 64 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  lcd             1   14[COMRAM] PTR const struct .
  3372 ;;		 -> lcd_1(6), 
  3373 ;;  command         1   15[COMRAM] unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  ret             1   16[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      unsigned char 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        3 bytes
  3390 ;; Hardware stack levels used: 1
  3391 ;; Hardware stack levels required when called: 2
  3392 ;; This function calls:
  3393 ;;		_gpio_pin_write_logic
  3394 ;;		_lcd_4bit_send_enable_signal
  3395 ;;		_lcd_send_4bits
  3396 ;; This function is called by:
  3397 ;;		_lcd_4bit_initialize
  3398 ;;		_lcd_4bit_set_cursor
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           
  3402                           	psect	text21
  3403   001B26                     __ptext21:
  3404                           	callstack 0
  3405   001B26                     _lcd_4bit_send_command:
  3406                           	callstack 25
  3407   001B26                     
  3408                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 67:  if (((void*)0) == lcd)
  3409   001B26  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  3410   001B28  A4D8               	btfss	status,2,c
  3411   001B2A  EF99  F00D         	goto	u2401
  3412   001B2E  EF9B  F00D         	goto	u2400
  3413   001B32                     u2401:
  3414   001B32  EF9F  F00D         	goto	l3255
  3415   001B36                     u2400:
  3416   001B36                     
  3417                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 68:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 69:      r
      +                          et = (Std_ReturnType)0x01u;
  3418   001B36  0E01               	movlw	1
  3419   001B38  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3420                           
  3421                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 70:  }
  3422   001B3A  EFE1  F00D         	goto	l3273
  3423   001B3E                     l3255:
  3424                           
  3425                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 72:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 73:       
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  3426   001B3E  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  3427   001B42  0E00               	movlw	0
  3428   001B44  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3429   001B46  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3430   001B4A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3431   001B4C                     
  3432                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 74:         if ((Std_ReturnType)0x00u == ret)
  3433   001B4C  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3434   001B4E  A4D8               	btfss	status,2,c
  3435   001B50  EFAC  F00D         	goto	u2411
  3436   001B54  EFAE  F00D         	goto	u2410
  3437   001B58                     u2411:
  3438   001B58  EFE1  F00D         	goto	l3273
  3439   001B5C                     u2410:
  3440   001B5C                     
  3441                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 75:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 76:
      +                                       ret = lcd_send_4bits(lcd, command >> 4);
  3442   001B5C  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3443   001B60  3810               	swapf	lcd_4bit_send_command@command^0,w,c
  3444   001B62  0B0F               	andlw	15
  3445   001B64  6E0A               	movwf	lcd_send_4bits@data_command^0,c
  3446   001B66  ECE3  F00D         	call	_lcd_send_4bits	;wreg free
  3447   001B6A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3448   001B6C                     
  3449                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 77:             if ((Std_ReturnType)0x00u == ret)
  3450   001B6C  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3451   001B6E  A4D8               	btfss	status,2,c
  3452   001B70  EFBC  F00D         	goto	u2421
  3453   001B74  EFBE  F00D         	goto	u2420
  3454   001B78                     u2421:
  3455   001B78  EFC3  F00D         	goto	l3265
  3456   001B7C                     u2420:
  3457   001B7C                     
  3458                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 78:                 ret = lcd_4bit_send_enable_signa
      +                          l(lcd);
  3459   001B7C  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3460   001B80  EC3C  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3461   001B84  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3462   001B86                     l3265:
  3463                           
  3464                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 79:             if ((Std_ReturnType)0x00u == ret)
  3465   001B86  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3466   001B88  A4D8               	btfss	status,2,c
  3467   001B8A  EFC9  F00D         	goto	u2431
  3468   001B8E  EFCB  F00D         	goto	u2430
  3469   001B92                     u2431:
  3470   001B92  EFE1  F00D         	goto	l3273
  3471   001B96                     u2430:
  3472   001B96                     
  3473                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 80:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c:
      +                           81:                 ret = lcd_send_4bits(lcd, command);
  3474   001B96  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3475   001B9A  C010  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  3476   001B9E  ECE3  F00D         	call	_lcd_send_4bits	;wreg free
  3477   001BA2  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3478   001BA4                     
  3479                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 82:                 if ((Std_ReturnType)0x00u == ret
      +                          )
  3480   001BA4  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3481   001BA6  A4D8               	btfss	status,2,c
  3482   001BA8  EFD8  F00D         	goto	u2441
  3483   001BAC  EFDA  F00D         	goto	u2440
  3484   001BB0                     u2441:
  3485   001BB0  EFE1  F00D         	goto	l90
  3486   001BB4                     u2440:
  3487   001BB4                     
  3488                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 83:                     ret = lcd_4bit_send_enable_s
      +                          ignal(lcd);
  3489   001BB4  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3490   001BB8  EC3C  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3491   001BBC  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3492   001BBE  EFE1  F00D         	goto	l3273
  3493   001BC2                     l90:
  3494   001BC2                     l3273:
  3495                           
  3496                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 87:  return (ret);
  3497   001BC2  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3498   001BC4  0012               	return		;funcret
  3499   001BC6                     __end_of_lcd_4bit_send_command:
  3500                           	callstack 0
  3501                           
  3502 ;; *************** function _lcd_send_4bits *****************
  3503 ;; Defined at:
  3504 ;;		line 377 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3505 ;; Parameters:    Size  Location     Type
  3506 ;;  lcd             1    8[COMRAM] PTR const struct .
  3507 ;;		 -> lcd_1(6), 
  3508 ;;  data_command    1    9[COMRAM] unsigned char 
  3509 ;; Auto vars:     Size  Location     Type
  3510 ;;  counter         1   13[COMRAM] unsigned char 
  3511 ;;  ret             1   12[COMRAM] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      unsigned char 
  3514 ;; Registers used:
  3515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3521 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3522 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;Total ram usage:        6 bytes
  3526 ;; Hardware stack levels used: 1
  3527 ;; Hardware stack levels required when called: 1
  3528 ;; This function calls:
  3529 ;;		_gpio_pin_write_logic
  3530 ;; This function is called by:
  3531 ;;		_lcd_4bit_send_command
  3532 ;;		_lcd_4bit_send_char_data
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text22
  3537   001BC6                     __ptext22:
  3538                           	callstack 0
  3539   001BC6                     _lcd_send_4bits:
  3540                           	callstack 25
  3541   001BC6                     
  3542                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 380:     uint8 counter = 0x00;
  3543   001BC6  0E00               	movlw	0
  3544   001BC8  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3545                           
  3546                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 382:     if (((void*)0) == lcd)
  3547   001BCA  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3548   001BCC  A4D8               	btfss	status,2,c
  3549   001BCE  EFEB  F00D         	goto	u2141
  3550   001BD2  EFED  F00D         	goto	u2140
  3551   001BD6                     u2141:
  3552   001BD6  EFF1  F00D         	goto	l3091
  3553   001BDA                     u2140:
  3554   001BDA                     
  3555                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 383:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 384:  
      +                                 ret = (Std_ReturnType)0x01u;
  3556   001BDA  0E01               	movlw	1
  3557   001BDC  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3558                           
  3559                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 385:     }
  3560   001BDE  EF1C  F00E         	goto	l3107
  3561   001BE2                     l3091:
  3562                           
  3563                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 387:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 388:  
      +                                 for (counter = 0x00; counter < 4; counter++)
  3564   001BE2  0E00               	movlw	0
  3565   001BE4  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3566   001BE6                     l3097:
  3567                           
  3568                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 389:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 39
      +                          0:             ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data_command >> co
      +                          unter) & (uint8)1);
  3569   001BE6  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3570   001BE8  240E               	addwf	lcd_send_4bits@counter^0,w,c
  3571   001BEA  0F02               	addlw	2
  3572   001BEC  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3573   001BEE  C00E  F00B         	movff	lcd_send_4bits@counter,??_lcd_send_4bits
  3574   001BF2  C00A  F00C         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  3575   001BF6  2A0B               	incf	??_lcd_send_4bits^0,f,c
  3576   001BF8  EF00  F00E         	goto	u2154
  3577   001BFC                     u2155:
  3578   001BFC  90D8               	bcf	status,0,c
  3579   001BFE  320C               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3580   001C00                     u2154:
  3581   001C00  2E0B               	decfsz	??_lcd_send_4bits^0,f,c
  3582   001C02  EFFE  F00D         	goto	u2155
  3583   001C06  500C               	movf	(??_lcd_send_4bits+1)^0,w,c
  3584   001C08  0B01               	andlw	1
  3585   001C0A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3586   001C0C  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3587   001C10  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3588   001C12                     
  3589                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 391:             if ((Std_ReturnType)0x01u == ret)
  3590   001C12  040D               	decf	lcd_send_4bits@ret^0,w,c
  3591   001C14  A4D8               	btfss	status,2,c
  3592   001C16  EF0F  F00E         	goto	u2161
  3593   001C1A  EF11  F00E         	goto	u2160
  3594   001C1E                     u2161:
  3595   001C1E  EF13  F00E         	goto	l3103
  3596   001C22                     u2160:
  3597   001C22  EF1C  F00E         	goto	l3107
  3598   001C26                     l3103:
  3599                           
  3600                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 395:         }
  3601   001C26  2A0E               	incf	lcd_send_4bits@counter^0,f,c
  3602   001C28  0E03               	movlw	3
  3603   001C2A  640E               	cpfsgt	lcd_send_4bits@counter^0,c
  3604   001C2C  EF1A  F00E         	goto	u2171
  3605   001C30  EF1C  F00E         	goto	u2170
  3606   001C34                     u2171:
  3607   001C34  EFF3  F00D         	goto	l3097
  3608   001C38                     u2170:
  3609   001C38                     l3107:
  3610                           
  3611                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 397:     return (ret);
  3612   001C38  500D               	movf	lcd_send_4bits@ret^0,w,c
  3613   001C3A  0012               	return		;funcret
  3614   001C3C                     __end_of_lcd_send_4bits:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3618 ;; Defined at:
  3619 ;;		line 435 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  lcd             1    8[COMRAM] PTR const struct .
  3622 ;;		 -> lcd_1(6), 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  ret             1    9[COMRAM] unsigned char 
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3634 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 1
  3641 ;; This function calls:
  3642 ;;		_gpio_pin_write_logic
  3643 ;; This function is called by:
  3644 ;;		_lcd_4bit_send_command
  3645 ;;		_lcd_4bit_send_char_data
  3646 ;; This function uses a non-reentrant model
  3647 ;;
  3648                           
  3649                           	psect	text23
  3650   001E78                     __ptext23:
  3651                           	callstack 0
  3652   001E78                     _lcd_4bit_send_enable_signal:
  3653                           	callstack 25
  3654   001E78                     
  3655                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 439:     if (((void*)0) == lcd)
  3656   001E78  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3657   001E7A  A4D8               	btfss	status,2,c
  3658   001E7C  EF42  F00F         	goto	u2181
  3659   001E80  EF44  F00F         	goto	u2180
  3660   001E84                     u2181:
  3661   001E84  EF48  F00F         	goto	l3115
  3662   001E88                     u2180:
  3663   001E88                     
  3664                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 440:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 441:  
      +                                 ret = (Std_ReturnType)0x01u;
  3665   001E88  0E01               	movlw	1
  3666   001E8A  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3667                           
  3668                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 442:     }
  3669   001E8C  EF62  F00F         	goto	l3123
  3670   001E90                     l3115:
  3671                           
  3672                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 444:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 445:  
      +                                 ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3673   001E90  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3674   001E92  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3675   001E94  0E01               	movlw	1
  3676   001E96  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3677   001E98  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3678   001E9C  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3679   001E9E                     
  3680                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 446:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3681   001E9E  0E03               	movlw	3
  3682   001EA0                     u4127:
  3683   001EA0  2EE8               	decfsz	wreg,f,c
  3684   001EA2  D7FE               	bra	u4127
  3685   001EA4  0000               	nop	
  3686   001EA6                     
  3687                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 447:         if ((Std_ReturnType)0x00u == ret)
  3688   001EA6  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3689   001EA8  A4D8               	btfss	status,2,c
  3690   001EAA  EF59  F00F         	goto	u2191
  3691   001EAE  EF5B  F00F         	goto	u2190
  3692   001EB2                     u2191:
  3693   001EB2  EF62  F00F         	goto	l3123
  3694   001EB6                     u2190:
  3695   001EB6                     
  3696                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 448:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 44
      +                          9:             ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  3697   001EB6  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3698   001EB8  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3699   001EBA  0E00               	movlw	0
  3700   001EBC  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3701   001EBE  EC02  F009         	call	_gpio_pin_write_logic	;wreg free
  3702   001EC2  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3703   001EC4                     l3123:
  3704                           
  3705                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 452:     return (ret);
  3706   001EC4  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3707   001EC6  0012               	return		;funcret
  3708   001EC8                     __end_of_lcd_4bit_send_enable_signal:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _gpio_pin_write_logic *****************
  3712 ;; Defined at:
  3713 ;;		line 95 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  3716 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  3717 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  3718 ;;		 -> keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), dc_motor_2(2), 
  3719 ;;		 -> dc_motor_1$dc_motor_pins(2), dc_motor_1(2), lcd_2$lcd_data(8), lcd_2(10), 
  3720 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3721 ;;		 -> led_turn_off@pin(1), led_turn_on@pin(1), 
  3722 ;;  logic           1    1[COMRAM] enum E3076
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  ret             1    7[COMRAM] unsigned char 
  3725 ;; Return value:  Size  Location     Type
  3726 ;;                  1    wreg      unsigned char 
  3727 ;; Registers used:
  3728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3729 ;; Tracked objects:
  3730 ;;		On entry : 0/0
  3731 ;;		On exit  : 0/0
  3732 ;;		Unchanged: 0/0
  3733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3734 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3735 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3736 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3737 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3738 ;;Total ram usage:        8 bytes
  3739 ;; Hardware stack levels used: 1
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_lcd_4bit_send_command
  3744 ;;		_lcd_8bit_send_command
  3745 ;;		_lcd_8bit_send_char_data
  3746 ;;		_lcd_send_4bits
  3747 ;;		_lcd_4bit_send_enable_signal
  3748 ;;		_lcd_8bit_send_enable_signal
  3749 ;;		_lcd_4bit_send_char_data
  3750 ;;		_dc_motor_move_forward
  3751 ;;		_dc_motor_move_backward
  3752 ;;		_dc_motor_stop
  3753 ;;		_keypad_get_value
  3754 ;;		_led_turn_on
  3755 ;;		_led_turn_off
  3756 ;;		_relay_turn_on
  3757 ;;		_relay_turn_off
  3758 ;;		_seven_segment_write_number
  3759 ;;		_seven_segment_test
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           	psect	text24
  3764   001204                     __ptext24:
  3765                           	callstack 0
  3766   001204                     _gpio_pin_write_logic:
  3767                           	callstack 26
  3768   001204                     
  3769                           ;MCAL_Layer/GPIO/hal_gpio.c: 95: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config_t, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 96: {;MCAL_Layer/GPIO/hal_gpi
      +                          o.c: 97:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  3770   001204  0E00               	movlw	0
  3771   001206  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3772                           
  3773                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  3774   001208  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3775   00120A  B4D8               	btfsc	status,2,c
  3776   00120C  EF0A  F009         	goto	u2041
  3777   001210  EF0C  F009         	goto	u2040
  3778   001214                     u2041:
  3779   001214  EF1C  F009         	goto	l3045
  3780   001218                     u2040:
  3781   001218  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3782   00121A  6ED9               	movwf	fsr2l,c
  3783   00121C  6ADA               	clrf	fsr2h,c
  3784   00121E  30DF               	rrcf	223,w,c
  3785   001220  32E8               	rrcf	wreg,f,c
  3786   001222  32E8               	rrcf	wreg,f,c
  3787   001224  0B07               	andlw	7
  3788   001226  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3789   001228  0E07               	movlw	7
  3790   00122A  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
  3791   00122C  EF1A  F009         	goto	u2051
  3792   001230  EF1C  F009         	goto	u2050
  3793   001234                     u2051:
  3794   001234  EF9E  F009         	goto	l3057
  3795   001238                     u2050:
  3796   001238                     l3045:
  3797                           
  3798                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     {;MCAL_Layer/GPIO/hal_gpio.c: 100:         ret = (S
      +                          td_ReturnType)0x01u;
  3799   001238  0E01               	movlw	1
  3800   00123A  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3801                           
  3802                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:     }
  3803   00123C  EFB3  F009         	goto	l3059
  3804   001240                     l3047:
  3805                           
  3806                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:                 (*lat_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  3807   001240  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3808   001242  6ED9               	movwf	fsr2l,c
  3809   001244  6ADA               	clrf	fsr2h,c
  3810   001246  30DF               	rrcf	223,w,c
  3811   001248  32E8               	rrcf	wreg,f,c
  3812   00124A  32E8               	rrcf	wreg,f,c
  3813   00124C  0B07               	andlw	7
  3814   00124E  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3815   001250  0E01               	movlw	1
  3816   001252  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3817   001254  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3818   001256  EF2F  F009         	goto	u2064
  3819   00125A                     u2065:
  3820   00125A  90D8               	bcf	status,0,c
  3821   00125C  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3822   00125E                     u2064:
  3823   00125E  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3824   001260  EF2D  F009         	goto	u2065
  3825   001264  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3826   001266  6ED9               	movwf	fsr2l,c
  3827   001268  6ADA               	clrf	fsr2h,c
  3828   00126A  50DF               	movf	223,w,c
  3829   00126C  0B07               	andlw	7
  3830   00126E  0D02               	mullw	2
  3831   001270  50F3               	movf	243,w,c
  3832   001272  0F74               	addlw	low _lat_registers
  3833   001274  6ED9               	movwf	fsr2l,c
  3834   001276  6ADA               	clrf	fsr2h,c
  3835   001278  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
  3836   00127C  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
  3837   001280  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3838   001284  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3839   001288  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3840   00128A  12DF               	iorwf	indf2,f,c
  3841                           
  3842                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:                 break;
  3843   00128C  EFB3  F009         	goto	l3059
  3844   001290                     l3049:
  3845                           
  3846                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3847   001290  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3848   001292  6ED9               	movwf	fsr2l,c
  3849   001294  6ADA               	clrf	fsr2h,c
  3850   001296  30DF               	rrcf	223,w,c
  3851   001298  32E8               	rrcf	wreg,f,c
  3852   00129A  32E8               	rrcf	wreg,f,c
  3853   00129C  0B07               	andlw	7
  3854   00129E  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3855   0012A0  0E01               	movlw	1
  3856   0012A2  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3857   0012A4  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3858   0012A6  EF57  F009         	goto	u2074
  3859   0012AA                     u2075:
  3860   0012AA  90D8               	bcf	status,0,c
  3861   0012AC  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3862   0012AE                     u2074:
  3863   0012AE  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3864   0012B0  EF55  F009         	goto	u2075
  3865   0012B4  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3866   0012B6  0AFF               	xorlw	255
  3867   0012B8  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3868   0012BA  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3869   0012BC  6ED9               	movwf	fsr2l,c
  3870   0012BE  6ADA               	clrf	fsr2h,c
  3871   0012C0  50DF               	movf	223,w,c
  3872   0012C2  0B07               	andlw	7
  3873   0012C4  0D02               	mullw	2
  3874   0012C6  50F3               	movf	243,w,c
  3875   0012C8  0F74               	addlw	low _lat_registers
  3876   0012CA  6ED9               	movwf	fsr2l,c
  3877   0012CC  6ADA               	clrf	fsr2h,c
  3878   0012CE  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3879   0012D2  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3880   0012D6  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3881   0012DA  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3882   0012DE  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3883   0012E0  16DF               	andwf	indf2,f,c
  3884                           
  3885                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:                 break;
  3886   0012E2  EFB3  F009         	goto	l3059
  3887   0012E6                     l3051:
  3888                           
  3889                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3890   0012E6  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3891   0012E8  6ED9               	movwf	fsr2l,c
  3892   0012EA  6ADA               	clrf	fsr2h,c
  3893   0012EC  30DF               	rrcf	223,w,c
  3894   0012EE  32E8               	rrcf	wreg,f,c
  3895   0012F0  32E8               	rrcf	wreg,f,c
  3896   0012F2  0B07               	andlw	7
  3897   0012F4  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3898   0012F6  0E01               	movlw	1
  3899   0012F8  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3900   0012FA  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3901   0012FC  EF82  F009         	goto	u2084
  3902   001300                     u2085:
  3903   001300  90D8               	bcf	status,0,c
  3904   001302  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3905   001304                     u2084:
  3906   001304  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3907   001306  EF80  F009         	goto	u2085
  3908   00130A  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3909   00130C  0AFF               	xorlw	255
  3910   00130E  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3911   001310  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3912   001312  6ED9               	movwf	fsr2l,c
  3913   001314  6ADA               	clrf	fsr2h,c
  3914   001316  50DF               	movf	223,w,c
  3915   001318  0B07               	andlw	7
  3916   00131A  0D02               	mullw	2
  3917   00131C  50F3               	movf	243,w,c
  3918   00131E  0F74               	addlw	low _lat_registers
  3919   001320  6ED9               	movwf	fsr2l,c
  3920   001322  6ADA               	clrf	fsr2h,c
  3921   001324  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3922   001328  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3923   00132C  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3924   001330  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3925   001334  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3926   001336  16DF               	andwf	indf2,f,c
  3927   001338  EF1C  F009         	goto	l3045
  3928   00133C                     l3057:
  3929   00133C  5002               	movf	gpio_pin_write_logic@logic^0,w,c
  3930   00133E  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3931   001340  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3932                           
  3933                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3934                           ; Switch size 1, requested type "simple"
  3935                           ; Number of cases is 1, Range of values is 0 to 0
  3936                           ; switch strategies available:
  3937                           ; Name         Instructions Cycles
  3938                           ; simple_byte            4     3 (average)
  3939                           ;	Chosen strategy is simple_byte
  3940   001342  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3941   001344  0A00               	xorlw	0	; case 0
  3942   001346  B4D8               	btfsc	status,2,c
  3943   001348  EFA8  F009         	goto	l4521
  3944   00134C  EF73  F009         	goto	l3051
  3945   001350                     l4521:
  3946                           
  3947                           ; Switch size 1, requested type "simple"
  3948                           ; Number of cases is 2, Range of values is 0 to 1
  3949                           ; switch strategies available:
  3950                           ; Name         Instructions Cycles
  3951                           ; simple_byte            7     4 (average)
  3952                           ;	Chosen strategy is simple_byte
  3953   001350  5003               	movf	??_gpio_pin_write_logic^0,w,c
  3954   001352  0A00               	xorlw	0	; case 0
  3955   001354  B4D8               	btfsc	status,2,c
  3956   001356  EF48  F009         	goto	l3049
  3957   00135A  0A01               	xorlw	1	; case 1
  3958   00135C  B4D8               	btfsc	status,2,c
  3959   00135E  EF20  F009         	goto	l3047
  3960   001362  EF73  F009         	goto	l3051
  3961   001366                     l3059:
  3962                           
  3963                           ;MCAL_Layer/GPIO/hal_gpio.c: 118:     return (ret);
  3964   001366  5008               	movf	gpio_pin_write_logic@ret^0,w,c
  3965   001368  0012               	return		;funcret
  3966   00136A                     __end_of_gpio_pin_write_logic:
  3967                           	callstack 0
  3968                           
  3969 ;; *************** function _gpio_pin_initialize *****************
  3970 ;; Defined at:
  3971 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  _pin_config_    1    7[COMRAM] PTR const struct .
  3974 ;;		 -> seg1$segment_pins(4), seg1(5), keypad1$keypad_rows_pins(4), keypad1(8), 
  3975 ;;		 -> dc_motor_2$dc_motor_pins(2), dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), 
  3976 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3977 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  ret             1    9[COMRAM] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        3 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; Hardware stack levels required when called: 1
  3996 ;; This function calls:
  3997 ;;		_gpio_pin_direction_initialize
  3998 ;; This function is called by:
  3999 ;;		_lcd_4bit_initialize
  4000 ;;		_lcd_8bit_initialize
  4001 ;;		_dc_motor_initialize
  4002 ;;		_keypad_initialize
  4003 ;;		_led_intitialize
  4004 ;;		_relay_initialize
  4005 ;;		_seven_segment_initialize
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text25
  4010   001EC8                     __ptext25:
  4011                           	callstack 0
  4012   001EC8                     _gpio_pin_initialize:
  4013                           	callstack 26
  4014   001EC8                     
  4015                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  4016   001EC8  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  4017   001ECA  B4D8               	btfsc	status,2,c
  4018   001ECC  EF6A  F00F         	goto	u2381
  4019   001ED0  EF6C  F00F         	goto	u2380
  4020   001ED4                     u2381:
  4021   001ED4  EF7C  F00F         	goto	l3243
  4022   001ED8                     u2380:
  4023   001ED8  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  4024   001EDA  6ED9               	movwf	fsr2l,c
  4025   001EDC  6ADA               	clrf	fsr2h,c
  4026   001EDE  30DF               	rrcf	223,w,c
  4027   001EE0  32E8               	rrcf	wreg,f,c
  4028   001EE2  32E8               	rrcf	wreg,f,c
  4029   001EE4  0B07               	andlw	7
  4030   001EE6  6E09               	movwf	??_gpio_pin_initialize^0,c
  4031   001EE8  0E07               	movlw	7
  4032   001EEA  6409               	cpfsgt	??_gpio_pin_initialize^0,c
  4033   001EEC  EF7A  F00F         	goto	u2391
  4034   001EF0  EF7C  F00F         	goto	u2390
  4035   001EF4                     u2391:
  4036   001EF4  EF80  F00F         	goto	l3245
  4037   001EF8                     u2390:
  4038   001EF8                     l3243:
  4039                           
  4040                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     {;MCAL_Layer/GPIO/hal_gpio.c: 22:         ret = (St
      +                          d_ReturnType)0x01u;
  4041   001EF8  0E01               	movlw	1
  4042   001EFA  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  4043                           
  4044                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  4045   001EFC  EF85  F00F         	goto	l3247
  4046   001F00                     l3245:
  4047                           
  4048                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = gpi
      +                          o_pin_direction_initialize(_pin_config_t);
  4049   001F00  C008  F001         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
  4050   001F04  ECF7  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  4051   001F08  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  4052   001F0A                     l3247:
  4053                           
  4054                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     return (ret);
  4055   001F0A  500A               	movf	gpio_pin_initialize@ret^0,w,c
  4056   001F0C  0012               	return		;funcret
  4057   001F0E                     __end_of_gpio_pin_initialize:
  4058                           	callstack 0
  4059                           
  4060 ;; *************** function _gpio_pin_direction_initialize *****************
  4061 ;; Defined at:
  4062 ;;		line 38 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4063 ;; Parameters:    Size  Location     Type
  4064 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  4065 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  4066 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  4067 ;;		 -> keypad1$keypad_cols_pins(4), keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), 
  4068 ;;		 -> dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), btn_high(3), 
  4069 ;;		 -> btn_low(3), lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), 
  4070 ;;		 -> lcd_1(6), relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  4071 ;; Auto vars:     Size  Location     Type
  4072 ;;  ret             1    6[COMRAM] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      unsigned char 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4082 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;Total ram usage:        7 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_gpio_pin_initialize
  4092 ;;		_button_initialize
  4093 ;;		_keypad_initialize
  4094 ;;		_seven_segment_application_initialize
  4095 ;; This function uses a non-reentrant model
  4096 ;;
  4097                           
  4098                           	psect	text26
  4099   0015EE                     __ptext26:
  4100                           	callstack 0
  4101   0015EE                     _gpio_pin_direction_initialize:
  4102                           	callstack 26
  4103   0015EE                     
  4104                           ;MCAL_Layer/GPIO/hal_gpio.c: 38: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 39: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          0:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  4105   0015EE  0E00               	movlw	0
  4106   0015F0  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4107                           
  4108                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  4109   0015F2  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4110   0015F4  B4D8               	btfsc	status,2,c
  4111   0015F6  EFFF  F00A         	goto	u2091
  4112   0015FA  EF01  F00B         	goto	u2090
  4113   0015FE                     u2091:
  4114   0015FE  EF11  F00B         	goto	l3071
  4115   001602                     u2090:
  4116   001602  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4117   001604  6ED9               	movwf	fsr2l,c
  4118   001606  6ADA               	clrf	fsr2h,c
  4119   001608  30DF               	rrcf	223,w,c
  4120   00160A  32E8               	rrcf	wreg,f,c
  4121   00160C  32E8               	rrcf	wreg,f,c
  4122   00160E  0B07               	andlw	7
  4123   001610  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4124   001612  0E07               	movlw	7
  4125   001614  6402               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4126   001616  EF0F  F00B         	goto	u2101
  4127   00161A  EF11  F00B         	goto	u2100
  4128   00161E                     u2101:
  4129   00161E  EF68  F00B         	goto	l3081
  4130   001622                     u2100:
  4131   001622                     l3071:
  4132                           
  4133                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     {;MCAL_Layer/GPIO/hal_gpio.c: 44:         ret = (St
      +                          d_ReturnType)0x01u;
  4134   001622  0E01               	movlw	1
  4135   001624  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4136                           
  4137                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
  4138   001626  EF7E  F00B         	goto	l3083
  4139   00162A                     l3073:
  4140                           
  4141                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  4142   00162A  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4143   00162C  6ED9               	movwf	fsr2l,c
  4144   00162E  6ADA               	clrf	fsr2h,c
  4145   001630  30DF               	rrcf	223,w,c
  4146   001632  32E8               	rrcf	wreg,f,c
  4147   001634  32E8               	rrcf	wreg,f,c
  4148   001636  0B07               	andlw	7
  4149   001638  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4150   00163A  0E01               	movlw	1
  4151   00163C  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4152   00163E  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4153   001640  EF24  F00B         	goto	u2114
  4154   001644                     u2115:
  4155   001644  90D8               	bcf	status,0,c
  4156   001646  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4157   001648                     u2114:
  4158   001648  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4159   00164A  EF22  F00B         	goto	u2115
  4160   00164E  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4161   001650  6ED9               	movwf	fsr2l,c
  4162   001652  6ADA               	clrf	fsr2h,c
  4163   001654  50DF               	movf	223,w,c
  4164   001656  0B07               	andlw	7
  4165   001658  0D02               	mullw	2
  4166   00165A  50F3               	movf	243,w,c
  4167   00165C  0F6A               	addlw	low _tris_registers
  4168   00165E  6ED9               	movwf	fsr2l,c
  4169   001660  6ADA               	clrf	fsr2h,c
  4170   001662  CFDE F004          	movff	postinc2,??_gpio_pin_direction_initialize+2
  4171   001666  CFDD F005          	movff	postdec2,??_gpio_pin_direction_initialize+3
  4172   00166A  C004  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  4173   00166E  C005  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  4174   001672  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4175   001674  12DF               	iorwf	indf2,f,c
  4176                           
  4177                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 break;
  4178   001676  EF7E  F00B         	goto	l3083
  4179   00167A                     l3075:
  4180                           
  4181                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  4182   00167A  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4183   00167C  6ED9               	movwf	fsr2l,c
  4184   00167E  6ADA               	clrf	fsr2h,c
  4185   001680  30DF               	rrcf	223,w,c
  4186   001682  32E8               	rrcf	wreg,f,c
  4187   001684  32E8               	rrcf	wreg,f,c
  4188   001686  0B07               	andlw	7
  4189   001688  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4190   00168A  0E01               	movlw	1
  4191   00168C  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4192   00168E  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4193   001690  EF4C  F00B         	goto	u2124
  4194   001694                     u2125:
  4195   001694  90D8               	bcf	status,0,c
  4196   001696  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4197   001698                     u2124:
  4198   001698  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4199   00169A  EF4A  F00B         	goto	u2125
  4200   00169E  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4201   0016A0  0AFF               	xorlw	255
  4202   0016A2  6E04               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4203   0016A4  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4204   0016A6  6ED9               	movwf	fsr2l,c
  4205   0016A8  6ADA               	clrf	fsr2h,c
  4206   0016AA  50DF               	movf	223,w,c
  4207   0016AC  0B07               	andlw	7
  4208   0016AE  0D02               	mullw	2
  4209   0016B0  50F3               	movf	243,w,c
  4210   0016B2  0F6A               	addlw	low _tris_registers
  4211   0016B4  6ED9               	movwf	fsr2l,c
  4212   0016B6  6ADA               	clrf	fsr2h,c
  4213   0016B8  CFDE F005          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4214   0016BC  CFDD F006          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4215   0016C0  C005  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4216   0016C4  C006  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4217   0016C8  5004               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4218   0016CA  16DF               	andwf	indf2,f,c
  4219                           
  4220                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 break;
  4221   0016CC  EF7E  F00B         	goto	l3083
  4222   0016D0                     l3081:
  4223   0016D0  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4224   0016D2  6ED9               	movwf	fsr2l,c
  4225   0016D4  6ADA               	clrf	fsr2h,c
  4226   0016D6  BCDF               	btfsc	indf2,6,c
  4227   0016D8  EF70  F00B         	goto	u2131
  4228   0016DC  EF73  F00B         	goto	u2130
  4229   0016E0                     u2131:
  4230   0016E0  0E01               	movlw	1
  4231   0016E2  EF74  F00B         	goto	u2136
  4232   0016E6                     u2130:
  4233   0016E6  0E00               	movlw	0
  4234   0016E8                     u2136:
  4235                           
  4236                           ; Switch size 1, requested type "simple"
  4237                           ; Number of cases is 2, Range of values is 0 to 1
  4238                           ; switch strategies available:
  4239                           ; Name         Instructions Cycles
  4240                           ; simple_byte            7     4 (average)
  4241                           ;	Chosen strategy is simple_byte
  4242   0016E8  0A00               	xorlw	0	; case 0
  4243   0016EA  B4D8               	btfsc	status,2,c
  4244   0016EC  EF3D  F00B         	goto	l3075
  4245   0016F0  0A01               	xorlw	1	; case 1
  4246   0016F2  B4D8               	btfsc	status,2,c
  4247   0016F4  EF15  F00B         	goto	l3073
  4248   0016F8  EF11  F00B         	goto	l3071
  4249   0016FC                     l3083:
  4250                           
  4251                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return (ret);
  4252   0016FC  5007               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4253   0016FE  0012               	return		;funcret
  4254   001700                     __end_of_gpio_pin_direction_initialize:
  4255                           	callstack 0
  4256                           
  4257                           	psect	rparam
  4258   000000                     tosu	equ	0xFFF
  4259                           tosh	equ	0xFFE
  4260                           tosl	equ	0xFFD
  4261                           stkptr	equ	0xFFC
  4262                           pclatu	equ	0xFFB
  4263                           pclath	equ	0xFFA
  4264                           pcl	equ	0xFF9
  4265                           tblptru	equ	0xFF8
  4266                           tblptrh	equ	0xFF7
  4267                           tblptrl	equ	0xFF6
  4268                           tablat	equ	0xFF5
  4269                           prodh	equ	0xFF4
  4270                           prodl	equ	0xFF3
  4271                           indf0	equ	0xFEF
  4272                           postinc0	equ	0xFEE
  4273                           postdec0	equ	0xFED
  4274                           preinc0	equ	0xFEC
  4275                           plusw0	equ	0xFEB
  4276                           fsr0h	equ	0xFEA
  4277                           fsr0l	equ	0xFE9
  4278                           wreg	equ	0xFE8
  4279                           indf1	equ	0xFE7
  4280                           postinc1	equ	0xFE6
  4281                           postdec1	equ	0xFE5
  4282                           preinc1	equ	0xFE4
  4283                           plusw1	equ	0xFE3
  4284                           fsr1h	equ	0xFE2
  4285                           fsr1l	equ	0xFE1
  4286                           bsr	equ	0xFE0
  4287                           indf2	equ	0xFDF
  4288                           postinc2	equ	0xFDE
  4289                           postdec2	equ	0xFDD
  4290                           preinc2	equ	0xFDC
  4291                           plusw2	equ	0xFDB
  4292                           fsr2h	equ	0xFDA
  4293                           fsr2l	equ	0xFD9
  4294                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        82
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     52      95
    BANK0           160      0     115
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    convert_short_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> btn_high(BANK0[3]), btn_low(BANK0[3]), dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), keypad1(BANK0[8]), keypad1$keypad_cols_pins(BANK0[4]), 
		 -> keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), lcd_2(BANK0[10]), 
		 -> lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), seg1(BANK0[5]), 
		 -> seg1$segment_pins(BANK0[4]), seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), 
		 -> seg4_enable(COMRAM[1]), seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    gpio_pin_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> seg1(BANK0[5]), seg1$segment_pins(BANK0[4]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), seg1(BANK0[5]), seg1$segment_pins(BANK0[4]), 
		 -> seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), seg4_enable(COMRAM[1]), 
		 -> seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    S1655$buffer	PTR unsigned char  size(2) Largest target is 0

    S1655$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), 
		 -> TRISE(BITBIGSFRhh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_short_to_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _convert_short_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _application_init->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   87057
                                             50 COMRAM     2     2      0
                   _application_init
            _convert_short_to_string
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   27811
                                             20 COMRAM     5     1      4
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   14785
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   12520
                                             16 COMRAM     3     1      2
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2   12232
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                              4     1      3    5589
                                             46 COMRAM     4     1      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             19    15      4    4544
                                             27 COMRAM    19    15      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3873
                                             23 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    3523
                                             10 COMRAM    13    10      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_init                                     1     1      0   39575
                                             22 COMRAM     1     1      0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   39551
                                             21 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   16477
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   14056
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5939
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   23027
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   20584
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       6     4      2    6507
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          2     1      1    6113
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5695
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    1866
                                              7 COMRAM     3     2      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     863
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _convert_short_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      73       5       71.9%
BITBIGSFRhh         69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     34      5F       1      100.0%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D2      40        0.0%
DATA                 0      0      D2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 05 06:35:15 2024

                                ?_lcd_send_4bits 0009                                               l90 1BC2  
                                             l85 14B4                                               l94 1BC4  
                                             l78 14B2                                     ___awdiv@sign 0006  
                button_read_state@btn_high_valid 003D                                              l200 1C3A  
                                            l224 1FD2                                              l144 15EC  
                                            l154 19CE                                              l219 1EC6  
                                            l420 205E                                              l164 1920  
                                            l237 1A7A                                              l247 1DC8  
                                            l249 1DCA                                              l179 1D0E  
                                            l187 1E26                                              l465 1F0C  
                                            l477 16FE                                              l751 1CAC  
                                            l496 1368                                              l758 207A  
                                            l992 17C2                                              _abs 1FD4  
            __end_of_lcd_4bit_send_enable_signal 1EC8                      _lcd_4bit_send_enable_signal 1E78  
                                   ___awmod@sign 0006                        ?_lcd_8bit_send_string_pos 0015  
                                            wreg 0FE8                            relay_initialize@F3150 0046  
                    __end_of_lcd_8bit_set_cursor 1A7C                                             l1005 1872  
                   __end_of_lcd_8bit_send_string 1D10                                             ?_abs 0007  
                                           l3111 1E78                                             l3103 1C26  
                                           l1512 11B2                                             l3041 1204  
                                           l3121 1EB6                                             l3113 1E88  
                                           l3105 1C28                                             l4001 2072  
                                           l3201 1812                                             l1513 1202  
                                           l3051 12E6                                             l3043 1218  
                                           l3123 1EC4                                             l3115 1E90  
                                           l3107 1C38                                             l3131 1FAC  
                                           l4003 2072                                             l3211 184C  
                                           l3203 181A                                             l1523 1FEE  
                                           l3045 1238                                             l3117 1E9E  
                                           l3133 1FBA                                             l3301 19B2  
                                           l4005 2078                                             l3141 1700  
                                           l3205 1828                                             l3213 1852  
                                           l3221 1A7C                                             l1526 2006  
                                           l1518 1E6E                                             l3071 1622  
                                           l3047 1240                                             l3119 1EA6  
                                           l3135 1FC2                                             l3127 1F94  
                                           l3303 19C2                                             l3151 172C  
                                           l3143 1704                                             l3215 1862  
                                           l3207 183E                                             l3231 1AF4  
                                           l3223 1A8C                                             l3311 101E  
                                           l1519 1E76                                             l1471 1F50  
                                           l1464 2036                                             l3073 162A  
                                           l3081 16D0                                             l3241 1ED8  
                                           l3049 1290                                             l3057 133C  
                                           l3401 1410                                             l3137 1FD0  
                                           l3129 1FA4                                             l3305 19CC  
                                           l3161 175A                                             l3153 1734  
                                           l3145 1712                                             l3217 186A  
                                           l3209 1846                                             l3225 1A9C  
                                           l3321 1066                                             l3313 1042  
                                           l1538 1B24                                             l3075 167A  
                                           l3083 16FC                                             l3067 15EE  
                                           l3243 1EF8                                             l3059 1366  
                                           l3091 1BE2                                             l3251 1B26  
                                           l3411 145A                                             l3403 141C  
                                           l3171 1794                                             l3163 1762  
                                           l3155 1738                                             l3147 171A  
                                           l3235 1FD4                                             l3227 1AA6  
                                           l3331 10DC                                             l3323 1084  
                                           l3315 104A                                             l3069 1602  
                                           l3245 1F00                                             l3261 1B6C  
                                           l3253 1B36                                             l3405 1436  
                                           l3413 14B2                                             l3421 14D2  
                                           l3181 17BA                                             l3173 1796  
                                           l3165 1770                                             l3157 1740  
                                           l3149 171E                                             l3237 1FE2  
                                           l1549 207C                                             l3229 1AC2  
                                           l3341 114E                                             l3333 110C  
                                           l3325 10A2                                             l3317 1058  
                                           l3309 1016                                             l3501 1E50  
                                           l3247 1F0A                                             l3239 1EC8  
                                           l3087 1BC6                                             l3271 1BB4  
                                           l3263 1B7C                                             l3255 1B3E  
                                           l3407 143C                                             l3423 14DC  
                                           l3175 179C                                             l3167 1776  
                                           l3159 1752                                             l3191 17DE  
                                           l3351 119E                                             l3343 115E  
                                           l3335 1128                                             l3327 10BA  
                                           l3319 105C                                             l3097 1BE6  
                                           l3089 1BDA                                             l3265 1B86  
                                           l3257 1B4C                                             l3273 1BC2  
                                           l3409 144A                                             l3281 193E  
                                           l3441 152C                                             l3425 14EC  
                                           l3417 14B6                                             l3169 178C  
                                           l3177 17A2                                             l3193 17E2  
                                           l3185 17C4                                             l3345 116E  
                                           l3353 11A0                                             l3337 112C  
                                           l3329 10C4                                             l3361 11D2  
                                           l3601 1F16                                             l3099 1C12  
                                           l3267 1B96                                             l3259 1B5C  
                                           l3371 137E                                             l3291 1960  
                                           l3283 194C                                             l3451 1572  
                                           l3443 152E                                             l3435 150A  
                                           l3427 14F6                                             l3419 14CA  
                                           l3179 17B2                                             l3195 17F0  
                                           l3187 17C8                                             l3363 11F2  
                                           l3347 117C                                             l3339 113E  
                                           l3355 11BE                                             l3603 1F1E  
                                           l3269 1BA4                                             l3381 13BA  
                                           l3373 1386                                             l3293 198C  
                                           l3285 195C                                             l3277 1922  
                                           l3453 1578                                             l3437 1518  
                                           l3429 1506                                             l3445 153E  
                                           l3621 205C                                             l3613 2038  
                                           l3197 17F8                                             l3189 17D6  
                                           l3365 11FA                                             l3357 11C6  
                                           l3349 1184                                             l3605 1F26  
                                           l3375 1390                                             l3279 1936  
                                           l3455 1586                                             l3447 154C  
                                           l3615 2038                                             l3199 180A  
                                           l3607 1F3E                                             l3471 18AE  
                                           l3463 1874                                             l3551 19EA  
                                           l4521 1350                                             l3393 13E0  
                                           l3377 13A0                                             l3369 136A  
                                           l3297 19A0                                             l3457 1596  
                                           l3449 1558                                             l3617 2042  
                                           l3609 1F48                                             l3465 1888  
                                           l3561 1A3E                                             l3553 19FA  
                                           l3545 19D0                                             l3395 13E2  
                                           l3387 13BE                                             l3379 13AA  
                                           l3299 19A2                                             l3459 15EA  
                                           l3619 2052                                             l3483 18F2  
                                           l3491 191E                                             l3467 1890  
                                           l3555 1A02                                             l3547 19E0  
                                           l3731 1DF4                                             l3397 13F2  
                                           l3389 13CC                                             l3741 1D6E  
                                           l3485 18F4                                             l3477 18B2  
                                           l3469 189E                                             l3581 1CE2  
                                           l3573 1CB0                                             l3557 1A16  
                                           l3549 19E8                                             l3733 1E06  
                                           l3725 1DCC                                             l3399 1402  
                                           l3591 2008                                             l3495 1E28  
                                           l3743 1D82                                             l3487 1904  
                                           l3479 18DE                                             l3575 1CC4  
                                           l3559 1A2A                                             l3567 1A52  
                                           l3735 1E16                                             l3727 1DDC  
                                           l3593 2010                                             l3497 1E2C  
                                           l3745 1D8A                                             l3489 1914  
                                           l3577 1CCC                                             l3585 1CF6  
                                           l3569 1A78                                             l3737 1E24  
                                           l3729 1DEC                                             l4481 1C42  
                                           l3595 201A                                             l3499 1E38  
                                           l3747 1DA2                                             l3579 1CE0  
                                           l3587 1D0C                                             l4491 1C84  
                                           l3597 201C                                             l4493 1C98  
                                           l4485 1C56                                             l3599 1F0E  
                                           l4495 1CA6                                             l4487 1C62  
                                           l4479 1C3C                                             l4489 1C74  
                                           STR_1 1011                                             STR_2 1011  
                                           u2100 1622                                             u2101 161E  
                                           u2040 1218                                             u2200 1FA4  
                                           u2041 1214                                             u2201 1FA0  
                                           u2130 16E6                                             u2114 1648  
                                           u2050 1238                                             u2210 1712  
                                           u2131 16E0                                             u2115 1644  
                                           u2051 1234                                             u2211 170E  
                                           u2124 1698                                             u2140 1BDA  
                                           u2220 172C                                             u2300 1828  
                                           u2125 1694                                             u2141 1BD6  
                                           u2221 1728                                             u2301 1824  
                                           _LATA 0F89                                             u2230 1752  
                                           u2310 183E                                             _LATB 0F8A  
                                           u2231 174E                                             u2311 183A  
                                           _LATC 0F8B                                             u2136 16E8  
                                           u2064 125E                                             u2160 1C22  
                                           u2400 1B36                                             u2240 1770  
                                           u2320 1862                                             _LATD 0F8C  
                                           u2065 125A                                             u2161 1C1E  
                                           u2401 1B32                                             u2241 176C  
                                           u2321 185E                                             _LATE 0F8D  
                                           u2090 1602                                             u2074 12AE  
                                           u2170 1C38                                             u2154 1C00  
                                           u2410 1B5C                                             u2250 178C  
                                           u2330 1A8C                                             u2091 15FE  
                                           u2075 12AA                                             u2171 1C34  
                                           u2155 1BFC                                             u2411 1B58  
                                           u2251 1788                                             u2331 1A88  
                                           u2084 1304                                             u2180 1E88  
                                           u2420 1B7C                                             u2500 19C2  
                                           u2260 17B2                                             u2340 1A9C  
                                           u3140 1DDC                                             u4020 1C52  
                                           u2085 1300                                             u2181 1E84  
                                           u2421 1B78                                             u2501 19BE  
                                           u2261 17AE                                             u2341 1A98  
                                           u3141 1DD8                                             u4021 1C4E  
                                           u2190 1EB6                                             u2430 1B96  
                                           u2270 17D6                                             u2350 1AC2  
                                           u2510 1042                                             u3150 1DEC  
                                           u2191 1EB2                                             u2431 1B92  
                                           u2271 17D2                                             u2351 1ABE  
                                           u2511 103E                                             u3151 1DE8  
                                           u2440 1BB4                                             u2280 17F0  
                                           u2360 1AF4                                             u2600 11B2  
                                           u2520 1084                                             u3160 1E16  
                                           u2441 1BB0                                             u2281 17EC  
                                           u2361 1AF0                                             u2601 11AE  
                                           u2521 1080                                             u3161 1E12  
                                           u2610 137E                                             u2450 1936  
                                           u2290 180A                                             u2370 1FE2  
                                           u2530 10A2                                             u3170 1D82  
                                           u4107 1422                                             u2611 137A  
                                           u2451 1932                                             u2291 1806  
                                           u2371 1FDE                                             u2531 109E  
                                           u3171 1D7E                                             u2380 1ED8  
                                           u2620 13A0                                             u2460 195C  
                                           u2700 1506                                             u2540 10D8  
                                           u3180 1DC4                                             u2381 1ED4  
                                           u4117 1438                                             u2621 139C  
                                           u2461 1958                                             u2701 1502  
                                           u2541 10D2                                             u3181 1DC0  
                                           u4037 1C68                                             u2390 1EF8  
                                           u2630 13BA                                             u2710 1528  
                                           u2550 10DA                                             u2391 1EF4  
                                           u4127 1EA0                                             u2631 13B6  
                                           u2711 1524                                             u4047 1C9E  
                                           u2640 13DC                                             u2480 199C  
                                           u2720 153E                                             u2560 113E  
                                           u2800 1E6E                                             u2641 13D8  
                                           u2481 1998                                             u4057 1544  
                                           u2721 153A                                             u2561 113A  
                                           u2801 1E6A                                             u2650 13F2  
                                           u2490 19B2                                             u2474 197A  
                                           u2730 1596                                             u2570 114E  
                                           u2651 13EE                                             u2491 19AE  
                                           u2475 1976                                             u2731 1592  
                                           u4067 155E                                             u2571 114A  
                                           u2660 1402                                             u2580 115E  
                                           u2740 1888                                             u2661 13FE  
                                           u4077 1574                                             u2581 115A  
                                           u2741 1884                                             u2670 145A  
                                           u2590 116E                                             u2750 18AE  
                                           u2910 19E0                                             u2671 1456  
                                           u4087 1FBC                                             u2591 116A  
                                           u2751 18AA                                             u2911 19DC  
                                           u2680 14CA                                             u2920 19FA  
                                           u4097 1408                                             u2681 14C6  
                                           u2921 19F6                                             u2690 14EC  
                                           u2770 18EE                                             u2930 1CC4  
                                           u2691 14E8                                             u2771 18EA  
                                           u2931 1CC0                                             u2780 1904  
                                           u2764 18CC                                             u2940 1CF2  
                                           u2781 1900                                             u2765 18C8  
                                           u2941 1CEE                                             u2790 1914  
                                           u2950 1D0C                                             u2791 1910  
                                           u2951 1D08                                             u2960 2036  
                                           u2961 2032                                             u2970 2052  
                                           u2971 204E                    ??_lcd_4bit_send_enable_signal 000A  
                                           abs@a 0007                                             _led1 005F  
                                           _led2 005E                                             _dbuf 00A1  
                                           _seg1 0096                                             _main 1C3C  
                                           _prec 0037                                             _nout 0035  
                                           fsr1h 0FE2                                             fsr2h 0FDA  
                                           indf2 0FDF                                             fsr1l 0FE1  
                                           fsr2l 0FD9                                             prodl 0FF3  
                                           start 0000                 gpio_pin_initialize@_pin_config_t 0008  
                  __end_of_lcd_8bit_send_command 19D0                                     ___param_bank 0000  
                          _lcd_4bit_send_command 1B26                                            ??_abs 0009  
                           _gpio_pin_write_logic 1204                                            ?_main 0001  
                                __end_of___awdiv 17C4                                  __end_of___awmod 1874  
                                ___awdiv@divisor 0003                                  ___awdiv@counter 0005  
                            relay_turn_off@F3160 0044                                     vfpfcnvrt@cnt 0010  
                                   vfpfcnvrt@fmt 000C                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96  btn_high_magic_button@btn_high_last_valid_status 004D  
                       ?_convert_short_to_string 002F                            lcd_send_4bits@counter 000E  
                                          _lcd_1 0090                                            _lcd_2 007E  
                                          _flags 003F                                            _count 0040  
                                          _funcs 00C1                                            _fputc 1A7C  
                                          _hours 0051                                            _value 004E  
                       ?_lcd_8bit_send_char_data 000B                                            _width 00CB  
                                          _putch 207C                                            tablat 0FF5  
                                          status 0FD8                                  __end_of_sprintf 1F52  
                 ?_gpio_pin_direction_initialize 0001                                  __initialization 1D10  
                                   __end_of_main 1CB0                            ?_gpio_pin_write_logic 0001  
                         lcd_8bit_set_cursor@col 0013                           lcd_8bit_set_cursor@lcd 0011  
                         lcd_8bit_set_cursor@ret 0014                           lcd_8bit_set_cursor@row 0012  
                 lcd_8bit_send_char_data@counter 000F                                    _lat_registers 0074  
                                         ??_main 0033                                    __activetblptr 0003  
                               led_turn_on@F3165 0049                          ecu_layer_initialize@ret 0016  
                                         ?_fputc 0001                                 ___awdiv@dividend 0001  
                                         ?_putch 0001                                    vfpfcnvrt@done 000F  
                         ?_lcd_4bit_send_command 000F                                     vfprintf@cfmt 001B  
                                      ??___awdiv 0005                                        ??___awmod 0005  
                           _lcd_8bit_send_string 1CB0                                           _memset 2008  
                                         clear_0 1D56                                           clear_1 1D62  
                                         _relay1 005D                                           _relay2 005C  
                               ___awdiv@quotient 0007                                  ___awmod@divisor 0003  
                                         isa$std 0001                                           _number 0041  
                                ___awmod@counter 0005                      lcd_8bit_send_string_pos@col 0017  
                    lcd_8bit_send_string_pos@lcd 0015                      lcd_8bit_send_string_pos@ret 0019  
                    lcd_8bit_send_string_pos@row 0016                      lcd_8bit_send_string_pos@str 0018  
                                         fputc@c 0001                                     __pdataCOMRAM 004F  
                                   __mediumconst 0000                                           tblptrh 0FF7  
                                         tblptrl 0FF6                                           tblptru 0FF8  
                                         putch@c 0001                                 __end_of_vfprintf 1E78  
                                      ??_sprintf 0020                                       __accesstop 0060  
                        __end_of__initialization 1D68                                    ___rparam_used 0001  
                               ??_lcd_send_4bits 000B                           ??_gpio_pin_write_logic 0003  
                                 __pcstackCOMRAM 0001                                 _application_init 2072  
                                   __pidataBANK0 1F52                                    __end_of_fputc 1B26  
                          ?_lcd_8bit_send_string 0011                                    __end_of_putch 207E  
                       lcd_4bit_send_command@lcd 000F                         lcd_4bit_send_command@ret 0011  
                   convert_short_to_string@value 002F                                          ??_fputc 0004  
                                     _dc_motor_1 0054                                       _dc_motor_2 0052  
                                        ??_putch 0001                                       __pbssBANK0 00A1  
                         lcd_8bit_initialize@lcd 0011                           lcd_8bit_initialize@ret 0014  
                              led_turn_off@F3170 0048              lcd_4bit_initialize@lcd_data_counter 0014  
            lcd_8bit_initialize@lcd_data_counter 0013                                          ?_memset 0001  
                                led_toggle@F3175 0047                                 _lcd_counter_txt2 00CD  
            __end_of_lcd_8bit_send_enable_signal 1FD4                      _lcd_8bit_send_enable_signal 1F94  
                                     _btn_values 1001                   lcd_8bit_send_enable_signal@lcd 0009  
                 lcd_8bit_send_enable_signal@ret 000A                                   _tris_registers 006A  
                  ??_lcd_8bit_send_enable_signal 000A                                          __Hparam 0000  
                                        __Lparam 0000                           ??_lcd_8bit_send_string 0013  
                            _gpio_pin_initialize 1EC8                            _lcd_8bit_send_command 1922  
                                        ___awdiv 1700                                          ___awmod 17C4  
                                      ?_vfprintf 0018                                     __psmallconst 1000  
                                        __pcinit 1D10                             led_intitialize@F3160 004A  
                                        __ramtop 1000                         _lcd_8bit_send_string_pos 1DCC  
                                        __ptext0 1C3C                                          __ptext1 1DCC  
                                        __ptext2 19D0                                          __ptext3 1CB0  
                                        __ptext4 1874                                          __ptext5 1D6E  
                                        __ptext6 1F0E                                          __ptext7 1E28  
                                        __ptext8 1016                                          __ptext9 1A7C  
                                        _btn_low 009E                  ??_gpio_pin_direction_initialize 0002  
                                        _counter 0042                                          _keypad1 0088  
                               ___awmod@dividend 0001                                          _seg_val 0043  
                                        _minutes 0050                                          _seconds 004F  
                                        _number2 0039                             ?_gpio_pin_initialize 0008  
                                        _sprintf 1F0E                                          main@ret 0034  
                           end_of_initialization 1D68                                lcd_send_4bits@lcd 0009  
                              lcd_send_4bits@ret 000D                                          fputc@fp 0003  
                                        memset@c 0002                                          memset@n 0004  
                                        memset@p 0006                          ??_lcd_4bit_send_command 0011  
              gpio_pin_write_logic@_pin_config_t 0001                                __end_of_vfpfcnvrt 1204  
                                        postdec1 0FE5                                          postdec2 0FDD  
                                        postinc0 0FEE                                          postinc1 0FE6  
                                        postinc2 0FDE                                 vfpfcnvrt@convarg 0013  
                                     ??_vfprintf 001B                              _lcd_4bit_initialize 136A  
                          ??_gpio_pin_initialize 0009                         __end_of_application_init 207C  
                           ?_lcd_4bit_initialize 0012                               relay_turn_on@F3155 0045  
                         ?_lcd_8bit_send_command 000B                                      vfpfcnvrt@ap 000D  
                                    vfpfcnvrt@cp 0012                                      vfpfcnvrt@fp 000B  
                                  __pidataCOMRAM 2060                                 turn_on_leds@_POS 004B  
                                 __end_of_memset 2038                   button_read_state@btn_low_valid 003B  
                            start_initialization 1D10                     ?_lcd_4bit_send_enable_signal 0009  
                            _lcd_8bit_initialize 14B6                                      __end_of_abs 2008  
          __end_of_gpio_pin_direction_initialize 1700                    _gpio_pin_direction_initialize 15EE  
                          ??_lcd_4bit_initialize 0013                          _convert_short_to_string 1D6E  
                           ?_lcd_8bit_initialize 0011                          _lcd_8bit_send_char_data 1874  
                                    vfprintf@fmt 0019                              application_init@ret 0017  
                                    __pdataBANK0 0060                                         ??_memset 0006  
                   __end_of_ecu_layer_initialize 2060                              _lcd_8bit_set_cursor 19D0  
                                     memset@dest 0001                     lcd_4bit_send_command@command 0010  
                       lcd_8bit_send_command@lcd 000B                         lcd_8bit_send_command@ret 0010  
                                    __pbssCOMRAM 0035                  btn_high_magic_button@led_status 004C  
                           ?_lcd_8bit_set_cursor 0011                            ??_lcd_8bit_initialize 0012  
                     ??_lcd_8bit_send_string_pos 0019                      lcd_8bit_send_char_data@data 000C  
                                       ?___awdiv 0001                                         ?___awmod 0001  
                     convert_short_to_string@ret 0032                       convert_short_to_string@str 0031  
                                _lcd_counter_txt 00C7                        gpio_pin_write_logic@logic 0002  
                                    __smallconst 1000                                         ?_sprintf 001C  
                      ??_convert_short_to_string 0032                            ??_lcd_8bit_set_cursor 0014  
                     lcd_send_4bits@data_command 000A                        ??_lcd_8bit_send_char_data 000D  
                  __end_of_lcd_4bit_send_command 1BC6                 gpio_pin_direction_initialize@ret 0007  
     gpio_pin_direction_initialize@_pin_config_t 0001                                        _vfpfcnvrt 1016  
                         gpio_pin_initialize@ret 000A                                      _seg1_enable 005B  
                                    _seg2_enable 005A                                      _seg3_enable 0059  
                                     vfpfcnvrt@c 0017                                      _seg4_enable 0058  
                        gpio_pin_write_logic@ret 0008                                ?_application_init 0001  
                                    _seg5_enable 0057                                        copy_data0 1D24  
                                      copy_data1 1D44                                      _seg6_enable 0056  
                             ??_application_init 0017                             _ecu_layer_initialize 2038  
                        ??_lcd_8bit_send_command 000D                                         __Hrparam 0000  
                                     vfprintf@ap 001A                                         __Lrparam 0000  
                                     vfprintf@fp 0018                  __end_of_convert_short_to_string 1DCC  
                                     ?_vfpfcnvrt 000B                  __end_of_lcd_8bit_send_char_data 1922  
                    __end_of_gpio_pin_initialize 1F0E                               __end_of_btn_values 1011  
                                     sprintf@fmt 001D                                       sprintf@ret 0020  
                     lcd_8bit_send_char_data@lcd 000B                       lcd_8bit_send_char_data@ret 0010  
                                       __ptext10 207C                                         __ptext11 1FD4  
                                       __ptext20 136A                                         __ptext12 17C4  
                                       __ptext21 1B26                                         __ptext13 1700  
                                       __ptext22 1BC6                                         __ptext14 2008  
                                       __ptext23 1E78                                         __ptext15 2072  
                                       __ptext24 1204                                         __ptext16 2038  
                                       __ptext25 1EC8                                         __ptext17 14B6  
                                       __ptext26 15EE                                         __ptext18 1922  
                                       __ptext19 1F94                                         _btn_high 009B  
                          ?_ecu_layer_initialize 0001                 __end_of_lcd_8bit_send_string_pos 1E28  
                                       isa$xinst 0000                                         _vfprintf 1E28  
                                 _lcd_send_4bits 1BC6                      __end_of_lcd_4bit_initialize 14B6  
                   __end_of_gpio_pin_write_logic 136A                     ?_lcd_8bit_send_enable_signal 0009  
                                      sprintf@ap 0022                   lcd_4bit_send_enable_signal@lcd 0009  
                 lcd_4bit_send_enable_signal@ret 000A                           __end_of_lcd_send_4bits 1C3C  
                                    ??_vfpfcnvrt 000E                                         sprintf@f 0023  
                                       sprintf@s 001C                                   _port_registers 0060  
                        lcd_8bit_send_string@lcd 0011                          lcd_8bit_send_string@ret 0013  
                        lcd_8bit_send_string@str 0012                           ??_ecu_layer_initialize 0016  
                    __end_of_lcd_8bit_initialize 15EE                     lcd_8bit_send_command@command 000C  
                   lcd_8bit_send_command@counter 000F                           lcd_4bit_initialize@lcd 0012  
                         lcd_4bit_initialize@ret 0015  
