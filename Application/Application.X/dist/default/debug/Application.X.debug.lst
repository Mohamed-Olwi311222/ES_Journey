

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 05 09:28:53 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    41   000000                     
    42                           ; Generated 12/10/2023 GMT
    43                           ; 
    44                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution. Publication is not required when
    58                           ;        this file is used in an embedded application.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC18F46K20 Definitions
    74                           ; 
    75                           ; SFR Addresses
    76   000000                     
    77                           	psect	idataCOMRAM
    78   0020D0                     __pidataCOMRAM:
    79                           	callstack 0
    80                           
    81                           ;initializer for _seconds
    82   0020D0  2D                 	db	45
    83                           
    84                           ;initializer for _minutes
    85   0020D1  3B                 	db	59
    86                           
    87                           ;initializer for _hours
    88   0020D2  17                 	db	23
    89                           
    90                           ;initializer for _lcd_1
    91   0020D3  02                 	db	2
    92   0020D4  0A                 	db	10
    93   0020D5  12                 	db	18
    94   0020D6  1A                 	db	26
    95   0020D7  22                 	db	34
    96   0020D8  2A                 	db	42
    97                           
    98                           ;initializer for _seg1
    99   0020D9  02                 	db	2
   100   0020DA  0A                 	db	10
   101   0020DB  12                 	db	18
   102   0020DC  1A                 	db	26
   103   0020DD  01                 	db	1
   104                           
   105                           ;initializer for _btn_high
   106   0020DE  52                 	db	82
   107   0020DF  00                 	db	0
   108   0020E0  00                 	db	0
   109                           
   110                           ;initializer for _btn_low
   111   0020E1  C3                 	db	195
   112   0020E2  00                 	db	0
   113   0020E3  01                 	db	1
   114                           
   115                           ;initializer for _dc_motor_2
   116   0020E4  12                 	db	18
   117   0020E5  1A                 	db	26
   118                           
   119                           ;initializer for _dc_motor_1
   120   0020E6  02                 	db	2
   121   0020E7  0A                 	db	10
   122                           
   123                           ;initializer for _seg6_enable
   124   0020E8  2B                 	db	43
   125                           
   126                           ;initializer for _seg5_enable
   127   0020E9  23                 	db	35
   128                           
   129                           ;initializer for _seg4_enable
   130   0020EA  1B                 	db	27
   131                           
   132                           ;initializer for _seg3_enable
   133   0020EB  13                 	db	19
   134                           
   135                           ;initializer for _seg2_enable
   136   0020EC  0B                 	db	11
   137                           
   138                           ;initializer for _seg1_enable
   139   0020ED  03                 	db	3
   140                           
   141                           ;initializer for _relay2
   142   0020EE  12                 	db	18
   143                           
   144                           ;initializer for _relay1
   145   0020EF  02                 	db	2
   146                           
   147                           ;initializer for _led2
   148   0020F0  12                 	db	18
   149                           
   150                           ;initializer for _led1
   151   0020F1  02                 	db	2
   152                           
   153                           	psect	idataBANK0
   154   001DC2                     __pidataBANK0:
   155                           	callstack 0
   156                           
   157                           ;initializer for _port_registers
   158   001DC2  80                 	db	128
   159   001DC3  0F                 	db	15
   160   001DC4  81                 	db	129
   161   001DC5  0F                 	db	15
   162   001DC6  82                 	db	130
   163   001DC7  0F                 	db	15
   164   001DC8  83                 	db	131
   165   001DC9  0F                 	db	15
   166   001DCA  84                 	db	132
   167   001DCB  0F                 	db	15
   168                           
   169                           ;initializer for _tris_registers
   170   001DCC  92                 	db	146
   171   001DCD  0F                 	db	15
   172   001DCE  93                 	db	147
   173   001DCF  0F                 	db	15
   174   001DD0  94                 	db	148
   175   001DD1  0F                 	db	15
   176   001DD2  95                 	db	149
   177   001DD3  0F                 	db	15
   178   001DD4  96                 	db	150
   179   001DD5  0F                 	db	15
   180                           
   181                           ;initializer for _lat_registers
   182   001DD6  89                 	db	137
   183   001DD7  0F                 	db	15
   184   001DD8  8A                 	db	138
   185   001DD9  0F                 	db	15
   186   001DDA  8B                 	db	139
   187   001DDB  0F                 	db	15
   188   001DDC  8C                 	db	140
   189   001DDD  0F                 	db	15
   190   001DDE  8D                 	db	141
   191   001DDF  0F                 	db	15
   192                           
   193                           ;initializer for _lcd_2
   194   001DE0  32                 	db	50
   195   001DE1  3A                 	db	58
   196   001DE2  03                 	db	3
   197   001DE3  0B                 	db	11
   198   001DE4  13                 	db	19
   199   001DE5  1B                 	db	27
   200   001DE6  23                 	db	35
   201   001DE7  2B                 	db	43
   202   001DE8  33                 	db	51
   203   001DE9  3B                 	db	59
   204                           
   205                           ;initializer for _custom6
   206   001DEA  0E                 	db	14
   207   001DEB  0E                 	db	14
   208   001DEC  1F                 	db	31
   209   001DED  1F                 	db	31
   210   001DEE  1F                 	db	31
   211   001DEF  1F                 	db	31
   212   001DF0  1F                 	db	31
   213   001DF1  00                 	db	0
   214                           
   215                           ;initializer for _custom5
   216   001DF2  0E                 	db	14
   217   001DF3  0A                 	db	10
   218   001DF4  1F                 	db	31
   219   001DF5  1F                 	db	31
   220   001DF6  1F                 	db	31
   221   001DF7  1F                 	db	31
   222   001DF8  1F                 	db	31
   223   001DF9  00                 	db	0
   224                           
   225                           ;initializer for _custom4
   226   001DFA  0E                 	db	14
   227   001DFB  0A                 	db	10
   228   001DFC  1B                 	db	27
   229   001DFD  1F                 	db	31
   230   001DFE  1F                 	db	31
   231   001DFF  1F                 	db	31
   232   001E00  1F                 	db	31
   233   001E01  00                 	db	0
   234                           
   235                           ;initializer for _custom3
   236   001E02  0E                 	db	14
   237   001E03  0A                 	db	10
   238   001E04  1B                 	db	27
   239   001E05  11                 	db	17
   240   001E06  1F                 	db	31
   241   001E07  1F                 	db	31
   242   001E08  1F                 	db	31
   243   001E09  00                 	db	0
   244                           
   245                           ;initializer for _custom2
   246   001E0A  0E                 	db	14
   247   001E0B  0A                 	db	10
   248   001E0C  1B                 	db	27
   249   001E0D  11                 	db	17
   250   001E0E  11                 	db	17
   251   001E0F  1F                 	db	31
   252   001E10  1F                 	db	31
   253   001E11  00                 	db	0
   254                           
   255                           ;initializer for _custom1
   256   001E12  0E                 	db	14
   257   001E13  0A                 	db	10
   258   001E14  1B                 	db	27
   259   001E15  11                 	db	17
   260   001E16  11                 	db	17
   261   001E17  11                 	db	17
   262   001E18  1F                 	db	31
   263   001E19  00                 	db	0
   264                           
   265                           ;initializer for _keypad1
   266   001E1A  82                 	db	130
   267   001E1B  8A                 	db	138
   268   001E1C  92                 	db	146
   269   001E1D  9A                 	db	154
   270   001E1E  62                 	db	98
   271   001E1F  6A                 	db	106
   272   001E20  72                 	db	114
   273   001E21  7A                 	db	122
   274                           
   275                           	psect	smallconst
   276   001000                     __psmallconst:
   277                           	callstack 0
   278   001000  00                 	db	0
   279   001001                     _btn_values:
   280                           	callstack 0
   281   001001  37                 	db	55
   282   001002  38                 	db	56
   283   001003  39                 	db	57
   284   001004  2F                 	db	47
   285   001005  34                 	db	52
   286   001006  35                 	db	53
   287   001007  36                 	db	54
   288   001008  2A                 	db	42
   289   001009  31                 	db	49
   290   00100A  32                 	db	50
   291   00100B  33                 	db	51
   292   00100C  2D                 	db	45
   293   00100D  23                 	db	35
   294   00100E  30                 	db	48
   295   00100F  3D                 	db	61
   296   001010  2B                 	db	43
   297   001011                     __end_of_btn_values:
   298                           	callstack 0
   299   000000                     _PORTA	set	3968
   300   000000                     _LATA	set	3977
   301   000000                     _TRISA	set	3986
   302   000000                     _LATE	set	3981
   303   000000                     _LATD	set	3980
   304   000000                     _LATC	set	3979
   305   000000                     _LATB	set	3978
   306   000000                     _TRISE	set	3990
   307   000000                     _TRISD	set	3989
   308   000000                     _TRISC	set	3988
   309   000000                     _TRISB	set	3987
   310   000000                     _PORTE	set	3972
   311   000000                     _PORTD	set	3971
   312   000000                     _PORTC	set	3970
   313   000000                     _PORTB	set	3969
   314   001011                     STR_4:
   315   001011  57                 	db	87	;'W'
   316   001012  69                 	db	105	;'i'
   317   001013  6C                 	db	108	;'l'
   318   001014  6C                 	db	108	;'l'
   319   001015  20                 	db	32
   320   001016  43                 	db	67	;'C'
   321   001017  6F                 	db	111	;'o'
   322   001018  6E                 	db	110	;'n'
   323   001019  71                 	db	113	;'q'
   324   00101A  75                 	db	117	;'u'
   325   00101B  65                 	db	101	;'e'
   326   00101C  72                 	db	114	;'r'
   327   00101D  00                 	db	0
   328   00101E                     STR_3:
   329   00101E  20                 	db	32
   330   00101F  74                 	db	116	;'t'
   331   001020  68                 	db	104	;'h'
   332   001021  65                 	db	101	;'e'
   333   001022  20                 	db	32
   334   001023  57                 	db	87	;'W'
   335   001024  6F                 	db	111	;'o'
   336   001025  72                 	db	114	;'r'
   337   001026  6C                 	db	108	;'l'
   338   001027  64                 	db	100	;'d'
   339   001028  00                 	db	0
   340   001029                     STR_1:
   341   001029  25                 	db	37
   342   00102A  75                 	db	117	;'u'
   343   00102B  00                 	db	0
   344   00102C  00                 	db	0	; dummy byte at the end
   345   000000                     
   346                           ; #config settings
   347                           
   348                           	psect	cinit
   349   001E22                     __pcinit:
   350                           	callstack 0
   351   001E22                     start_initialization:
   352                           	callstack 0
   353   001E22                     __initialization:
   354                           	callstack 0
   355                           
   356                           ; Initialize objects allocated to BANK0 (96 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358   001E22  0EC2               	movlw	low __pidataBANK0
   359   001E24  6EF6               	movwf	tblptrl,c
   360   001E26  0E1D               	movlw	high __pidataBANK0
   361   001E28  6EF7               	movwf	tblptrh,c
   362   001E2A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363   001E2C  6EF8               	movwf	tblptru,c
   364   001E2E  EE00  F060         	lfsr	0,__pdataBANK0
   365   001E32  EE10 F060          	lfsr	1,96
   366   001E36                     copy_data0:
   367   001E36  0009               	tblrd		*+
   368   001E38  CFF5 FFEE          	movff	tablat,postinc0
   369   001E3C  50E5               	movf	postdec1,w,c
   370   001E3E  50E1               	movf	fsr1l,w,c
   371   001E40  E1FA               	bnz	copy_data0
   372                           
   373                           ; Initialize objects allocated to COMRAM (34 bytes)
   374                           ; load TBLPTR registers with __pidataCOMRAM
   375   001E42  0ED0               	movlw	low __pidataCOMRAM
   376   001E44  6EF6               	movwf	tblptrl,c
   377   001E46  0E20               	movlw	high __pidataCOMRAM
   378   001E48  6EF7               	movwf	tblptrh,c
   379   001E4A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   380   001E4C  6EF8               	movwf	tblptru,c
   381   001E4E  EE00  F025         	lfsr	0,__pdataCOMRAM
   382   001E52  EE10 F022          	lfsr	1,34
   383   001E56                     copy_data1:
   384   001E56  0009               	tblrd		*+
   385   001E58  CFF5 FFEE          	movff	tablat,postinc0
   386   001E5C  50E5               	movf	postdec1,w,c
   387   001E5E  50E1               	movf	fsr1l,w,c
   388   001E60  E1FA               	bnz	copy_data1
   389                           
   390                           ; Clear objects allocated to BANK0 (6 bytes)
   391   001E62  0100               	movlb	0
   392   001E64  6BC5               	clrf	(__pbssBANK0+5)& (0+255),b
   393   001E66  6BC4               	clrf	(__pbssBANK0+4)& (0+255),b
   394   001E68  6BC3               	clrf	(__pbssBANK0+3)& (0+255),b
   395   001E6A  6BC2               	clrf	(__pbssBANK0+2)& (0+255),b
   396   001E6C  6BC1               	clrf	(__pbssBANK0+1)& (0+255),b
   397   001E6E  6BC0               	clrf	__pbssBANK0& (0+255),b
   398                           
   399                           ; Clear objects allocated to COMRAM (20 bytes)
   400   001E70  EE00  F047         	lfsr	0,__pbssCOMRAM
   401   001E74  0E14               	movlw	20
   402   001E76                     clear_0:
   403   001E76  6AEE               	clrf	postinc0,c
   404   001E78  06E8               	decf	wreg,f,c
   405   001E7A  E1FD               	bnz	clear_0
   406   001E7C                     end_of_initialization:
   407                           	callstack 0
   408   001E7C                     __end_of__initialization:
   409                           	callstack 0
   410   001E7C  0100               	movlb	0
   411   001E7E  EF17  F008         	goto	_main	;jump to C main() function
   412                           
   413                           	psect	bssCOMRAM
   414   000047                     __pbssCOMRAM:
   415                           	callstack 0
   416   000047                     _errno:
   417                           	callstack 0
   418   000047                     	ds	2
   419   000049                     button_read_state@btn_low_valid:
   420                           	callstack 0
   421   000049                     	ds	2
   422   00004B                     button_read_state@btn_high_valid:
   423                           	callstack 0
   424   00004B                     	ds	2
   425   00004D                     	ds	1
   426   00004E                     _counter:
   427                           	callstack 0
   428   00004E                     	ds	1
   429   00004F                     _seg_val:
   430                           	callstack 0
   431   00004F                     	ds	1
   432   000050                     relay_turn_off@F3158:
   433                           	callstack 0
   434   000050                     	ds	1
   435   000051                     relay_turn_on@F3153:
   436                           	callstack 0
   437   000051                     	ds	1
   438   000052                     relay_initialize@F3148:
   439                           	callstack 0
   440   000052                     	ds	1
   441   000053                     led_toggle@F3173:
   442                           	callstack 0
   443   000053                     	ds	1
   444   000054                     led_turn_off@F3168:
   445                           	callstack 0
   446   000054                     	ds	1
   447   000055                     led_turn_on@F3163:
   448                           	callstack 0
   449   000055                     	ds	1
   450   000056                     led_intitialize@F3158:
   451                           	callstack 0
   452   000056                     	ds	1
   453   000057                     turn_on_leds@_POS:
   454                           	callstack 0
   455   000057                     	ds	1
   456   000058                     btn_high_magic_button@led_status:
   457                           	callstack 0
   458   000058                     	ds	1
   459   000059                     btn_high_magic_button@btn_high_last_valid_status:
   460                           	callstack 0
   461   000059                     	ds	1
   462   00005A                     _value:
   463                           	callstack 0
   464   00005A                     	ds	1
   465                           
   466                           	psect	dataCOMRAM
   467   000025                     __pdataCOMRAM:
   468                           	callstack 0
   469   000025                     _seconds:
   470                           	callstack 0
   471   000025                     	ds	1
   472   000026                     _minutes:
   473                           	callstack 0
   474   000026                     	ds	1
   475   000027                     _hours:
   476                           	callstack 0
   477   000027                     	ds	1
   478   000028                     _lcd_1:
   479                           	callstack 0
   480   000028                     	ds	6
   481   00002E                     _seg1:
   482                           	callstack 0
   483   00002E                     	ds	5
   484   000033                     _btn_high:
   485                           	callstack 0
   486   000033                     	ds	3
   487   000036                     _btn_low:
   488                           	callstack 0
   489   000036                     	ds	3
   490   000039                     _dc_motor_2:
   491                           	callstack 0
   492   000039                     	ds	2
   493   00003B                     _dc_motor_1:
   494                           	callstack 0
   495   00003B                     	ds	2
   496   00003D                     _seg6_enable:
   497                           	callstack 0
   498   00003D                     	ds	1
   499   00003E                     _seg5_enable:
   500                           	callstack 0
   501   00003E                     	ds	1
   502   00003F                     _seg4_enable:
   503                           	callstack 0
   504   00003F                     	ds	1
   505   000040                     _seg3_enable:
   506                           	callstack 0
   507   000040                     	ds	1
   508   000041                     _seg2_enable:
   509                           	callstack 0
   510   000041                     	ds	1
   511   000042                     _seg1_enable:
   512                           	callstack 0
   513   000042                     	ds	1
   514   000043                     _relay2:
   515                           	callstack 0
   516   000043                     	ds	1
   517   000044                     _relay1:
   518                           	callstack 0
   519   000044                     	ds	1
   520   000045                     _led2:
   521                           	callstack 0
   522   000045                     	ds	1
   523   000046                     _led1:
   524                           	callstack 0
   525   000046                     	ds	1
   526                           
   527                           	psect	bssBANK0
   528   0000C0                     __pbssBANK0:
   529                           	callstack 0
   530   0000C0                     	ds	6
   531                           
   532                           	psect	dataBANK0
   533   000060                     __pdataBANK0:
   534                           	callstack 0
   535   000060                     _port_registers:
   536                           	callstack 0
   537   000060                     	ds	10
   538   00006A                     _tris_registers:
   539                           	callstack 0
   540   00006A                     	ds	10
   541   000074                     _lat_registers:
   542                           	callstack 0
   543   000074                     	ds	10
   544   00007E                     _lcd_2:
   545                           	callstack 0
   546   00007E                     	ds	10
   547   000088                     _custom6:
   548                           	callstack 0
   549   000088                     	ds	8
   550   000090                     _custom5:
   551                           	callstack 0
   552   000090                     	ds	8
   553   000098                     _custom4:
   554                           	callstack 0
   555   000098                     	ds	8
   556   0000A0                     _custom3:
   557                           	callstack 0
   558   0000A0                     	ds	8
   559   0000A8                     _custom2:
   560                           	callstack 0
   561   0000A8                     	ds	8
   562   0000B0                     _custom1:
   563                           	callstack 0
   564   0000B0                     	ds	8
   565   0000B8                     _keypad1:
   566                           	callstack 0
   567   0000B8                     	ds	8
   568                           
   569                           	psect	cstackCOMRAM
   570   000001                     __pcstackCOMRAM:
   571                           	callstack 0
   572   000001                     gpio_pin_direction_initialize@_pin_config_t:
   573                           	callstack 0
   574   000001                     gpio_pin_write_logic@_pin_config_t:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0x0
   578   000001                     	ds	1
   579   000002                     ??_gpio_pin_direction_initialize:
   580   000002                     gpio_pin_write_logic@logic:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1
   584   000002                     	ds	1
   585   000003                     ??_gpio_pin_write_logic:
   586                           
   587                           ; 1 bytes @ 0x2
   588   000003                     	ds	4
   589   000007                     gpio_pin_direction_initialize@ret:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x6
   593   000007                     	ds	1
   594   000008                     gpio_pin_initialize@_pin_config_t:
   595                           	callstack 0
   596   000008                     gpio_pin_write_logic@ret:
   597                           	callstack 0
   598                           
   599                           ; 1 bytes @ 0x7
   600   000008                     	ds	1
   601   000009                     ??_gpio_pin_initialize:
   602   000009                     lcd_send_4bits@lcd:
   603                           	callstack 0
   604   000009                     lcd_4bit_send_enable_signal@lcd:
   605                           	callstack 0
   606   000009                     lcd_8bit_send_enable_signal@lcd:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x8
   610   000009                     	ds	1
   611   00000A                     lcd_send_4bits@data_command:
   612                           	callstack 0
   613   00000A                     lcd_4bit_send_enable_signal@ret:
   614                           	callstack 0
   615   00000A                     lcd_8bit_send_enable_signal@ret:
   616                           	callstack 0
   617   00000A                     gpio_pin_initialize@ret:
   618                           	callstack 0
   619                           
   620                           ; 1 bytes @ 0x9
   621   00000A                     	ds	1
   622   00000B                     ??_lcd_send_4bits:
   623   00000B                     lcd_8bit_send_command@lcd:
   624                           	callstack 0
   625   00000B                     lcd_8bit_send_char_data@lcd:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xA
   629   00000B                     	ds	1
   630   00000C                     lcd_8bit_send_command@command:
   631                           	callstack 0
   632   00000C                     lcd_8bit_send_char_data@data:
   633                           	callstack 0
   634                           
   635                           ; 1 bytes @ 0xB
   636   00000C                     	ds	1
   637   00000D                     ??_lcd_8bit_send_command:
   638   00000D                     ??_lcd_8bit_send_char_data:
   639   00000D                     lcd_send_4bits@ret:
   640                           	callstack 0
   641                           
   642                           ; 1 bytes @ 0xC
   643   00000D                     	ds	1
   644   00000E                     lcd_send_4bits@counter:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0xD
   648   00000E                     	ds	1
   649   00000F                     lcd_4bit_send_command@lcd:
   650                           	callstack 0
   651   00000F                     lcd_4bit_send_char_data@lcd:
   652                           	callstack 0
   653   00000F                     lcd_8bit_send_command@counter:
   654                           	callstack 0
   655   00000F                     lcd_8bit_send_char_data@counter:
   656                           	callstack 0
   657                           
   658                           ; 1 bytes @ 0xE
   659   00000F                     	ds	1
   660   000010                     lcd_4bit_send_command@command:
   661                           	callstack 0
   662   000010                     lcd_4bit_send_char_data@data:
   663                           	callstack 0
   664   000010                     lcd_8bit_send_command@ret:
   665                           	callstack 0
   666   000010                     lcd_8bit_send_char_data@ret:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0xF
   670   000010                     	ds	1
   671   000011                     lcd_4bit_send_command@ret:
   672                           	callstack 0
   673   000011                     lcd_4bit_send_char_data@ret:
   674                           	callstack 0
   675   000011                     lcd_8bit_initialize@lcd:
   676                           	callstack 0
   677   000011                     lcd_8bit_send_string@lcd:
   678                           	callstack 0
   679   000011                     lcd_8bit_set_cursor@lcd:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x10
   683   000011                     	ds	1
   684   000012                     ??_lcd_8bit_initialize:
   685   000012                     lcd_4bit_initialize@lcd:
   686                           	callstack 0
   687   000012                     lcd_4bit_send_string@lcd:
   688                           	callstack 0
   689   000012                     lcd_8bit_send_string@str:
   690                           	callstack 0
   691   000012                     lcd_4bit_set_cursor@lcd:
   692                           	callstack 0
   693   000012                     lcd_8bit_set_cursor@row:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x11
   697   000012                     	ds	1
   698   000013                     ??_lcd_4bit_initialize:
   699   000013                     lcd_4bit_send_string@str:
   700                           	callstack 0
   701   000013                     lcd_8bit_initialize@lcd_data_counter:
   702                           	callstack 0
   703   000013                     lcd_8bit_send_string@ret:
   704                           	callstack 0
   705   000013                     lcd_4bit_set_cursor@row:
   706                           	callstack 0
   707   000013                     lcd_8bit_set_cursor@col:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x12
   711   000013                     	ds	1
   712   000014                     lcd_4bit_initialize@lcd_data_counter:
   713                           	callstack 0
   714   000014                     lcd_4bit_send_string@ret:
   715                           	callstack 0
   716   000014                     lcd_8bit_initialize@ret:
   717                           	callstack 0
   718   000014                     lcd_4bit_set_cursor@col:
   719                           	callstack 0
   720   000014                     lcd_8bit_set_cursor@ret:
   721                           	callstack 0
   722                           
   723                           ; 1 bytes @ 0x13
   724   000014                     	ds	1
   725   000015                     lcd_4bit_initialize@ret:
   726                           	callstack 0
   727   000015                     lcd_8bit_send_char_data_pos@lcd:
   728                           	callstack 0
   729   000015                     lcd_8bit_send_string_pos@lcd:
   730                           	callstack 0
   731   000015                     lcd_4bit_set_cursor@ret:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x14
   735   000015                     	ds	1
   736   000016                     lcd_4bit_send_char_data_pos@lcd:
   737                           	callstack 0
   738   000016                     lcd_4bit_send_string_pos@lcd:
   739                           	callstack 0
   740   000016                     lcd_8bit_send_char_data_pos@row:
   741                           	callstack 0
   742   000016                     lcd_8bit_send_string_pos@row:
   743                           	callstack 0
   744   000016                     ecu_layer_initialize@ret:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x15
   748   000016                     	ds	1
   749   000017                     lcd_4bit_send_char_data_pos@row:
   750                           	callstack 0
   751   000017                     lcd_4bit_send_string_pos@row:
   752                           	callstack 0
   753   000017                     lcd_8bit_send_char_data_pos@col:
   754                           	callstack 0
   755   000017                     lcd_8bit_send_string_pos@col:
   756                           	callstack 0
   757   000017                     application_init@ret:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x16
   761   000017                     	ds	1
   762   000018                     lcd_4bit_send_char_data_pos@col:
   763                           	callstack 0
   764   000018                     lcd_4bit_send_string_pos@col:
   765                           	callstack 0
   766   000018                     lcd_8bit_send_char_data_pos@data:
   767                           	callstack 0
   768   000018                     lcd_8bit_send_string_pos@str:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x17
   772   000018                     	ds	1
   773   000019                     lcd_4bit_send_char_data_pos@data:
   774                           	callstack 0
   775   000019                     lcd_4bit_send_string_pos@str:
   776                           	callstack 0
   777   000019                     lcd_8bit_send_char_data_pos@ret:
   778                           	callstack 0
   779   000019                     lcd_8bit_send_string_pos@ret:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x18
   783   000019                     	ds	1
   784   00001A                     lcd_4bit_send_char_data_pos@ret:
   785                           	callstack 0
   786   00001A                     lcd_4bit_send_string_pos@ret:
   787                           	callstack 0
   788   00001A                     lcd_8bit_send_custom_char@lcd:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x19
   792   00001A                     	ds	1
   793   00001B                     lcd_4bit_send_custom_char@lcd:
   794                           	callstack 0
   795   00001B                     lcd_8bit_send_custom_char@row:
   796                           	callstack 0
   797                           
   798                           ; 1 bytes @ 0x1A
   799   00001B                     	ds	1
   800   00001C                     lcd_4bit_send_custom_char@row:
   801                           	callstack 0
   802   00001C                     lcd_8bit_send_custom_char@col:
   803                           	callstack 0
   804                           
   805                           ; 1 bytes @ 0x1B
   806   00001C                     	ds	1
   807   00001D                     lcd_4bit_send_custom_char@col:
   808                           	callstack 0
   809   00001D                     lcd_8bit_send_custom_char@_char:
   810                           	callstack 0
   811                           
   812                           ; 1 bytes @ 0x1C
   813   00001D                     	ds	1
   814   00001E                     lcd_4bit_send_custom_char@_char:
   815                           	callstack 0
   816   00001E                     lcd_8bit_send_custom_char@mem_pos:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x1D
   820   00001E                     	ds	1
   821   00001F                     lcd_4bit_send_custom_char@mem_pos:
   822                           	callstack 0
   823   00001F                     lcd_8bit_send_custom_char@lcd_counter:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x1E
   827   00001F                     	ds	1
   828   000020                     lcd_4bit_send_custom_char@lcd_counter:
   829                           	callstack 0
   830   000020                     lcd_8bit_send_custom_char@ret:
   831                           	callstack 0
   832                           
   833                           ; 1 bytes @ 0x1F
   834   000020                     	ds	1
   835   000021                     lcd_4bit_send_custom_char@ret:
   836                           	callstack 0
   837                           
   838                           ; 1 bytes @ 0x20
   839   000021                     	ds	1
   840   000022                     ??_main:
   841                           
   842                           ; 1 bytes @ 0x21
   843   000022                     	ds	2
   844   000024                     main@ret:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x23
   848   000024                     	ds	1
   849                           
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 75 in file "app.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  ret             1   35[COMRAM] unsigned char 
   860 ;; Return value:  Size  Location     Type
   861 ;;                  2  761[None  ] int 
   862 ;; Registers used:
   863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   864 ;; Tracked objects:
   865 ;;		On entry : 0/0
   866 ;;		On exit  : 0/0
   867 ;;		Unchanged: 0/0
   868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   872 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   873 ;;Total ram usage:        3 bytes
   874 ;; Hardware stack levels required when called: 6
   875 ;; This function calls:
   876 ;;		_application_init
   877 ;;		_lcd_4bit_send_char_data_pos
   878 ;;		_lcd_4bit_send_custom_char
   879 ;;		_lcd_4bit_send_string_pos
   880 ;;		_lcd_8bit_send_custom_char
   881 ;;		_lcd_8bit_send_string_pos
   882 ;; This function is called by:
   883 ;;		Startup code after reset
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text0
   888   00102E                     __ptext0:
   889                           	callstack 0
   890   00102E                     _main:
   891                           	callstack 25
   892   00102E                     
   893                           ;app.c: 77:     Std_ReturnType ret = application_init();
   894   00102E  EC79  F010         	call	_application_init	;wreg free
   895   001032  6E24               	movwf	main@ret^0,c
   896   001034                     
   897                           ;app.c: 79:     if ((Std_ReturnType)0x01u == ret)
   898   001034  0424               	decf	main@ret^0,w,c
   899   001036  A4D8               	btfss	status,2,c
   900   001038  EF20  F008         	goto	u3501
   901   00103C  EF22  F008         	goto	u3500
   902   001040                     u3501:
   903   001040  EF24  F008         	goto	l4116
   904   001044                     u3500:
   905   001044  EF1C  F009         	goto	l763
   906   001048                     l4116:
   907   001048  0E7E               	movlw	low _lcd_2
   908   00104A  6E15               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   909   00104C  0E02               	movlw	2
   910   00104E  6E16               	movwf	lcd_8bit_send_string_pos@row^0,c
   911   001050  0E05               	movlw	5
   912   001052  6E17               	movwf	lcd_8bit_send_string_pos@col^0,c
   913   001054  0E1E               	movlw	low STR_3
   914   001056  6E18               	movwf	lcd_8bit_send_string_pos@str^0,c
   915   001058  EC41  F00F         	call	_lcd_8bit_send_string_pos	;wreg free
   916   00105C  0E28               	movlw	low _lcd_1
   917   00105E  6E16               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
   918   001060  0E01               	movlw	1
   919   001062  6E17               	movwf	lcd_4bit_send_char_data_pos@row^0,c
   920   001064  0E05               	movlw	5
   921   001066  6E18               	movwf	lcd_4bit_send_char_data_pos@col^0,c
   922   001068  0E49               	movlw	73
   923   00106A  6E19               	movwf	lcd_4bit_send_char_data_pos@data^0,c
   924   00106C  ECEB  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
   925   001070  0E28               	movlw	low _lcd_1
   926   001072  6E16               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   927   001074  0E02               	movlw	2
   928   001076  6E17               	movwf	lcd_4bit_send_string_pos@row^0,c
   929   001078  0E06               	movlw	6
   930   00107A  6E18               	movwf	lcd_4bit_send_string_pos@col^0,c
   931   00107C  0E11               	movlw	low STR_4
   932   00107E  6E19               	movwf	lcd_4bit_send_string_pos@str^0,c
   933   001080  EC6F  F00F         	call	_lcd_4bit_send_string_pos	;wreg free
   934   001084                     l764:
   935                           
   936                           ;app.c: 87:     {;app.c: 88:         ret = lcd_4bit_send_custom_char(&lcd_1, 1, 20, cust
      +                          om1, 0);
   937   001084  0E28               	movlw	low _lcd_1
   938   001086  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   939   001088  0E01               	movlw	1
   940   00108A  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
   941   00108C  0E14               	movlw	20
   942   00108E  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
   943   001090  0EB0               	movlw	low _custom1
   944   001092  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
   945   001094  0E00               	movlw	0
   946   001096  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   947   001098  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   948   00109C  6E24               	movwf	main@ret^0,c
   949                           
   950                           ;app.c: 89:         ret = lcd_8bit_send_custom_char(&lcd_2, 1, 20, custom1, 0);
   951   00109E  0E7E               	movlw	low _lcd_2
   952   0010A0  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   953   0010A2  0E01               	movlw	1
   954   0010A4  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
   955   0010A6  0E14               	movlw	20
   956   0010A8  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
   957   0010AA  0EB0               	movlw	low _custom1
   958   0010AC  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
   959   0010AE  0E00               	movlw	0
   960   0010B0  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   961   0010B2  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   962   0010B6  6E24               	movwf	main@ret^0,c
   963   0010B8                     
   964                           ;app.c: 90:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
   965   0010B8  0E03               	movlw	3
   966   0010BA  6E23               	movwf	(??_main+1)^0,c
   967   0010BC  0E8A               	movlw	138
   968   0010BE  6E22               	movwf	??_main^0,c
   969   0010C0  0E56               	movlw	86
   970   0010C2                     u3517:
   971   0010C2  2EE8               	decfsz	wreg,f,c
   972   0010C4  D7FE               	bra	u3517
   973   0010C6  2E22               	decfsz	??_main^0,f,c
   974   0010C8  D7FC               	bra	u3517
   975   0010CA  2E23               	decfsz	(??_main+1)^0,f,c
   976   0010CC  D7FA               	bra	u3517
   977   0010CE  0E28               	movlw	low _lcd_1
   978   0010D0  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
   979   0010D2  0E01               	movlw	1
   980   0010D4  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
   981   0010D6  0E14               	movlw	20
   982   0010D8  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
   983   0010DA  0EA8               	movlw	low _custom2
   984   0010DC  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
   985   0010DE  0E00               	movlw	0
   986   0010E0  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
   987   0010E2  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
   988   0010E6  0E7E               	movlw	low _lcd_2
   989   0010E8  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
   990   0010EA  0E01               	movlw	1
   991   0010EC  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
   992   0010EE  0E14               	movlw	20
   993   0010F0  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
   994   0010F2  0EA8               	movlw	low _custom2
   995   0010F4  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
   996   0010F6  0E00               	movlw	0
   997   0010F8  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
   998   0010FA  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
   999   0010FE                     
  1000                           ;app.c: 93:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  1001   0010FE  0E03               	movlw	3
  1002   001100  6E23               	movwf	(??_main+1)^0,c
  1003   001102  0E8A               	movlw	138
  1004   001104  6E22               	movwf	??_main^0,c
  1005   001106  0E56               	movlw	86
  1006   001108                     u3527:
  1007   001108  2EE8               	decfsz	wreg,f,c
  1008   00110A  D7FE               	bra	u3527
  1009   00110C  2E22               	decfsz	??_main^0,f,c
  1010   00110E  D7FC               	bra	u3527
  1011   001110  2E23               	decfsz	(??_main+1)^0,f,c
  1012   001112  D7FA               	bra	u3527
  1013                           
  1014                           ;app.c: 94:         ret = lcd_4bit_send_custom_char(&lcd_1, 1, 20, custom3, 0);
  1015   001114  0E28               	movlw	low _lcd_1
  1016   001116  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1017   001118  0E01               	movlw	1
  1018   00111A  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
  1019   00111C  0E14               	movlw	20
  1020   00111E  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
  1021   001120  0EA0               	movlw	low _custom3
  1022   001122  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
  1023   001124  0E00               	movlw	0
  1024   001126  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1025   001128  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
  1026   00112C  6E24               	movwf	main@ret^0,c
  1027                           
  1028                           ;app.c: 95:         ret = lcd_8bit_send_custom_char(&lcd_2, 1, 20, custom3, 0);
  1029   00112E  0E7E               	movlw	low _lcd_2
  1030   001130  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
  1031   001132  0E01               	movlw	1
  1032   001134  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
  1033   001136  0E14               	movlw	20
  1034   001138  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
  1035   00113A  0EA0               	movlw	low _custom3
  1036   00113C  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
  1037   00113E  0E00               	movlw	0
  1038   001140  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
  1039   001142  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
  1040   001146  6E24               	movwf	main@ret^0,c
  1041   001148                     
  1042                           ;app.c: 96:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  1043   001148  0E03               	movlw	3
  1044   00114A  6E23               	movwf	(??_main+1)^0,c
  1045   00114C  0E8A               	movlw	138
  1046   00114E  6E22               	movwf	??_main^0,c
  1047   001150  0E56               	movlw	86
  1048   001152                     u3537:
  1049   001152  2EE8               	decfsz	wreg,f,c
  1050   001154  D7FE               	bra	u3537
  1051   001156  2E22               	decfsz	??_main^0,f,c
  1052   001158  D7FC               	bra	u3537
  1053   00115A  2E23               	decfsz	(??_main+1)^0,f,c
  1054   00115C  D7FA               	bra	u3537
  1055   00115E  0E28               	movlw	low _lcd_1
  1056   001160  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1057   001162  0E01               	movlw	1
  1058   001164  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
  1059   001166  0E14               	movlw	20
  1060   001168  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
  1061   00116A  0E98               	movlw	low _custom4
  1062   00116C  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
  1063   00116E  0E00               	movlw	0
  1064   001170  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1065   001172  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
  1066   001176  0E7E               	movlw	low _lcd_2
  1067   001178  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
  1068   00117A  0E01               	movlw	1
  1069   00117C  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
  1070   00117E  0E14               	movlw	20
  1071   001180  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
  1072   001182  0E98               	movlw	low _custom4
  1073   001184  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
  1074   001186  0E00               	movlw	0
  1075   001188  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
  1076   00118A  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
  1077   00118E                     
  1078                           ;app.c: 99:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  1079   00118E  0E03               	movlw	3
  1080   001190  6E23               	movwf	(??_main+1)^0,c
  1081   001192  0E8A               	movlw	138
  1082   001194  6E22               	movwf	??_main^0,c
  1083   001196  0E56               	movlw	86
  1084   001198                     u3547:
  1085   001198  2EE8               	decfsz	wreg,f,c
  1086   00119A  D7FE               	bra	u3547
  1087   00119C  2E22               	decfsz	??_main^0,f,c
  1088   00119E  D7FC               	bra	u3547
  1089   0011A0  2E23               	decfsz	(??_main+1)^0,f,c
  1090   0011A2  D7FA               	bra	u3547
  1091                           
  1092                           ;app.c: 100:         ret = lcd_4bit_send_custom_char(&lcd_1, 1, 20, custom5, 0);
  1093   0011A4  0E28               	movlw	low _lcd_1
  1094   0011A6  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1095   0011A8  0E01               	movlw	1
  1096   0011AA  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
  1097   0011AC  0E14               	movlw	20
  1098   0011AE  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
  1099   0011B0  0E90               	movlw	low _custom5
  1100   0011B2  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
  1101   0011B4  0E00               	movlw	0
  1102   0011B6  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1103   0011B8  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
  1104   0011BC  6E24               	movwf	main@ret^0,c
  1105                           
  1106                           ;app.c: 101:         ret = lcd_8bit_send_custom_char(&lcd_2, 1, 20, custom5, 0);
  1107   0011BE  0E7E               	movlw	low _lcd_2
  1108   0011C0  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
  1109   0011C2  0E01               	movlw	1
  1110   0011C4  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
  1111   0011C6  0E14               	movlw	20
  1112   0011C8  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
  1113   0011CA  0E90               	movlw	low _custom5
  1114   0011CC  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
  1115   0011CE  0E00               	movlw	0
  1116   0011D0  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
  1117   0011D2  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
  1118   0011D6  6E24               	movwf	main@ret^0,c
  1119   0011D8                     
  1120                           ;app.c: 102:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  1121   0011D8  0E03               	movlw	3
  1122   0011DA  6E23               	movwf	(??_main+1)^0,c
  1123   0011DC  0E8A               	movlw	138
  1124   0011DE  6E22               	movwf	??_main^0,c
  1125   0011E0  0E56               	movlw	86
  1126   0011E2                     u3557:
  1127   0011E2  2EE8               	decfsz	wreg,f,c
  1128   0011E4  D7FE               	bra	u3557
  1129   0011E6  2E22               	decfsz	??_main^0,f,c
  1130   0011E8  D7FC               	bra	u3557
  1131   0011EA  2E23               	decfsz	(??_main+1)^0,f,c
  1132   0011EC  D7FA               	bra	u3557
  1133   0011EE  0E28               	movlw	low _lcd_1
  1134   0011F0  6E1B               	movwf	lcd_4bit_send_custom_char@lcd^0,c
  1135   0011F2  0E01               	movlw	1
  1136   0011F4  6E1C               	movwf	lcd_4bit_send_custom_char@row^0,c
  1137   0011F6  0E14               	movlw	20
  1138   0011F8  6E1D               	movwf	lcd_4bit_send_custom_char@col^0,c
  1139   0011FA  0E88               	movlw	low _custom6
  1140   0011FC  6E1E               	movwf	lcd_4bit_send_custom_char@_char^0,c
  1141   0011FE  0E00               	movlw	0
  1142   001200  6E1F               	movwf	lcd_4bit_send_custom_char@mem_pos^0,c
  1143   001202  ECE3  F00D         	call	_lcd_4bit_send_custom_char	;wreg free
  1144   001206  0E7E               	movlw	low _lcd_2
  1145   001208  6E1A               	movwf	lcd_8bit_send_custom_char@lcd^0,c
  1146   00120A  0E01               	movlw	1
  1147   00120C  6E1B               	movwf	lcd_8bit_send_custom_char@row^0,c
  1148   00120E  0E14               	movlw	20
  1149   001210  6E1C               	movwf	lcd_8bit_send_custom_char@col^0,c
  1150   001212  0E88               	movlw	low _custom6
  1151   001214  6E1D               	movwf	lcd_8bit_send_custom_char@_char^0,c
  1152   001216  0E00               	movlw	0
  1153   001218  6E1E               	movwf	lcd_8bit_send_custom_char@mem_pos^0,c
  1154   00121A  EC96  F00D         	call	_lcd_8bit_send_custom_char	;wreg free
  1155   00121E                     
  1156                           ;app.c: 105:         _delay((unsigned long)((250)*((8 *1000UL *1000UL)/4000.0)));
  1157   00121E  0E03               	movlw	3
  1158   001220  6E23               	movwf	(??_main+1)^0,c
  1159   001222  0E8A               	movlw	138
  1160   001224  6E22               	movwf	??_main^0,c
  1161   001226  0E56               	movlw	86
  1162   001228                     u3567:
  1163   001228  2EE8               	decfsz	wreg,f,c
  1164   00122A  D7FE               	bra	u3567
  1165   00122C  2E22               	decfsz	??_main^0,f,c
  1166   00122E  D7FC               	bra	u3567
  1167   001230  2E23               	decfsz	(??_main+1)^0,f,c
  1168   001232  D7FA               	bra	u3567
  1169   001234  EF42  F008         	goto	l764
  1170   001238                     l763:
  1171   001238  EF00  F000         	goto	start
  1172   00123C                     __end_of_main:
  1173                           	callstack 0
  1174                           
  1175 ;; *************** function _lcd_8bit_send_string_pos *****************
  1176 ;; Defined at:
  1177 ;;		line 392 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  lcd             1   20[COMRAM] PTR const struct .
  1180 ;;		 -> lcd_2(10), 
  1181 ;;  row             1   21[COMRAM] unsigned char 
  1182 ;;  col             1   22[COMRAM] unsigned char 
  1183 ;;  str             1   23[COMRAM] PTR unsigned char 
  1184 ;;		 -> STR_3(11), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  ret             1   24[COMRAM] unsigned char 
  1187 ;; Return value:  Size  Location     Type
  1188 ;;                  1    wreg      unsigned char 
  1189 ;; Registers used:
  1190 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1191 ;; Tracked objects:
  1192 ;;		On entry : 0/0
  1193 ;;		On exit  : 0/0
  1194 ;;		Unchanged: 0/0
  1195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1196 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1197 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1199 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1200 ;;Total ram usage:        5 bytes
  1201 ;; Hardware stack levels used: 1
  1202 ;; Hardware stack levels required when called: 4
  1203 ;; This function calls:
  1204 ;;		_lcd_8bit_send_string
  1205 ;;		_lcd_8bit_set_cursor
  1206 ;; This function is called by:
  1207 ;;		_main
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text1
  1212   001E82                     __ptext1:
  1213                           	callstack 0
  1214   001E82                     _lcd_8bit_send_string_pos:
  1215                           	callstack 26
  1216   001E82                     
  1217                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 395:  if (((void*)0) == lcd || ((void*)0) == str)
  1218   001E82  5015               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
  1219   001E84  B4D8               	btfsc	status,2,c
  1220   001E86  EF47  F00F         	goto	u2731
  1221   001E8A  EF49  F00F         	goto	u2730
  1222   001E8E                     u2731:
  1223   001E8E  EF51  F00F         	goto	l3440
  1224   001E92                     u2730:
  1225   001E92  5018               	movf	lcd_8bit_send_string_pos@str^0,w,c
  1226   001E94  A4D8               	btfss	status,2,c
  1227   001E96  EF4F  F00F         	goto	u2741
  1228   001E9A  EF51  F00F         	goto	u2740
  1229   001E9E                     u2741:
  1230   001E9E  EF55  F00F         	goto	l3442
  1231   001EA2                     u2740:
  1232   001EA2                     l3440:
  1233                           
  1234                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 396:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 397:     
      +                           ret = (Std_ReturnType)0x01u;
  1235   001EA2  0E01               	movlw	1
  1236   001EA4  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1237                           
  1238                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 398:  }
  1239   001EA6  EF6D  F00F         	goto	l3448
  1240   001EAA                     l3442:
  1241                           
  1242                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 400:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 401:   re
      +                          t = lcd_8bit_set_cursor(lcd, row, col);
  1243   001EAA  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
  1244   001EAE  C016  F012         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
  1245   001EB2  C017  F013         	movff	lcd_8bit_send_string_pos@col,lcd_8bit_set_cursor@col
  1246   001EB6  EC4A  F00C         	call	_lcd_8bit_set_cursor	;wreg free
  1247   001EBA  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1248   001EBC                     
  1249                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 402:   if ((Std_ReturnType)0x00u == ret)
  1250   001EBC  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1251   001EBE  A4D8               	btfss	status,2,c
  1252   001EC0  EF64  F00F         	goto	u2751
  1253   001EC4  EF66  F00F         	goto	u2750
  1254   001EC8                     u2751:
  1255   001EC8  EF6D  F00F         	goto	l3448
  1256   001ECC                     u2750:
  1257   001ECC                     
  1258                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 403:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 404:    
      +                          ret = lcd_8bit_send_string(lcd, str);
  1259   001ECC  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
  1260   001ED0  C018  F012         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
  1261   001ED4  ECAA  F00E         	call	_lcd_8bit_send_string	;wreg free
  1262   001ED8  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
  1263   001EDA                     l3448:
  1264                           
  1265                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 407:  return (ret);
  1266   001EDA  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
  1267   001EDC  0012               	return		;funcret
  1268   001EDE                     __end_of_lcd_8bit_send_string_pos:
  1269                           	callstack 0
  1270                           
  1271 ;; *************** function _lcd_8bit_send_string *****************
  1272 ;; Defined at:
  1273 ;;		line 371 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;  lcd             1   16[COMRAM] PTR const struct .
  1276 ;;		 -> lcd_2(10), 
  1277 ;;  str             1   17[COMRAM] PTR unsigned char 
  1278 ;;		 -> STR_3(11), 
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;  ret             1   18[COMRAM] unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      unsigned char 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1290 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1291 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1293 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1294 ;;Total ram usage:        3 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 3
  1297 ;; This function calls:
  1298 ;;		_lcd_8bit_send_char_data
  1299 ;; This function is called by:
  1300 ;;		_lcd_8bit_send_string_pos
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text2
  1305   001D54                     __ptext2:
  1306                           	callstack 0
  1307   001D54                     _lcd_8bit_send_string:
  1308                           	callstack 26
  1309   001D54                     
  1310                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 371: Std_ReturnType lcd_8bit_send_string(const char_
      +                          lcd_8bit_t *lcd, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 372: {;ECU_Layer/Char_LC
      +                          D/ecu_char_lcd.c: 373:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  1311   001D54  0E00               	movlw	0
  1312   001D56  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1313                           
  1314                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 374:  if (((void*)0) == lcd)
  1315   001D58  5011               	movf	lcd_8bit_send_string@lcd^0,w,c
  1316   001D5A  A4D8               	btfss	status,2,c
  1317   001D5C  EFB2  F00E         	goto	u2501
  1318   001D60  EFB4  F00E         	goto	u2500
  1319   001D64                     u2501:
  1320   001D64  EFD0  F00E         	goto	l3294
  1321   001D68                     u2500:
  1322   001D68                     
  1323                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 375:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 376:     
      +                           ret = (Std_ReturnType)0x01u;
  1324   001D68  0E01               	movlw	1
  1325   001D6A  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1326                           
  1327                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 377:  }
  1328   001D6C  EFDF  F00E         	goto	l3296
  1329   001D70                     l3286:
  1330                           
  1331                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 381:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 382:    
      +                          ret = lcd_8bit_send_char_data(lcd, *str++);
  1332   001D70  C011  F00B         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1333   001D74  C012  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1334   001D78                     	if	1	;There is more than 1 active tblptr byte
  1335   001D78  0E10               	movlw	high __smallconst
  1336   001D7A  6EF7               	movwf	tblptrh,c
  1337   001D7C                     	endif
  1338   001D7C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1339   001D7C  6AF8               	clrf	tblptru,c
  1340   001D7E                     	endif
  1341   001D7E                     	if	0	;tblptru may be non-zero
  1342   001D7E                     	endif
  1343   001D7E  0008               	tblrd		*
  1344   001D80  CFF5 F00C          	movff	tablat,lcd_8bit_send_char_data@data
  1345   001D84  EC9C  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1346   001D88  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1347   001D8A  2A12               	incf	lcd_8bit_send_string@str^0,f,c
  1348   001D8C                     
  1349                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 383:    if ((Std_ReturnType)0x01u == ret)
  1350   001D8C  0413               	decf	lcd_8bit_send_string@ret^0,w,c
  1351   001D8E  A4D8               	btfss	status,2,c
  1352   001D90  EFCC  F00E         	goto	u2511
  1353   001D94  EFCE  F00E         	goto	u2510
  1354   001D98                     u2511:
  1355   001D98  EFD0  F00E         	goto	l3294
  1356   001D9C                     u2510:
  1357   001D9C  EFDF  F00E         	goto	l3296
  1358   001DA0                     l3294:
  1359                           
  1360                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 380:   while (*str)
  1361   001DA0  C012  FFF6         	movff	lcd_8bit_send_string@str,tblptrl
  1362   001DA4                     	if	1	;There is more than 1 active tblptr byte
  1363   001DA4  0E10               	movlw	high __smallconst
  1364   001DA6  6EF7               	movwf	tblptrh,c
  1365   001DA8                     	endif
  1366   001DA8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1367   001DA8  6AF8               	clrf	tblptru,c
  1368   001DAA                     	endif
  1369   001DAA                     	if	0	;tblptru may be non-zero
  1370   001DAA                     	endif
  1371   001DAA  0008               	tblrd		*
  1372   001DAC  50F5               	movf	tablat,w,c
  1373   001DAE  0900               	iorlw	0
  1374   001DB0  A4D8               	btfss	status,2,c
  1375   001DB2  EFDD  F00E         	goto	u2521
  1376   001DB6  EFDF  F00E         	goto	u2520
  1377   001DBA                     u2521:
  1378   001DBA  EFB8  F00E         	goto	l3286
  1379   001DBE                     u2520:
  1380   001DBE                     l3296:
  1381                           
  1382                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 389:  return (ret);
  1383   001DBE  5013               	movf	lcd_8bit_send_string@ret^0,w,c
  1384   001DC0  0012               	return		;funcret
  1385   001DC2                     __end_of_lcd_8bit_send_string:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _lcd_8bit_send_custom_char *****************
  1389 ;; Defined at:
  1390 ;;		line 410 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  lcd             1   25[COMRAM] PTR const struct .
  1393 ;;		 -> lcd_2(10), 
  1394 ;;  row             1   26[COMRAM] unsigned char 
  1395 ;;  col             1   27[COMRAM] unsigned char 
  1396 ;;  _char           1   28[COMRAM] PTR const unsigned char 
  1397 ;;		 -> custom6(8), custom5(8), custom4(8), custom3(8), 
  1398 ;;		 -> custom2(8), custom1(8), 
  1399 ;;  mem_pos         1   29[COMRAM] unsigned char 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;  ret             1   31[COMRAM] unsigned char 
  1402 ;;  lcd_counter     1   30[COMRAM] unsigned char 
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      unsigned char 
  1405 ;; Registers used:
  1406 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1412 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1415 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1416 ;;Total ram usage:        7 bytes
  1417 ;; Hardware stack levels used: 1
  1418 ;; Hardware stack levels required when called: 5
  1419 ;; This function calls:
  1420 ;;		_lcd_8bit_send_char_data
  1421 ;;		_lcd_8bit_send_char_data_pos
  1422 ;;		_lcd_8bit_send_command
  1423 ;; This function is called by:
  1424 ;;		_main
  1425 ;; This function uses a non-reentrant model
  1426 ;;
  1427                           
  1428                           	psect	text3
  1429   001B2C                     __ptext3:
  1430                           	callstack 0
  1431   001B2C                     _lcd_8bit_send_custom_char:
  1432                           	callstack 25
  1433   001B2C                     
  1434                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 413:  uint8 lcd_counter = 0x00;
  1435   001B2C  0E00               	movlw	0
  1436   001B2E  6E1F               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
  1437                           
  1438                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 415:  if (((void*)0) == lcd)
  1439   001B30  501A               	movf	lcd_8bit_send_custom_char@lcd^0,w,c
  1440   001B32  A4D8               	btfss	status,2,c
  1441   001B34  EF9E  F00D         	goto	u2761
  1442   001B38  EFA0  F00D         	goto	u2760
  1443   001B3C                     u2761:
  1444   001B3C  EFA4  F00D         	goto	l3456
  1445   001B40                     u2760:
  1446   001B40                     
  1447                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 416:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 417:     
      +                           ret = (Std_ReturnType)0x01u;
  1448   001B40  0E01               	movlw	1
  1449   001B42  6E20               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1450                           
  1451                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 418:  }
  1452   001B44  EFE1  F00D         	goto	l3478
  1453   001B48                     l3456:
  1454                           
  1455                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 420:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 422:   re
      +                          t = lcd_8bit_send_command(lcd, (0x40) + (mem_pos * 8));
  1456   001B48  C01A  F00B         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_command@lcd
  1457   001B4C  501E               	movf	lcd_8bit_send_custom_char@mem_pos^0,w,c
  1458   001B4E  0D08               	mullw	8
  1459   001B50  50F3               	movf	243,w,c
  1460   001B52  0F40               	addlw	64
  1461   001B54  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1462   001B56  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  1463   001B5A  6E20               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1464   001B5C                     
  1465                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 423:   if ((Std_ReturnType)0x00u == ret)
  1466   001B5C  5020               	movf	lcd_8bit_send_custom_char@ret^0,w,c
  1467   001B5E  A4D8               	btfss	status,2,c
  1468   001B60  EFB4  F00D         	goto	u2771
  1469   001B64  EFB6  F00D         	goto	u2770
  1470   001B68                     u2771:
  1471   001B68  EFE1  F00D         	goto	l3478
  1472   001B6C                     u2770:
  1473   001B6C                     
  1474                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 424:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 425:    
      +                          for (lcd_counter = 0; lcd_counter < 7; lcd_counter++)
  1475   001B6C  0E00               	movlw	0
  1476   001B6E  6E1F               	movwf	lcd_8bit_send_custom_char@lcd_counter^0,c
  1477   001B70                     l3466:
  1478                           
  1479                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 426:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 427:   
      +                            ret = lcd_8bit_send_char_data(lcd, _char[lcd_counter]);
  1480   001B70  C01A  F00B         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data@lcd
  1481   001B74  501D               	movf	lcd_8bit_send_custom_char@_char^0,w,c
  1482   001B76  241F               	addwf	lcd_8bit_send_custom_char@lcd_counter^0,w,c
  1483   001B78  6ED9               	movwf	fsr2l,c
  1484   001B7A  6ADA               	clrf	fsr2h,c
  1485   001B7C  50DF               	movf	indf2,w,c
  1486   001B7E  6E0C               	movwf	lcd_8bit_send_char_data@data^0,c
  1487   001B80  EC9C  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1488   001B84  6E20               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1489   001B86                     
  1490                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 428:     if ((Std_ReturnType)0x01u == ret)
  1491   001B86  0420               	decf	lcd_8bit_send_custom_char@ret^0,w,c
  1492   001B88  A4D8               	btfss	status,2,c
  1493   001B8A  EFC9  F00D         	goto	u2781
  1494   001B8E  EFCB  F00D         	goto	u2780
  1495   001B92                     u2781:
  1496   001B92  EFCD  F00D         	goto	l3472
  1497   001B96                     u2780:
  1498   001B96  EFD6  F00D         	goto	l3476
  1499   001B9A                     l3472:
  1500                           
  1501                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 432:    }
  1502   001B9A  2A1F               	incf	lcd_8bit_send_custom_char@lcd_counter^0,f,c
  1503   001B9C  0E06               	movlw	6
  1504   001B9E  641F               	cpfsgt	lcd_8bit_send_custom_char@lcd_counter^0,c
  1505   001BA0  EFD4  F00D         	goto	u2791
  1506   001BA4  EFD6  F00D         	goto	u2790
  1507   001BA8                     u2791:
  1508   001BA8  EFB8  F00D         	goto	l3466
  1509   001BAC                     u2790:
  1510   001BAC                     l3476:
  1511                           
  1512                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 433:    ret = lcd_8bit_send_char_data_pos(lcd, row, 
      +                          col, mem_pos);
  1513   001BAC  C01A  F015         	movff	lcd_8bit_send_custom_char@lcd,lcd_8bit_send_char_data_pos@lcd
  1514   001BB0  C01B  F016         	movff	lcd_8bit_send_custom_char@row,lcd_8bit_send_char_data_pos@row
  1515   001BB4  C01C  F017         	movff	lcd_8bit_send_custom_char@col,lcd_8bit_send_char_data_pos@col
  1516   001BB8  C01E  F018         	movff	lcd_8bit_send_custom_char@mem_pos,lcd_8bit_send_char_data_pos@data
  1517   001BBC  ECC5  F00F         	call	_lcd_8bit_send_char_data_pos	;wreg free
  1518   001BC0  6E20               	movwf	lcd_8bit_send_custom_char@ret^0,c
  1519   001BC2                     l3478:
  1520                           
  1521                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 436:  return (ret);
  1522   001BC2  5020               	movf	lcd_8bit_send_custom_char@ret^0,w,c
  1523   001BC4  0012               	return		;funcret
  1524   001BC6                     __end_of_lcd_8bit_send_custom_char:
  1525                           	callstack 0
  1526                           
  1527 ;; *************** function _lcd_8bit_send_char_data_pos *****************
  1528 ;; Defined at:
  1529 ;;		line 353 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;  lcd             1   20[COMRAM] PTR const struct .
  1532 ;;		 -> lcd_2(10), 
  1533 ;;  row             1   21[COMRAM] unsigned char 
  1534 ;;  col             1   22[COMRAM] unsigned char 
  1535 ;;  data            1   23[COMRAM] unsigned char 
  1536 ;; Auto vars:     Size  Location     Type
  1537 ;;  ret             1   24[COMRAM] unsigned char 
  1538 ;; Return value:  Size  Location     Type
  1539 ;;                  1    wreg      unsigned char 
  1540 ;; Registers used:
  1541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1542 ;; Tracked objects:
  1543 ;;		On entry : 0/0
  1544 ;;		On exit  : 0/0
  1545 ;;		Unchanged: 0/0
  1546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1547 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1551 ;;Total ram usage:        5 bytes
  1552 ;; Hardware stack levels used: 1
  1553 ;; Hardware stack levels required when called: 4
  1554 ;; This function calls:
  1555 ;;		_lcd_8bit_send_char_data
  1556 ;;		_lcd_8bit_set_cursor
  1557 ;; This function is called by:
  1558 ;;		_lcd_8bit_send_custom_char
  1559 ;; This function uses a non-reentrant model
  1560 ;;
  1561                           
  1562                           	psect	text4
  1563   001F8A                     __ptext4:
  1564                           	callstack 0
  1565   001F8A                     _lcd_8bit_send_char_data_pos:
  1566                           	callstack 25
  1567   001F8A                     
  1568                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 356:  if (((void*)0) == lcd)
  1569   001F8A  5015               	movf	lcd_8bit_send_char_data_pos@lcd^0,w,c
  1570   001F8C  A4D8               	btfss	status,2,c
  1571   001F8E  EFCB  F00F         	goto	u2481
  1572   001F92  EFCD  F00F         	goto	u2480
  1573   001F96                     u2481:
  1574   001F96  EFD1  F00F         	goto	l3272
  1575   001F9A                     u2480:
  1576   001F9A                     
  1577                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 357:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 358:     
      +                           ret = (Std_ReturnType)0x01u;
  1578   001F9A  0E01               	movlw	1
  1579   001F9C  6E19               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1580                           
  1581                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 359:  }
  1582   001F9E  EFE9  F00F         	goto	l3278
  1583   001FA2                     l3272:
  1584                           
  1585                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 361:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 362:   re
      +                          t = lcd_8bit_set_cursor(lcd, row, col);
  1586   001FA2  C015  F011         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_set_cursor@lcd
  1587   001FA6  C016  F012         	movff	lcd_8bit_send_char_data_pos@row,lcd_8bit_set_cursor@row
  1588   001FAA  C017  F013         	movff	lcd_8bit_send_char_data_pos@col,lcd_8bit_set_cursor@col
  1589   001FAE  EC4A  F00C         	call	_lcd_8bit_set_cursor	;wreg free
  1590   001FB2  6E19               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1591   001FB4                     
  1592                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 363:   if ((Std_ReturnType)0x00u == ret)
  1593   001FB4  5019               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
  1594   001FB6  A4D8               	btfss	status,2,c
  1595   001FB8  EFE0  F00F         	goto	u2491
  1596   001FBC  EFE2  F00F         	goto	u2490
  1597   001FC0                     u2491:
  1598   001FC0  EFE9  F00F         	goto	l3278
  1599   001FC4                     u2490:
  1600   001FC4                     
  1601                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 364:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 365:    
      +                          ret = lcd_8bit_send_char_data(lcd, data);
  1602   001FC4  C015  F00B         	movff	lcd_8bit_send_char_data_pos@lcd,lcd_8bit_send_char_data@lcd
  1603   001FC8  C018  F00C         	movff	lcd_8bit_send_char_data_pos@data,lcd_8bit_send_char_data@data
  1604   001FCC  EC9C  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1605   001FD0  6E19               	movwf	lcd_8bit_send_char_data_pos@ret^0,c
  1606   001FD2                     l3278:
  1607                           
  1608                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 368:  return (ret);
  1609   001FD2  5019               	movf	lcd_8bit_send_char_data_pos@ret^0,w,c
  1610   001FD4  0012               	return		;funcret
  1611   001FD6                     __end_of_lcd_8bit_send_char_data_pos:
  1612                           	callstack 0
  1613                           
  1614 ;; *************** function _lcd_8bit_set_cursor *****************
  1615 ;; Defined at:
  1616 ;;		line 532 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  lcd             1   16[COMRAM] PTR const struct .
  1619 ;;		 -> lcd_2(10), 
  1620 ;;  row             1   17[COMRAM] unsigned char 
  1621 ;;  col             1   18[COMRAM] unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  ret             1   19[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      unsigned char 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1633 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1637 ;;Total ram usage:        4 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; Hardware stack levels required when called: 3
  1640 ;; This function calls:
  1641 ;;		_lcd_8bit_send_command
  1642 ;; This function is called by:
  1643 ;;		_lcd_8bit_send_char_data_pos
  1644 ;;		_lcd_8bit_send_string_pos
  1645 ;; This function uses a non-reentrant model
  1646 ;;
  1647                           
  1648                           	psect	text5
  1649   001894                     __ptext5:
  1650                           	callstack 0
  1651   001894                     _lcd_8bit_set_cursor:
  1652                           	callstack 26
  1653   001894                     
  1654                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 536:  if (((void*)0) == lcd)
  1655   001894  5011               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1656   001896  A4D8               	btfss	status,2,c
  1657   001898  EF50  F00C         	goto	u2351
  1658   00189C  EF52  F00C         	goto	u2350
  1659   0018A0                     u2351:
  1660   0018A0  EF56  F00C         	goto	l3196
  1661   0018A4                     u2350:
  1662   0018A4                     l3194:
  1663                           
  1664                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 537:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 538:   re
      +                          t = (Std_ReturnType)0x01u;
  1665   0018A4  0E01               	movlw	1
  1666   0018A6  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1667                           
  1668                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 539:  }
  1669   0018A8  EF9E  F00C         	goto	l3216
  1670   0018AC                     l3196:
  1671                           
  1672                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 541:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 542:   co
      +                          l--;
  1673   0018AC  0613               	decf	lcd_8bit_set_cursor@col^0,f,c
  1674   0018AE                     
  1675                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 543:   if ((0xff) == col)
  1676   0018AE  2813               	incf	lcd_8bit_set_cursor@col^0,w,c
  1677   0018B0  A4D8               	btfss	status,2,c
  1678   0018B2  EF5D  F00C         	goto	u2361
  1679   0018B6  EF5F  F00C         	goto	u2360
  1680   0018BA                     u2361:
  1681   0018BA  EF8B  F00C         	goto	l3214
  1682   0018BE                     u2360:
  1683   0018BE                     
  1684                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 544:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 545:    
      +                          col = 0;
  1685   0018BE  0E00               	movlw	0
  1686   0018C0  6E13               	movwf	lcd_8bit_set_cursor@col^0,c
  1687   0018C2  EF8B  F00C         	goto	l3214
  1688   0018C6                     l3202:
  1689                           
  1690                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 550:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x80 + col);
  1691   0018C6  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1692   0018CA  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1693   0018CC  0F80               	addlw	128
  1694   0018CE  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1695   0018D0  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  1696   0018D4  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1697                           
  1698                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 551:                 break;
  1699   0018D6  EF9E  F00C         	goto	l3216
  1700   0018DA                     l3204:
  1701                           
  1702                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 553:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xC0 + col);
  1703   0018DA  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1704   0018DE  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1705   0018E0  0FC0               	addlw	192
  1706   0018E2  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1707   0018E4  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  1708   0018E8  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1709                           
  1710                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 554:                 break;
  1711   0018EA  EF9E  F00C         	goto	l3216
  1712   0018EE                     l3206:
  1713                           
  1714                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 556:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x94 + col);
  1715   0018EE  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1716   0018F2  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1717   0018F4  0F94               	addlw	148
  1718   0018F6  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1719   0018F8  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  1720   0018FC  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1721                           
  1722                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 557:                 break;
  1723   0018FE  EF9E  F00C         	goto	l3216
  1724   001902                     l3208:
  1725                           
  1726                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 559:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xD4 + col);
  1727   001902  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1728   001906  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1729   001908  0FD4               	addlw	212
  1730   00190A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1731   00190C  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  1732   001910  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1733                           
  1734                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 560:                 break;
  1735   001912  EF9E  F00C         	goto	l3216
  1736   001916                     l3214:
  1737   001916  5012               	movf	lcd_8bit_set_cursor@row^0,w,c
  1738                           
  1739                           ; Switch size 1, requested type "simple"
  1740                           ; Number of cases is 4, Range of values is 1 to 4
  1741                           ; switch strategies available:
  1742                           ; Name         Instructions Cycles
  1743                           ; simple_byte           13     7 (average)
  1744                           ;	Chosen strategy is simple_byte
  1745   001918  0A01               	xorlw	1	; case 1
  1746   00191A  B4D8               	btfsc	status,2,c
  1747   00191C  EF63  F00C         	goto	l3202
  1748   001920  0A03               	xorlw	3	; case 2
  1749   001922  B4D8               	btfsc	status,2,c
  1750   001924  EF6D  F00C         	goto	l3204
  1751   001928  0A01               	xorlw	1	; case 3
  1752   00192A  B4D8               	btfsc	status,2,c
  1753   00192C  EF77  F00C         	goto	l3206
  1754   001930  0A07               	xorlw	7	; case 4
  1755   001932  B4D8               	btfsc	status,2,c
  1756   001934  EF81  F00C         	goto	l3208
  1757   001938  EF52  F00C         	goto	l3194
  1758   00193C                     l3216:
  1759                           
  1760                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 566:  return (ret);
  1761   00193C  5014               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1762   00193E  0012               	return		;funcret
  1763   001940                     __end_of_lcd_8bit_set_cursor:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _lcd_8bit_send_char_data *****************
  1767 ;; Defined at:
  1768 ;;		line 322 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  lcd             1   10[COMRAM] PTR const struct .
  1771 ;;		 -> lcd_2(10), 
  1772 ;;  data            1   11[COMRAM] unsigned char 
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  ret             1   15[COMRAM] unsigned char 
  1775 ;;  counter         1   14[COMRAM] unsigned char 
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      unsigned char 
  1778 ;; Registers used:
  1779 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1785 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1786 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1787 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1788 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;Total ram usage:        6 bytes
  1790 ;; Hardware stack levels used: 1
  1791 ;; Hardware stack levels required when called: 2
  1792 ;; This function calls:
  1793 ;;		_gpio_pin_write_logic
  1794 ;;		_lcd_8bit_send_enable_signal
  1795 ;; This function is called by:
  1796 ;;		_lcd_8bit_send_char_data_pos
  1797 ;;		_lcd_8bit_send_string
  1798 ;;		_lcd_8bit_send_custom_char
  1799 ;; This function uses a non-reentrant model
  1800 ;;
  1801                           
  1802                           	psect	text6
  1803   001738                     __ptext6:
  1804                           	callstack 0
  1805   001738                     _lcd_8bit_send_char_data:
  1806                           	callstack 26
  1807   001738                     
  1808                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 325:  uint8 counter = 0x00;
  1809   001738  0E00               	movlw	0
  1810   00173A  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1811                           
  1812                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 327:  if (((void*)0) == lcd)
  1813   00173C  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1814   00173E  A4D8               	btfss	status,2,c
  1815   001740  EFA4  F00B         	goto	u2291
  1816   001744  EFA6  F00B         	goto	u2290
  1817   001748                     u2291:
  1818   001748  EFAA  F00B         	goto	l3164
  1819   00174C                     u2290:
  1820   00174C                     
  1821                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 328:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 329:     
      +                           ret = (Std_ReturnType)0x01u;
  1822   00174C  0E01               	movlw	1
  1823   00174E  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1824                           
  1825                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 330:  }
  1826   001750  EFF1  F00B         	goto	l3188
  1827   001754                     l3164:
  1828                           
  1829                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 332:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 333:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  1830   001754  C00B  F001         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config_t
  1831   001758  0E01               	movlw	1
  1832   00175A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1833   00175C  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  1834   001760  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1835   001762                     
  1836                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 334:   if ((Std_ReturnType)0x00u == ret)
  1837   001762  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1838   001764  A4D8               	btfss	status,2,c
  1839   001766  EFB7  F00B         	goto	u2301
  1840   00176A  EFB9  F00B         	goto	u2300
  1841   00176E                     u2301:
  1842   00176E  EFF1  F00B         	goto	l3188
  1843   001772                     u2300:
  1844   001772                     
  1845                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 335:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 336:    
      +                          for (counter = 0x00; counter < 8; counter++)
  1846   001772  0E00               	movlw	0
  1847   001774  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1848   001776                     l3174:
  1849                           
  1850                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 337:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 338:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data >> counter) & (uint8)1);
  1851   001776  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1852   001778  240F               	addwf	lcd_8bit_send_char_data@counter^0,w,c
  1853   00177A  0F02               	addlw	2
  1854   00177C  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1855   00177E  C00F  F00D         	movff	lcd_8bit_send_char_data@counter,??_lcd_8bit_send_char_data
  1856   001782  C00C  F00E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1857   001786  2A0D               	incf	??_lcd_8bit_send_char_data^0,f,c
  1858   001788  EFC8  F00B         	goto	u2314
  1859   00178C                     u2315:
  1860   00178C  90D8               	bcf	status,0,c
  1861   00178E  320E               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1862   001790                     u2314:
  1863   001790  2E0D               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1864   001792  EFC6  F00B         	goto	u2315
  1865   001796  500E               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1866   001798  0B01               	andlw	1
  1867   00179A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1868   00179C  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  1869   0017A0  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1870   0017A2                     
  1871                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 339:     if ((Std_ReturnType)0x01u == ret)
  1872   0017A2  0410               	decf	lcd_8bit_send_char_data@ret^0,w,c
  1873   0017A4  A4D8               	btfss	status,2,c
  1874   0017A6  EFD7  F00B         	goto	u2321
  1875   0017AA  EFD9  F00B         	goto	u2320
  1876   0017AE                     u2321:
  1877   0017AE  EFDB  F00B         	goto	l3180
  1878   0017B2                     u2320:
  1879   0017B2  EFE4  F00B         	goto	l3184
  1880   0017B6                     l3180:
  1881                           
  1882                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 343:    }
  1883   0017B6  2A0F               	incf	lcd_8bit_send_char_data@counter^0,f,c
  1884   0017B8  0E07               	movlw	7
  1885   0017BA  640F               	cpfsgt	lcd_8bit_send_char_data@counter^0,c
  1886   0017BC  EFE2  F00B         	goto	u2331
  1887   0017C0  EFE4  F00B         	goto	u2330
  1888   0017C4                     u2331:
  1889   0017C4  EFBB  F00B         	goto	l3174
  1890   0017C8                     u2330:
  1891   0017C8                     l3184:
  1892                           
  1893                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 344:    if ((Std_ReturnType)0x00u == ret)
  1894   0017C8  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1895   0017CA  A4D8               	btfss	status,2,c
  1896   0017CC  EFEA  F00B         	goto	u2341
  1897   0017D0  EFEC  F00B         	goto	u2340
  1898   0017D4                     u2341:
  1899   0017D4  EFF1  F00B         	goto	l3188
  1900   0017D8                     u2340:
  1901   0017D8                     
  1902                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 345:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 346:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  1903   0017D8  C00B  F009         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1904   0017DC  EC34  F010         	call	_lcd_8bit_send_enable_signal	;wreg free
  1905   0017E0  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1906   0017E2                     l3188:
  1907                           
  1908                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 350:  return (ret);
  1909   0017E2  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1910   0017E4  0012               	return		;funcret
  1911   0017E6                     __end_of_lcd_8bit_send_char_data:
  1912                           	callstack 0
  1913                           
  1914 ;; *************** function _lcd_4bit_send_string_pos *****************
  1915 ;; Defined at:
  1916 ;;		line 194 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1917 ;; Parameters:    Size  Location     Type
  1918 ;;  lcd             1   21[COMRAM] PTR const struct .
  1919 ;;		 -> lcd_1(6), 
  1920 ;;  row             1   22[COMRAM] unsigned char 
  1921 ;;  col             1   23[COMRAM] unsigned char 
  1922 ;;  str             1   24[COMRAM] PTR unsigned char 
  1923 ;;		 -> STR_4(13), 
  1924 ;; Auto vars:     Size  Location     Type
  1925 ;;  ret             1   25[COMRAM] unsigned char 
  1926 ;; Return value:  Size  Location     Type
  1927 ;;                  1    wreg      unsigned char 
  1928 ;; Registers used:
  1929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1930 ;; Tracked objects:
  1931 ;;		On entry : 0/0
  1932 ;;		On exit  : 0/0
  1933 ;;		Unchanged: 0/0
  1934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1935 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1936 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1938 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1939 ;;Total ram usage:        5 bytes
  1940 ;; Hardware stack levels used: 1
  1941 ;; Hardware stack levels required when called: 4
  1942 ;; This function calls:
  1943 ;;		_lcd_4bit_send_string
  1944 ;;		_lcd_4bit_set_cursor
  1945 ;; This function is called by:
  1946 ;;		_main
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           	psect	text7
  1951   001EDE                     __ptext7:
  1952                           	callstack 0
  1953   001EDE                     _lcd_4bit_send_string_pos:
  1954                           	callstack 26
  1955   001EDE                     
  1956                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 197:  if (((void*)0) == lcd || ((void*)0) == str)
  1957   001EDE  5016               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1958   001EE0  B4D8               	btfsc	status,2,c
  1959   001EE2  EF75  F00F         	goto	u2661
  1960   001EE6  EF77  F00F         	goto	u2660
  1961   001EEA                     u2661:
  1962   001EEA  EF7F  F00F         	goto	l3394
  1963   001EEE                     u2660:
  1964   001EEE  5019               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1965   001EF0  A4D8               	btfss	status,2,c
  1966   001EF2  EF7D  F00F         	goto	u2671
  1967   001EF6  EF7F  F00F         	goto	u2670
  1968   001EFA                     u2671:
  1969   001EFA  EF83  F00F         	goto	l3396
  1970   001EFE                     u2670:
  1971   001EFE                     l3394:
  1972                           
  1973                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 198:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 199:     
      +                           ret = (Std_ReturnType)0x01u;
  1974   001EFE  0E01               	movlw	1
  1975   001F00  6E1A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1976                           
  1977                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 200:  }
  1978   001F02  EF9B  F00F         	goto	l3402
  1979   001F06                     l3396:
  1980                           
  1981                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 202:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 203:     
      +                              ret = lcd_4bit_set_cursor(lcd, row, col);
  1982   001F06  C016  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1983   001F0A  C017  F013         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1984   001F0E  C018  F014         	movff	lcd_4bit_send_string_pos@col,lcd_4bit_set_cursor@col
  1985   001F12  ECA0  F00C         	call	_lcd_4bit_set_cursor	;wreg free
  1986   001F16  6E1A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  1987   001F18                     
  1988                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 204:         if ((Std_ReturnType)0x00u == ret)
  1989   001F18  501A               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  1990   001F1A  A4D8               	btfss	status,2,c
  1991   001F1C  EF92  F00F         	goto	u2681
  1992   001F20  EF94  F00F         	goto	u2680
  1993   001F24                     u2681:
  1994   001F24  EF9B  F00F         	goto	l3402
  1995   001F28                     u2680:
  1996   001F28                     
  1997                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 205:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 20
      +                          6:             ret = lcd_4bit_send_string(lcd, str);
  1998   001F28  C016  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1999   001F2C  C019  F013         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  2000   001F30  EC30  F00E         	call	_lcd_4bit_send_string	;wreg free
  2001   001F34  6E1A               	movwf	lcd_4bit_send_string_pos@ret^0,c
  2002   001F36                     l3402:
  2003                           
  2004                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 209:  return (ret);
  2005   001F36  501A               	movf	lcd_4bit_send_string_pos@ret^0,w,c
  2006   001F38  0012               	return		;funcret
  2007   001F3A                     __end_of_lcd_4bit_send_string_pos:
  2008                           	callstack 0
  2009                           
  2010 ;; *************** function _lcd_4bit_send_string *****************
  2011 ;; Defined at:
  2012 ;;		line 171 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2013 ;; Parameters:    Size  Location     Type
  2014 ;;  lcd             1   17[COMRAM] PTR const struct .
  2015 ;;		 -> lcd_1(6), 
  2016 ;;  str             1   18[COMRAM] PTR unsigned char 
  2017 ;;		 -> STR_4(13), 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  ret             1   19[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2029 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2032 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2033 ;;Total ram usage:        3 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; Hardware stack levels required when called: 3
  2036 ;; This function calls:
  2037 ;;		_lcd_4bit_send_char_data
  2038 ;; This function is called by:
  2039 ;;		_lcd_4bit_send_string_pos
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text8
  2044   001C60                     __ptext8:
  2045                           	callstack 0
  2046   001C60                     _lcd_4bit_send_string:
  2047                           	callstack 26
  2048   001C60                     
  2049                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 171: Std_ReturnType lcd_4bit_send_string(const char_
      +                          lcd_4bit_t *lcd, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 172: {;ECU_Layer/Char_LC
      +                          D/ecu_char_lcd.c: 173:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  2050   001C60  0E00               	movlw	0
  2051   001C62  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  2052                           
  2053                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 174:  if (((void*)0) == lcd || ((void*)0) == str)
  2054   001C64  5012               	movf	lcd_4bit_send_string@lcd^0,w,c
  2055   001C66  B4D8               	btfsc	status,2,c
  2056   001C68  EF38  F00E         	goto	u2441
  2057   001C6C  EF3A  F00E         	goto	u2440
  2058   001C70                     u2441:
  2059   001C70  EF42  F00E         	goto	l3252
  2060   001C74                     u2440:
  2061   001C74  5013               	movf	lcd_4bit_send_string@str^0,w,c
  2062   001C76  A4D8               	btfss	status,2,c
  2063   001C78  EF40  F00E         	goto	u2451
  2064   001C7C  EF42  F00E         	goto	u2450
  2065   001C80                     u2451:
  2066   001C80  EF5E  F00E         	goto	l3262
  2067   001C84                     u2450:
  2068   001C84                     l3252:
  2069                           
  2070                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 175:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 176:     
      +                           ret = (Std_ReturnType)0x01u;
  2071   001C84  0E01               	movlw	1
  2072   001C86  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  2073                           
  2074                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 177:  }
  2075   001C88  EF6D  F00E         	goto	l3264
  2076   001C8C                     l3254:
  2077                           
  2078                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 181:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 18
      +                          2:             ret = lcd_4bit_send_char_data(lcd, *str++);
  2079   001C8C  C012  F00F         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char_data@lcd
  2080   001C90  C013  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2081   001C94                     	if	1	;There is more than 1 active tblptr byte
  2082   001C94  0E10               	movlw	high __smallconst
  2083   001C96  6EF7               	movwf	tblptrh,c
  2084   001C98                     	endif
  2085   001C98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2086   001C98  6AF8               	clrf	tblptru,c
  2087   001C9A                     	endif
  2088   001C9A                     	if	0	;tblptru may be non-zero
  2089   001C9A                     	endif
  2090   001C9A  0008               	tblrd		*
  2091   001C9C  CFF5 F010          	movff	tablat,lcd_4bit_send_char_data@data
  2092   001CA0  ECF6  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  2093   001CA4  6E14               	movwf	lcd_4bit_send_string@ret^0,c
  2094   001CA6  2A13               	incf	lcd_4bit_send_string@str^0,f,c
  2095   001CA8                     
  2096                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 183:             if ((Std_ReturnType)0x01u == ret)
  2097   001CA8  0414               	decf	lcd_4bit_send_string@ret^0,w,c
  2098   001CAA  A4D8               	btfss	status,2,c
  2099   001CAC  EF5A  F00E         	goto	u2461
  2100   001CB0  EF5C  F00E         	goto	u2460
  2101   001CB4                     u2461:
  2102   001CB4  EF5E  F00E         	goto	l3262
  2103   001CB8                     u2460:
  2104   001CB8  EF6D  F00E         	goto	l3264
  2105   001CBC                     l3262:
  2106                           
  2107                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 180:         while (*str)
  2108   001CBC  C013  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  2109   001CC0                     	if	1	;There is more than 1 active tblptr byte
  2110   001CC0  0E10               	movlw	high __smallconst
  2111   001CC2  6EF7               	movwf	tblptrh,c
  2112   001CC4                     	endif
  2113   001CC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2114   001CC4  6AF8               	clrf	tblptru,c
  2115   001CC6                     	endif
  2116   001CC6                     	if	0	;tblptru may be non-zero
  2117   001CC6                     	endif
  2118   001CC6  0008               	tblrd		*
  2119   001CC8  50F5               	movf	tablat,w,c
  2120   001CCA  0900               	iorlw	0
  2121   001CCC  A4D8               	btfss	status,2,c
  2122   001CCE  EF6B  F00E         	goto	u2471
  2123   001CD2  EF6D  F00E         	goto	u2470
  2124   001CD6                     u2471:
  2125   001CD6  EF46  F00E         	goto	l3254
  2126   001CDA                     u2470:
  2127   001CDA                     l3264:
  2128                           
  2129                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 191:  return (ret);
  2130   001CDA  5014               	movf	lcd_4bit_send_string@ret^0,w,c
  2131   001CDC  0012               	return		;funcret
  2132   001CDE                     __end_of_lcd_4bit_send_string:
  2133                           	callstack 0
  2134                           
  2135 ;; *************** function _lcd_4bit_send_custom_char *****************
  2136 ;; Defined at:
  2137 ;;		line 212 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;  lcd             1   26[COMRAM] PTR const struct .
  2140 ;;		 -> lcd_1(6), 
  2141 ;;  row             1   27[COMRAM] unsigned char 
  2142 ;;  col             1   28[COMRAM] unsigned char 
  2143 ;;  _char           1   29[COMRAM] PTR const unsigned char 
  2144 ;;		 -> custom6(8), custom5(8), custom4(8), custom3(8), 
  2145 ;;		 -> custom2(8), custom1(8), 
  2146 ;;  mem_pos         1   30[COMRAM] unsigned char 
  2147 ;; Auto vars:     Size  Location     Type
  2148 ;;  ret             1   32[COMRAM] unsigned char 
  2149 ;;  lcd_counter     1   31[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      unsigned char 
  2152 ;; Registers used:
  2153 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2159 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;Total ram usage:        7 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 5
  2166 ;; This function calls:
  2167 ;;		_lcd_4bit_send_char_data
  2168 ;;		_lcd_4bit_send_char_data_pos
  2169 ;;		_lcd_4bit_send_command
  2170 ;; This function is called by:
  2171 ;;		_main
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text9
  2176   001BC6                     __ptext9:
  2177                           	callstack 0
  2178   001BC6                     _lcd_4bit_send_custom_char:
  2179                           	callstack 25
  2180   001BC6                     
  2181                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 215:     uint8 lcd_counter = 0x00;
  2182   001BC6  0E00               	movlw	0
  2183   001BC8  6E20               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  2184                           
  2185                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 217:  if (((void*)0) == lcd)
  2186   001BCA  501B               	movf	lcd_4bit_send_custom_char@lcd^0,w,c
  2187   001BCC  A4D8               	btfss	status,2,c
  2188   001BCE  EFEB  F00D         	goto	u2691
  2189   001BD2  EFED  F00D         	goto	u2690
  2190   001BD6                     u2691:
  2191   001BD6  EFF1  F00D         	goto	l3410
  2192   001BDA                     u2690:
  2193   001BDA                     
  2194                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 218:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 219:     
      +                           ret = (Std_ReturnType)0x01u;
  2195   001BDA  0E01               	movlw	1
  2196   001BDC  6E21               	movwf	lcd_4bit_send_custom_char@ret^0,c
  2197                           
  2198                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 220:  }
  2199   001BDE  EF2E  F00E         	goto	l3432
  2200   001BE2                     l3410:
  2201                           
  2202                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 222:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 224:   re
      +                          t = lcd_4bit_send_command(lcd, (0x40) + (mem_pos * 8));
  2203   001BE2  C01B  F00F         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_command@lcd
  2204   001BE6  501F               	movf	lcd_4bit_send_custom_char@mem_pos^0,w,c
  2205   001BE8  0D08               	mullw	8
  2206   001BEA  50F3               	movf	243,w,c
  2207   001BEC  0F40               	addlw	64
  2208   001BEE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2209   001BF0  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  2210   001BF4  6E21               	movwf	lcd_4bit_send_custom_char@ret^0,c
  2211   001BF6                     
  2212                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 225:   if ((Std_ReturnType)0x00u == ret)
  2213   001BF6  5021               	movf	lcd_4bit_send_custom_char@ret^0,w,c
  2214   001BF8  A4D8               	btfss	status,2,c
  2215   001BFA  EF01  F00E         	goto	u2701
  2216   001BFE  EF03  F00E         	goto	u2700
  2217   001C02                     u2701:
  2218   001C02  EF2E  F00E         	goto	l3432
  2219   001C06                     u2700:
  2220   001C06                     
  2221                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 226:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 227:    
      +                          for (lcd_counter = 0; lcd_counter < 7; lcd_counter++)
  2222   001C06  0E00               	movlw	0
  2223   001C08  6E20               	movwf	lcd_4bit_send_custom_char@lcd_counter^0,c
  2224   001C0A                     l3420:
  2225                           
  2226                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 228:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 229:   
      +                            ret = lcd_4bit_send_char_data(lcd, _char[lcd_counter]);
  2227   001C0A  C01B  F00F         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data@lcd
  2228   001C0E  501E               	movf	lcd_4bit_send_custom_char@_char^0,w,c
  2229   001C10  2420               	addwf	lcd_4bit_send_custom_char@lcd_counter^0,w,c
  2230   001C12  6ED9               	movwf	fsr2l,c
  2231   001C14  6ADA               	clrf	fsr2h,c
  2232   001C16  50DF               	movf	indf2,w,c
  2233   001C18  6E10               	movwf	lcd_4bit_send_char_data@data^0,c
  2234   001C1A  ECF6  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  2235   001C1E  6E21               	movwf	lcd_4bit_send_custom_char@ret^0,c
  2236   001C20                     
  2237                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 230:     if ((Std_ReturnType)0x01u == ret)
  2238   001C20  0421               	decf	lcd_4bit_send_custom_char@ret^0,w,c
  2239   001C22  A4D8               	btfss	status,2,c
  2240   001C24  EF16  F00E         	goto	u2711
  2241   001C28  EF18  F00E         	goto	u2710
  2242   001C2C                     u2711:
  2243   001C2C  EF1A  F00E         	goto	l3426
  2244   001C30                     u2710:
  2245   001C30  EF23  F00E         	goto	l3430
  2246   001C34                     l3426:
  2247                           
  2248                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 234:    }
  2249   001C34  2A20               	incf	lcd_4bit_send_custom_char@lcd_counter^0,f,c
  2250   001C36  0E06               	movlw	6
  2251   001C38  6420               	cpfsgt	lcd_4bit_send_custom_char@lcd_counter^0,c
  2252   001C3A  EF21  F00E         	goto	u2721
  2253   001C3E  EF23  F00E         	goto	u2720
  2254   001C42                     u2721:
  2255   001C42  EF05  F00E         	goto	l3420
  2256   001C46                     u2720:
  2257   001C46                     l3430:
  2258                           
  2259                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 235:    ret = lcd_4bit_send_char_data_pos(lcd, row, 
      +                          col, mem_pos);
  2260   001C46  C01B  F016         	movff	lcd_4bit_send_custom_char@lcd,lcd_4bit_send_char_data_pos@lcd
  2261   001C4A  C01C  F017         	movff	lcd_4bit_send_custom_char@row,lcd_4bit_send_char_data_pos@row
  2262   001C4E  C01D  F018         	movff	lcd_4bit_send_custom_char@col,lcd_4bit_send_char_data_pos@col
  2263   001C52  C01F  F019         	movff	lcd_4bit_send_custom_char@mem_pos,lcd_4bit_send_char_data_pos@data
  2264   001C56  ECEB  F00F         	call	_lcd_4bit_send_char_data_pos	;wreg free
  2265   001C5A  6E21               	movwf	lcd_4bit_send_custom_char@ret^0,c
  2266   001C5C                     l3432:
  2267                           
  2268                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 239:  return (ret);
  2269   001C5C  5021               	movf	lcd_4bit_send_custom_char@ret^0,w,c
  2270   001C5E  0012               	return		;funcret
  2271   001C60                     __end_of_lcd_4bit_send_custom_char:
  2272                           	callstack 0
  2273                           
  2274 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  2275 ;; Defined at:
  2276 ;;		line 153 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2277 ;; Parameters:    Size  Location     Type
  2278 ;;  lcd             1   21[COMRAM] PTR const struct .
  2279 ;;		 -> lcd_1(6), 
  2280 ;;  row             1   22[COMRAM] unsigned char 
  2281 ;;  col             1   23[COMRAM] unsigned char 
  2282 ;;  data            1   24[COMRAM] unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  ret             1   25[COMRAM] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2295 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2297 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2298 ;;Total ram usage:        5 bytes
  2299 ;; Hardware stack levels used: 1
  2300 ;; Hardware stack levels required when called: 4
  2301 ;; This function calls:
  2302 ;;		_lcd_4bit_send_char_data
  2303 ;;		_lcd_4bit_set_cursor
  2304 ;; This function is called by:
  2305 ;;		_lcd_4bit_send_custom_char
  2306 ;;		_main
  2307 ;; This function uses a non-reentrant model
  2308 ;;
  2309                           
  2310                           	psect	text10
  2311   001FD6                     __ptext10:
  2312                           	callstack 0
  2313   001FD6                     _lcd_4bit_send_char_data_pos:
  2314                           	callstack 25
  2315   001FD6                     
  2316                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 156:  if (((void*)0) == lcd)
  2317   001FD6  5016               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  2318   001FD8  A4D8               	btfss	status,2,c
  2319   001FDA  EFF1  F00F         	goto	u2421
  2320   001FDE  EFF3  F00F         	goto	u2420
  2321   001FE2                     u2421:
  2322   001FE2  EFF7  F00F         	goto	l3238
  2323   001FE6                     u2420:
  2324   001FE6                     
  2325                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 157:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 158:     
      +                           ret = (Std_ReturnType)0x01u;
  2326   001FE6  0E01               	movlw	1
  2327   001FE8  6E1A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2328                           
  2329                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 159:  }
  2330   001FEA  EF0F  F010         	goto	l3244
  2331   001FEE                     l3238:
  2332                           
  2333                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 161:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 162:     
      +                              ret = lcd_4bit_set_cursor(lcd, row, col);
  2334   001FEE  C016  F012         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_cursor@lcd
  2335   001FF2  C017  F013         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_cursor@row
  2336   001FF6  C018  F014         	movff	lcd_4bit_send_char_data_pos@col,lcd_4bit_set_cursor@col
  2337   001FFA  ECA0  F00C         	call	_lcd_4bit_set_cursor	;wreg free
  2338   001FFE  6E1A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2339   002000                     
  2340                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 163:         if ((Std_ReturnType)0x00u == ret)
  2341   002000  501A               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  2342   002002  A4D8               	btfss	status,2,c
  2343   002004  EF06  F010         	goto	u2431
  2344   002008  EF08  F010         	goto	u2430
  2345   00200C                     u2431:
  2346   00200C  EF0F  F010         	goto	l3244
  2347   002010                     u2430:
  2348   002010                     
  2349                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 164:             ret = lcd_4bit_send_char_data(lcd, 
      +                          data);
  2350   002010  C016  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  2351   002014  C019  F010         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  2352   002018  ECF6  F00C         	call	_lcd_4bit_send_char_data	;wreg free
  2353   00201C  6E1A               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  2354   00201E                     l3244:
  2355                           
  2356                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 168:  return (ret);
  2357   00201E  501A               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  2358   002020  0012               	return		;funcret
  2359   002022                     __end_of_lcd_4bit_send_char_data_pos:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _lcd_4bit_set_cursor *****************
  2363 ;; Defined at:
  2364 ;;		line 461 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  lcd             1   17[COMRAM] PTR const struct .
  2367 ;;		 -> lcd_1(6), 
  2368 ;;  row             1   18[COMRAM] unsigned char 
  2369 ;;  col             1   19[COMRAM] unsigned char 
  2370 ;; Auto vars:     Size  Location     Type
  2371 ;;  ret             1   20[COMRAM] unsigned char 
  2372 ;; Return value:  Size  Location     Type
  2373 ;;                  1    wreg      unsigned char 
  2374 ;; Registers used:
  2375 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2376 ;; Tracked objects:
  2377 ;;		On entry : 0/0
  2378 ;;		On exit  : 0/0
  2379 ;;		Unchanged: 0/0
  2380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2381 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2382 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2384 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2385 ;;Total ram usage:        4 bytes
  2386 ;; Hardware stack levels used: 1
  2387 ;; Hardware stack levels required when called: 3
  2388 ;; This function calls:
  2389 ;;		_lcd_4bit_send_command
  2390 ;; This function is called by:
  2391 ;;		_lcd_4bit_send_char_data_pos
  2392 ;;		_lcd_4bit_send_string_pos
  2393 ;; This function uses a non-reentrant model
  2394 ;;
  2395                           
  2396                           	psect	text11
  2397   001940                     __ptext11:
  2398                           	callstack 0
  2399   001940                     _lcd_4bit_set_cursor:
  2400                           	callstack 26
  2401   001940                     
  2402                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 465:  if (((void*)0) == lcd)
  2403   001940  5012               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  2404   001942  A4D8               	btfss	status,2,c
  2405   001944  EFA6  F00C         	goto	u2211
  2406   001948  EFA8  F00C         	goto	u2210
  2407   00194C                     u2211:
  2408   00194C  EFAC  F00C         	goto	l3090
  2409   001950                     u2210:
  2410   001950                     l3088:
  2411                           
  2412                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 466:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 467:   re
      +                          t = (Std_ReturnType)0x01u;
  2413   001950  0E01               	movlw	1
  2414   001952  6E15               	movwf	lcd_4bit_set_cursor@ret^0,c
  2415                           
  2416                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 468:  }
  2417   001954  EFF4  F00C         	goto	l3110
  2418   001958                     l3090:
  2419                           
  2420                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 470:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 471:   co
      +                          l--;
  2421   001958  0614               	decf	lcd_4bit_set_cursor@col^0,f,c
  2422   00195A                     
  2423                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 472:   if ((0xff) == col)
  2424   00195A  2814               	incf	lcd_4bit_set_cursor@col^0,w,c
  2425   00195C  A4D8               	btfss	status,2,c
  2426   00195E  EFB3  F00C         	goto	u2221
  2427   001962  EFB5  F00C         	goto	u2220
  2428   001966                     u2221:
  2429   001966  EFE1  F00C         	goto	l3108
  2430   00196A                     u2220:
  2431   00196A                     
  2432                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 473:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 474:    
      +                          col = 0;
  2433   00196A  0E00               	movlw	0
  2434   00196C  6E14               	movwf	lcd_4bit_set_cursor@col^0,c
  2435   00196E  EFE1  F00C         	goto	l3108
  2436   001972                     l3096:
  2437                           
  2438                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 479:                 ret = lcd_4bit_send_command(lcd
      +                          , 0x80 + col);
  2439   001972  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2440   001976  5014               	movf	lcd_4bit_set_cursor@col^0,w,c
  2441   001978  0F80               	addlw	128
  2442   00197A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2443   00197C  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  2444   001980  6E15               	movwf	lcd_4bit_set_cursor@ret^0,c
  2445                           
  2446                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 480:                 break;
  2447   001982  EFF4  F00C         	goto	l3110
  2448   001986                     l3098:
  2449                           
  2450                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 482:                 ret = lcd_4bit_send_command(lcd
      +                          , 0xC0 + col);
  2451   001986  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2452   00198A  5014               	movf	lcd_4bit_set_cursor@col^0,w,c
  2453   00198C  0FC0               	addlw	192
  2454   00198E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2455   001990  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  2456   001994  6E15               	movwf	lcd_4bit_set_cursor@ret^0,c
  2457                           
  2458                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 483:                 break;
  2459   001996  EFF4  F00C         	goto	l3110
  2460   00199A                     l3100:
  2461                           
  2462                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 485:                 ret = lcd_4bit_send_command(lcd
      +                          , 0x94 + col);
  2463   00199A  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2464   00199E  5014               	movf	lcd_4bit_set_cursor@col^0,w,c
  2465   0019A0  0F94               	addlw	148
  2466   0019A2  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2467   0019A4  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  2468   0019A8  6E15               	movwf	lcd_4bit_set_cursor@ret^0,c
  2469                           
  2470                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 486:                 break;
  2471   0019AA  EFF4  F00C         	goto	l3110
  2472   0019AE                     l3102:
  2473                           
  2474                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 488:                 ret = lcd_4bit_send_command(lcd
      +                          , 0xD4 + col);
  2475   0019AE  C012  F00F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_command@lcd
  2476   0019B2  5014               	movf	lcd_4bit_set_cursor@col^0,w,c
  2477   0019B4  0FD4               	addlw	212
  2478   0019B6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2479   0019B8  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  2480   0019BC  6E15               	movwf	lcd_4bit_set_cursor@ret^0,c
  2481                           
  2482                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 489:                 break;
  2483   0019BE  EFF4  F00C         	goto	l3110
  2484   0019C2                     l3108:
  2485   0019C2  5013               	movf	lcd_4bit_set_cursor@row^0,w,c
  2486                           
  2487                           ; Switch size 1, requested type "simple"
  2488                           ; Number of cases is 4, Range of values is 1 to 4
  2489                           ; switch strategies available:
  2490                           ; Name         Instructions Cycles
  2491                           ; simple_byte           13     7 (average)
  2492                           ;	Chosen strategy is simple_byte
  2493   0019C4  0A01               	xorlw	1	; case 1
  2494   0019C6  B4D8               	btfsc	status,2,c
  2495   0019C8  EFB9  F00C         	goto	l3096
  2496   0019CC  0A03               	xorlw	3	; case 2
  2497   0019CE  B4D8               	btfsc	status,2,c
  2498   0019D0  EFC3  F00C         	goto	l3098
  2499   0019D4  0A01               	xorlw	1	; case 3
  2500   0019D6  B4D8               	btfsc	status,2,c
  2501   0019D8  EFCD  F00C         	goto	l3100
  2502   0019DC  0A07               	xorlw	7	; case 4
  2503   0019DE  B4D8               	btfsc	status,2,c
  2504   0019E0  EFD7  F00C         	goto	l3102
  2505   0019E4  EFA8  F00C         	goto	l3088
  2506   0019E8                     l3110:
  2507                           
  2508                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 495:  return (ret);
  2509   0019E8  5015               	movf	lcd_4bit_set_cursor@ret^0,w,c
  2510   0019EA  0012               	return		;funcret
  2511   0019EC                     __end_of_lcd_4bit_set_cursor:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _lcd_4bit_send_char_data *****************
  2515 ;; Defined at:
  2516 ;;		line 125 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  lcd             1   14[COMRAM] PTR const struct .
  2519 ;;		 -> lcd_1(6), 
  2520 ;;  data            1   15[COMRAM] unsigned char 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;  ret             1   16[COMRAM] unsigned char 
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  1    wreg      unsigned char 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2532 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2535 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;Total ram usage:        3 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 2
  2539 ;; This function calls:
  2540 ;;		_gpio_pin_write_logic
  2541 ;;		_lcd_4bit_send_enable_signal
  2542 ;;		_lcd_send_4bits
  2543 ;; This function is called by:
  2544 ;;		_lcd_4bit_send_char_data_pos
  2545 ;;		_lcd_4bit_send_string
  2546 ;;		_lcd_4bit_send_custom_char
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text12
  2551   0019EC                     __ptext12:
  2552                           	callstack 0
  2553   0019EC                     _lcd_4bit_send_char_data:
  2554                           	callstack 26
  2555   0019EC                     
  2556                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 128:  if (((void*)0) == lcd)
  2557   0019EC  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  2558   0019EE  A4D8               	btfss	status,2,c
  2559   0019F0  EFFC  F00C         	goto	u2161
  2560   0019F4  EFFE  F00C         	goto	u2160
  2561   0019F8                     u2161:
  2562   0019F8  EF02  F00D         	goto	l3064
  2563   0019FC                     u2160:
  2564   0019FC                     
  2565                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 129:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 130:     
      +                           ret = (Std_ReturnType)0x01u;
  2566   0019FC  0E01               	movlw	1
  2567   0019FE  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2568                           
  2569                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 131:  }
  2570   001A00  EF44  F00D         	goto	l3082
  2571   001A04                     l3064:
  2572                           
  2573                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 133:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 134:     
      +                              ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  2574   001A04  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config_t
  2575   001A08  0E01               	movlw	1
  2576   001A0A  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2577   001A0C  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  2578   001A10  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2579   001A12                     
  2580                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 135:         if ((Std_ReturnType)0x00u == ret)
  2581   001A12  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2582   001A14  A4D8               	btfss	status,2,c
  2583   001A16  EF0F  F00D         	goto	u2171
  2584   001A1A  EF11  F00D         	goto	u2170
  2585   001A1E                     u2171:
  2586   001A1E  EF44  F00D         	goto	l3082
  2587   001A22                     u2170:
  2588   001A22                     
  2589                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 136:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 13
      +                          7:             ret = lcd_send_4bits(lcd, data >> 4);
  2590   001A22  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2591   001A26  3810               	swapf	lcd_4bit_send_char_data@data^0,w,c
  2592   001A28  0B0F               	andlw	15
  2593   001A2A  6E0A               	movwf	lcd_send_4bits@data_command^0,c
  2594   001A2C  EC6F  F00E         	call	_lcd_send_4bits	;wreg free
  2595   001A30  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2596   001A32                     
  2597                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 138:             if ((Std_ReturnType)0x00u == ret)
  2598   001A32  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2599   001A34  A4D8               	btfss	status,2,c
  2600   001A36  EF1F  F00D         	goto	u2181
  2601   001A3A  EF21  F00D         	goto	u2180
  2602   001A3E                     u2181:
  2603   001A3E  EF26  F00D         	goto	l3074
  2604   001A42                     u2180:
  2605   001A42                     
  2606                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 139:                 ret = lcd_4bit_send_enable_sign
      +                          al(lcd);
  2607   001A42  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2608   001A46  EC9D  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  2609   001A4A  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2610   001A4C                     l3074:
  2611                           
  2612                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 140:             if ((Std_ReturnType)0x00u == ret)
  2613   001A4C  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2614   001A4E  A4D8               	btfss	status,2,c
  2615   001A50  EF2C  F00D         	goto	u2191
  2616   001A54  EF2E  F00D         	goto	u2190
  2617   001A58                     u2191:
  2618   001A58  EF44  F00D         	goto	l3082
  2619   001A5C                     u2190:
  2620   001A5C                     
  2621                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 141:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c
      +                          : 142:                 ret = lcd_send_4bits(lcd, data);
  2622   001A5C  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bits@lcd
  2623   001A60  C010  F00A         	movff	lcd_4bit_send_char_data@data,lcd_send_4bits@data_command
  2624   001A64  EC6F  F00E         	call	_lcd_send_4bits	;wreg free
  2625   001A68  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2626   001A6A                     
  2627                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 143:                 if ((Std_ReturnType)0x00u == re
      +                          t)
  2628   001A6A  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2629   001A6C  A4D8               	btfss	status,2,c
  2630   001A6E  EF3B  F00D         	goto	u2201
  2631   001A72  EF3D  F00D         	goto	u2200
  2632   001A76                     u2201:
  2633   001A76  EF44  F00D         	goto	l99
  2634   001A7A                     u2200:
  2635   001A7A                     
  2636                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 144:                     ret = lcd_4bit_send_enable_
      +                          signal(lcd);
  2637   001A7A  C00F  F009         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_signal@lcd
  2638   001A7E  EC9D  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  2639   001A82  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  2640   001A84  EF44  F00D         	goto	l3082
  2641   001A88                     l99:
  2642   001A88                     l3082:
  2643                           
  2644                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 150:  return (ret);
  2645   001A88  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  2646   001A8A  0012               	return		;funcret
  2647   001A8C                     __end_of_lcd_4bit_send_char_data:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function _application_init *****************
  2651 ;; Defined at:
  2652 ;;		line 110 in file "app.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;		None
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  ret             1   22[COMRAM] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      unsigned char 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        1 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 5
  2673 ;; This function calls:
  2674 ;;		_ecu_layer_initialize
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text13
  2681   0020F2                     __ptext13:
  2682                           	callstack 0
  2683   0020F2                     _application_init:
  2684                           	callstack 25
  2685   0020F2                     
  2686                           ;app.c: 113:     ret = ecu_layer_initialize();
  2687   0020F2  EC54  F010         	call	_ecu_layer_initialize	;wreg free
  2688   0020F6  6E17               	movwf	application_init@ret^0,c
  2689   0020F8                     
  2690                           ;app.c: 115:     return (ret);
  2691   0020F8  5017               	movf	application_init@ret^0,w,c
  2692   0020FA  0012               	return		;funcret
  2693   0020FC                     __end_of_application_init:
  2694                           	callstack 0
  2695                           
  2696 ;; *************** function _ecu_layer_initialize *****************
  2697 ;; Defined at:
  2698 ;;		line 78 in file "ECU_Layer/ecu_layer_init.c"
  2699 ;; Parameters:    Size  Location     Type
  2700 ;;		None
  2701 ;; Auto vars:     Size  Location     Type
  2702 ;;  ret             1   21[COMRAM] unsigned char 
  2703 ;; Return value:  Size  Location     Type
  2704 ;;                  1    wreg      unsigned char 
  2705 ;; Registers used:
  2706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2707 ;; Tracked objects:
  2708 ;;		On entry : 0/0
  2709 ;;		On exit  : 0/0
  2710 ;;		Unchanged: 0/0
  2711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;Total ram usage:        1 bytes
  2717 ;; Hardware stack levels used: 1
  2718 ;; Hardware stack levels required when called: 4
  2719 ;; This function calls:
  2720 ;;		_lcd_4bit_initialize
  2721 ;;		_lcd_8bit_initialize
  2722 ;; This function is called by:
  2723 ;;		_application_init
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text14
  2728   0020A8                     __ptext14:
  2729                           	callstack 0
  2730   0020A8                     _ecu_layer_initialize:
  2731                           	callstack 25
  2732   0020A8                     
  2733                           ;ECU_Layer/ecu_layer_init.c: 82:     ret = lcd_4bit_initialize(&lcd_1);
  2734   0020A8  0E28               	movlw	low _lcd_1
  2735   0020AA  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
  2736   0020AC  ECD1  F009         	call	_lcd_4bit_initialize	;wreg free
  2737   0020B0  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2738   0020B2                     
  2739                           ;ECU_Layer/ecu_layer_init.c: 83:     if ((Std_ReturnType)0x00u == ret)
  2740   0020B2  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2741   0020B4  A4D8               	btfss	status,2,c
  2742   0020B6  EF5F  F010         	goto	u2531
  2743   0020BA  EF61  F010         	goto	u2530
  2744   0020BE                     u2531:
  2745   0020BE  EF66  F010         	goto	l3308
  2746   0020C2                     u2530:
  2747   0020C2                     
  2748                           ;ECU_Layer/ecu_layer_init.c: 84:     {;ECU_Layer/ecu_layer_init.c: 85:         ret = lcd
      +                          _8bit_initialize(&lcd_2);
  2749   0020C2  0E7E               	movlw	low _lcd_2
  2750   0020C4  6E11               	movwf	lcd_8bit_initialize@lcd^0,c
  2751   0020C6  EC77  F00A         	call	_lcd_8bit_initialize	;wreg free
  2752   0020CA  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2753   0020CC                     l3308:
  2754                           
  2755                           ;ECU_Layer/ecu_layer_init.c: 88:     return (ret);
  2756   0020CC  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2757   0020CE  0012               	return		;funcret
  2758   0020D0                     __end_of_ecu_layer_initialize:
  2759                           	callstack 0
  2760                           
  2761 ;; *************** function _lcd_8bit_initialize *****************
  2762 ;; Defined at:
  2763 ;;		line 244 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  lcd             1   16[COMRAM] PTR const struct .
  2766 ;;		 -> lcd_2(10), 
  2767 ;; Auto vars:     Size  Location     Type
  2768 ;;  ret             1   19[COMRAM] unsigned char 
  2769 ;;  lcd_data_cou    1   18[COMRAM] unsigned char 
  2770 ;; Return value:  Size  Location     Type
  2771 ;;                  1    wreg      unsigned char 
  2772 ;; Registers used:
  2773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2774 ;; Tracked objects:
  2775 ;;		On entry : 0/0
  2776 ;;		On exit  : 0/0
  2777 ;;		Unchanged: 0/0
  2778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;Total ram usage:        4 bytes
  2784 ;; Hardware stack levels used: 1
  2785 ;; Hardware stack levels required when called: 3
  2786 ;; This function calls:
  2787 ;;		_gpio_pin_initialize
  2788 ;;		_lcd_8bit_send_command
  2789 ;; This function is called by:
  2790 ;;		_ecu_layer_initialize
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text15
  2795   0014EE                     __ptext15:
  2796                           	callstack 0
  2797   0014EE                     _lcd_8bit_initialize:
  2798                           	callstack 25
  2799   0014EE                     
  2800                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 247:     uint8 lcd_data_counter = 0x00;
  2801   0014EE  0E00               	movlw	0
  2802   0014F0  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2803                           
  2804                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 248:  if (((void*)0) == lcd)
  2805   0014F2  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2806   0014F4  A4D8               	btfss	status,2,c
  2807   0014F6  EF7F  F00A         	goto	u2231
  2808   0014FA  EF81  F00A         	goto	u2230
  2809   0014FE                     u2231:
  2810   0014FE  EF85  F00A         	goto	l3118
  2811   001502                     u2230:
  2812   001502                     
  2813                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 249:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 250:     
      +                           ret = (Std_ReturnType)0x01u;
  2814   001502  0E01               	movlw	1
  2815   001504  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2816                           
  2817                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 251:  }
  2818   001506  EF11  F00B         	goto	l3156
  2819   00150A                     l3118:
  2820                           
  2821                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 253:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 254:     
      +                              ret = gpio_pin_initialize(&(lcd->lcd_rs));
  2822   00150A  C011  F008         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  2823   00150E  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  2824   001512  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2825   001514                     
  2826                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 255:         if ((Std_ReturnType)0x00u == ret)
  2827   001514  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2828   001516  A4D8               	btfss	status,2,c
  2829   001518  EF90  F00A         	goto	u2241
  2830   00151C  EF92  F00A         	goto	u2240
  2831   001520                     u2241:
  2832   001520  EF11  F00B         	goto	l3156
  2833   001524                     u2240:
  2834   001524                     
  2835                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 256:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 25
      +                          7:             ret = gpio_pin_initialize(&(lcd->lcd_en));
  2836   001524  2811               	incf	lcd_8bit_initialize@lcd^0,w,c
  2837   001526  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2838   001528  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  2839   00152C  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2840   00152E                     
  2841                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 258:             if ((Std_ReturnType)0x00u == ret)
  2842   00152E  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2843   001530  A4D8               	btfss	status,2,c
  2844   001532  EF9D  F00A         	goto	u2251
  2845   001536  EF9F  F00A         	goto	u2250
  2846   00153A                     u2251:
  2847   00153A  EFBB  F00A         	goto	l3142
  2848   00153E                     u2250:
  2849   00153E                     
  2850                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 259:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c
      +                          : 260:                 for (lcd_data_counter = 0x00; lcd_data_counter < 8; lcd_data_coun
      +                          ter++)
  2851   00153E  0E00               	movlw	0
  2852   001540  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2853   001542                     l3132:
  2854                           
  2855                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 261:                 {;ECU_Layer/Char_LCD/ecu_char_l
      +                          cd.c: 262:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counte
      +                          r]));
  2856   001542  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2857   001544  2413               	addwf	lcd_8bit_initialize@lcd_data_counter^0,w,c
  2858   001546  0F02               	addlw	2
  2859   001548  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2860   00154A  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  2861   00154E  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2862   001550                     
  2863                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 263:                     if ((Std_ReturnType)0x01u =
      +                          = ret)
  2864   001550  0414               	decf	lcd_8bit_initialize@ret^0,w,c
  2865   001552  A4D8               	btfss	status,2,c
  2866   001554  EFAE  F00A         	goto	u2261
  2867   001558  EFB0  F00A         	goto	u2260
  2868   00155C                     u2261:
  2869   00155C  EFB2  F00A         	goto	l3138
  2870   001560                     u2260:
  2871   001560  EFBB  F00A         	goto	l3142
  2872   001564                     l3138:
  2873                           
  2874                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 267:                 }
  2875   001564  2A13               	incf	lcd_8bit_initialize@lcd_data_counter^0,f,c
  2876   001566  0E07               	movlw	7
  2877   001568  6413               	cpfsgt	lcd_8bit_initialize@lcd_data_counter^0,c
  2878   00156A  EFB9  F00A         	goto	u2271
  2879   00156E  EFBB  F00A         	goto	u2270
  2880   001572                     u2271:
  2881   001572  EFA1  F00A         	goto	l3132
  2882   001576                     u2270:
  2883   001576                     l3142:
  2884                           
  2885                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 270:    _delay((unsigned long)((20)*((8 *1000UL *100
      +                          0UL)/4000.0)));
  2886   001576  0E34               	movlw	52
  2887   001578  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2888   00157A  0EF2               	movlw	242
  2889   00157C                     u3577:
  2890   00157C  2EE8               	decfsz	wreg,f,c
  2891   00157E  D7FE               	bra	u3577
  2892   001580  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2893   001582  D7FC               	bra	u3577
  2894   001584  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2895   001588  0E38               	movlw	56
  2896   00158A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2897   00158C  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2898   001590                     
  2899                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 272:    _delay((unsigned long)((5)*((8 *1000UL *1000
      +                          UL)/4000.0)));
  2900   001590  0E0D               	movlw	13
  2901   001592  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2902   001594  0EFC               	movlw	252
  2903   001596                     u3587:
  2904   001596  2EE8               	decfsz	wreg,f,c
  2905   001598  D7FE               	bra	u3587
  2906   00159A  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2907   00159C  D7FC               	bra	u3587
  2908   00159E  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2909   0015A2  0E38               	movlw	56
  2910   0015A4  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2911   0015A6  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2912   0015AA                     
  2913                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 274:    _delay((unsigned long)((150)*((8 *1000UL *10
      +                          00UL)/4000000.0)));
  2914   0015AA  0E64               	movlw	100
  2915   0015AC                     u3597:
  2916   0015AC  2EE8               	decfsz	wreg,f,c
  2917   0015AE  D7FE               	bra	u3597
  2918   0015B0                     
  2919                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 275:    ret = lcd_8bit_send_command(lcd, 0x38);
  2920   0015B0  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2921   0015B4  0E38               	movlw	56
  2922   0015B6  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2923   0015B8  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2924   0015BC  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2925   0015BE                     
  2926                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 277:    if ((Std_ReturnType)0x00u == ret)
  2927   0015BE  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2928   0015C0  A4D8               	btfss	status,2,c
  2929   0015C2  EFE5  F00A         	goto	u2281
  2930   0015C6  EFE7  F00A         	goto	u2280
  2931   0015CA                     u2281:
  2932   0015CA  EF11  F00B         	goto	l3156
  2933   0015CE                     u2280:
  2934   0015CE                     
  2935                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 278:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 279:   
      +                            ret |= lcd_8bit_send_command(lcd, 0x01);
  2936   0015CE  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2937   0015D2  0E01               	movlw	1
  2938   0015D4  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2939   0015D6  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2940   0015DA  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2941                           
  2942                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 280:     ret |= lcd_8bit_send_command(lcd, 0x02);
  2943   0015DC  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2944   0015E0  0E02               	movlw	2
  2945   0015E2  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2946   0015E4  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2947   0015E8  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2948                           
  2949                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 281:     ret |= lcd_8bit_send_command(lcd, 0x06);
  2950   0015EA  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2951   0015EE  0E06               	movlw	6
  2952   0015F0  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2953   0015F2  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2954   0015F6  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2955                           
  2956                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 282:     ret |= lcd_8bit_send_command(lcd, 0x0C);
  2957   0015F8  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2958   0015FC  0E0C               	movlw	12
  2959   0015FE  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2960   001600  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2961   001604  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2962                           
  2963                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 283:     ret |= lcd_8bit_send_command(lcd, 0x38);
  2964   001606  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2965   00160A  0E38               	movlw	56
  2966   00160C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2967   00160E  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2968   001612  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2969                           
  2970                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 284:     ret |= lcd_8bit_send_command(lcd, 0x80);
  2971   001614  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2972   001618  0E80               	movlw	128
  2973   00161A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2974   00161C  ECF3  F00B         	call	_lcd_8bit_send_command	;wreg free
  2975   001620  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2976   001622                     l3156:
  2977                           
  2978                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 288:  return (ret);
  2979   001622  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2980   001624  0012               	return		;funcret
  2981   001626                     __end_of_lcd_8bit_initialize:
  2982                           	callstack 0
  2983                           
  2984 ;; *************** function _lcd_8bit_send_command *****************
  2985 ;; Defined at:
  2986 ;;		line 291 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2987 ;; Parameters:    Size  Location     Type
  2988 ;;  lcd             1   10[COMRAM] PTR const struct .
  2989 ;;		 -> lcd_2(10), 
  2990 ;;  command         1   11[COMRAM] unsigned char 
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  ret             1   15[COMRAM] unsigned char 
  2993 ;;  counter         1   14[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      unsigned char 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		_gpio_pin_write_logic
  3012 ;;		_lcd_8bit_send_enable_signal
  3013 ;; This function is called by:
  3014 ;;		_lcd_8bit_initialize
  3015 ;;		_lcd_8bit_send_custom_char
  3016 ;;		_lcd_8bit_set_cursor
  3017 ;; This function uses a non-reentrant model
  3018 ;;
  3019                           
  3020                           	psect	text16
  3021   0017E6                     __ptext16:
  3022                           	callstack 0
  3023   0017E6                     _lcd_8bit_send_command:
  3024                           	callstack 26
  3025   0017E6                     
  3026                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 294:  uint8 counter = 0x00;
  3027   0017E6  0E00               	movlw	0
  3028   0017E8  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  3029                           
  3030                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 296:  if (((void*)0) == lcd)
  3031   0017EA  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  3032   0017EC  A4D8               	btfss	status,2,c
  3033   0017EE  EFFB  F00B         	goto	u2031
  3034   0017F2  EFFD  F00B         	goto	u2030
  3035   0017F6                     u2031:
  3036   0017F6  EF01  F00C         	goto	l2984
  3037   0017FA                     u2030:
  3038   0017FA                     
  3039                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 297:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 298:     
      +                           ret = (Std_ReturnType)0x01u;
  3040   0017FA  0E01               	movlw	1
  3041   0017FC  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3042                           
  3043                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 299:  }
  3044   0017FE  EF48  F00C         	goto	l3008
  3045   001802                     l2984:
  3046                           
  3047                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 301:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 302:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  3048   001802  C00B  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  3049   001806  0E00               	movlw	0
  3050   001808  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3051   00180A  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3052   00180E  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3053   001810                     
  3054                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 303:   if ((Std_ReturnType)0x00u == ret)
  3055   001810  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  3056   001812  A4D8               	btfss	status,2,c
  3057   001814  EF0E  F00C         	goto	u2041
  3058   001818  EF10  F00C         	goto	u2040
  3059   00181C                     u2041:
  3060   00181C  EF48  F00C         	goto	l3008
  3061   001820                     u2040:
  3062   001820                     
  3063                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 304:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 305:    
      +                          for (counter = 0x00; counter < 8; counter++)
  3064   001820  0E00               	movlw	0
  3065   001822  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  3066   001824                     l2994:
  3067                           
  3068                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 306:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 307:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (command >> counter) & (uint8)1)
      +                          ;
  3069   001824  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  3070   001826  240F               	addwf	lcd_8bit_send_command@counter^0,w,c
  3071   001828  0F02               	addlw	2
  3072   00182A  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3073   00182C  C00F  F00D         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  3074   001830  C00C  F00E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  3075   001834  2A0D               	incf	??_lcd_8bit_send_command^0,f,c
  3076   001836  EF1F  F00C         	goto	u2054
  3077   00183A                     u2055:
  3078   00183A  90D8               	bcf	status,0,c
  3079   00183C  320E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  3080   00183E                     u2054:
  3081   00183E  2E0D               	decfsz	??_lcd_8bit_send_command^0,f,c
  3082   001840  EF1D  F00C         	goto	u2055
  3083   001844  500E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  3084   001846  0B01               	andlw	1
  3085   001848  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3086   00184A  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3087   00184E  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3088   001850                     
  3089                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 308:     if ((Std_ReturnType)0x01u == ret)
  3090   001850  0410               	decf	lcd_8bit_send_command@ret^0,w,c
  3091   001852  A4D8               	btfss	status,2,c
  3092   001854  EF2E  F00C         	goto	u2061
  3093   001858  EF30  F00C         	goto	u2060
  3094   00185C                     u2061:
  3095   00185C  EF32  F00C         	goto	l3000
  3096   001860                     u2060:
  3097   001860  EF3B  F00C         	goto	l3004
  3098   001864                     l3000:
  3099                           
  3100                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 312:    }
  3101   001864  2A0F               	incf	lcd_8bit_send_command@counter^0,f,c
  3102   001866  0E07               	movlw	7
  3103   001868  640F               	cpfsgt	lcd_8bit_send_command@counter^0,c
  3104   00186A  EF39  F00C         	goto	u2071
  3105   00186E  EF3B  F00C         	goto	u2070
  3106   001872                     u2071:
  3107   001872  EF12  F00C         	goto	l2994
  3108   001876                     u2070:
  3109   001876                     l3004:
  3110                           
  3111                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 313:    if ((Std_ReturnType)0x00u == ret)
  3112   001876  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  3113   001878  A4D8               	btfss	status,2,c
  3114   00187A  EF41  F00C         	goto	u2081
  3115   00187E  EF43  F00C         	goto	u2080
  3116   001882                     u2081:
  3117   001882  EF48  F00C         	goto	l3008
  3118   001886                     u2080:
  3119   001886                     
  3120                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 314:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 315:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  3121   001886  C00B  F009         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  3122   00188A  EC34  F010         	call	_lcd_8bit_send_enable_signal	;wreg free
  3123   00188E  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  3124   001890                     l3008:
  3125                           
  3126                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 319:  return (ret);
  3127   001890  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  3128   001892  0012               	return		;funcret
  3129   001894                     __end_of_lcd_8bit_send_command:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _lcd_8bit_send_enable_signal *****************
  3133 ;; Defined at:
  3134 ;;		line 516 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;  lcd             1    8[COMRAM] PTR const struct .
  3137 ;;		 -> lcd_2(10), 
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;  ret             1    9[COMRAM] unsigned char 
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        2 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 1
  3156 ;; This function calls:
  3157 ;;		_gpio_pin_write_logic
  3158 ;; This function is called by:
  3159 ;;		_lcd_8bit_send_command
  3160 ;;		_lcd_8bit_send_char_data
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text17
  3165   002068                     __ptext17:
  3166                           	callstack 0
  3167   002068                     _lcd_8bit_send_enable_signal:
  3168                           	callstack 26
  3169   002068                     
  3170                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 520:  if (((void*)0) == lcd)
  3171   002068  5009               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3172   00206A  A4D8               	btfss	status,2,c
  3173   00206C  EF3A  F010         	goto	u1951
  3174   002070  EF3C  F010         	goto	u1950
  3175   002074                     u1951:
  3176   002074  EF40  F010         	goto	l2932
  3177   002078                     u1950:
  3178   002078                     
  3179                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 521:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 522:   re
      +                          t = (Std_ReturnType)0x01u;
  3180   002078  0E01               	movlw	1
  3181   00207A  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3182                           
  3183                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 523:  }
  3184   00207C  EF52  F010         	goto	l2938
  3185   002080                     l2932:
  3186                           
  3187                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 525:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 526:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3188   002080  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3189   002082  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3190   002084  0E01               	movlw	1
  3191   002086  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3192   002088  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3193   00208C  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3194   00208E                     
  3195                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 527:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3196   00208E  0E03               	movlw	3
  3197   002090                     u3607:
  3198   002090  2EE8               	decfsz	wreg,f,c
  3199   002092  D7FE               	bra	u3607
  3200   002094  0000               	nop	
  3201   002096                     
  3202                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 528:   ret |= gpio_pin_write_logic(&(lcd->lcd_en), G
      +                          PIO_LOW);
  3203   002096  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3204   002098  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3205   00209A  0E00               	movlw	0
  3206   00209C  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3207   00209E  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3208   0020A2  120A               	iorwf	lcd_8bit_send_enable_signal@ret^0,f,c
  3209   0020A4                     l2938:
  3210                           
  3211                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 530:  return (ret);
  3212   0020A4  500A               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  3213   0020A6  0012               	return		;funcret
  3214   0020A8                     __end_of_lcd_8bit_send_enable_signal:
  3215                           	callstack 0
  3216                           
  3217 ;; *************** function _lcd_4bit_initialize *****************
  3218 ;; Defined at:
  3219 ;;		line 49 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3220 ;; Parameters:    Size  Location     Type
  3221 ;;  lcd             1   17[COMRAM] PTR const struct .
  3222 ;;		 -> lcd_1(6), 
  3223 ;; Auto vars:     Size  Location     Type
  3224 ;;  ret             1   20[COMRAM] unsigned char 
  3225 ;;  lcd_data_cou    1   19[COMRAM] unsigned char 
  3226 ;; Return value:  Size  Location     Type
  3227 ;;                  1    wreg      unsigned char 
  3228 ;; Registers used:
  3229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3230 ;; Tracked objects:
  3231 ;;		On entry : 0/0
  3232 ;;		On exit  : 0/0
  3233 ;;		Unchanged: 0/0
  3234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3235 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3236 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3237 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3238 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3239 ;;Total ram usage:        4 bytes
  3240 ;; Hardware stack levels used: 1
  3241 ;; Hardware stack levels required when called: 3
  3242 ;; This function calls:
  3243 ;;		_gpio_pin_initialize
  3244 ;;		_lcd_4bit_send_command
  3245 ;; This function is called by:
  3246 ;;		_ecu_layer_initialize
  3247 ;; This function uses a non-reentrant model
  3248 ;;
  3249                           
  3250                           	psect	text18
  3251   0013A2                     __ptext18:
  3252                           	callstack 0
  3253   0013A2                     _lcd_4bit_initialize:
  3254                           	callstack 25
  3255   0013A2                     
  3256                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 52:     uint8 lcd_data_counter = 0x00;
  3257   0013A2  0E00               	movlw	0
  3258   0013A4  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3259                           
  3260                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 53:  if (((void*)0) == lcd)
  3261   0013A6  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3262   0013A8  A4D8               	btfss	status,2,c
  3263   0013AA  EFD9  F009         	goto	u2091
  3264   0013AE  EFDB  F009         	goto	u2090
  3265   0013B2                     u2091:
  3266   0013B2  EFDF  F009         	goto	l3016
  3267   0013B6                     u2090:
  3268   0013B6                     
  3269                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 54:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 55:      r
      +                          et = (Std_ReturnType)0x01u;
  3270   0013B6  0E01               	movlw	1
  3271   0013B8  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3272                           
  3273                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 56:  }
  3274   0013BA  EF75  F00A         	goto	l3056
  3275   0013BE                     l3016:
  3276                           
  3277                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 58:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 59:       
      +                            ret = gpio_pin_initialize(&(lcd->lcd_rs));
  3278   0013BE  C012  F008         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  3279   0013C2  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  3280   0013C6  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3281   0013C8                     
  3282                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 60:         if ((Std_ReturnType)0x00u == ret)
  3283   0013C8  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3284   0013CA  A4D8               	btfss	status,2,c
  3285   0013CC  EFEA  F009         	goto	u2101
  3286   0013D0  EFEC  F009         	goto	u2100
  3287   0013D4                     u2101:
  3288   0013D4  EF75  F00A         	goto	l3056
  3289   0013D8                     u2100:
  3290   0013D8                     
  3291                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 61:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 62:
      +                                       ret = gpio_pin_initialize(&(lcd->lcd_en));
  3292   0013D8  2812               	incf	lcd_4bit_initialize@lcd^0,w,c
  3293   0013DA  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3294   0013DC  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  3295   0013E0  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3296   0013E2                     
  3297                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 63:             if ((Std_ReturnType)0x00u == ret)
  3298   0013E2  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3299   0013E4  A4D8               	btfss	status,2,c
  3300   0013E6  EFF7  F009         	goto	u2111
  3301   0013EA  EFF9  F009         	goto	u2110
  3302   0013EE                     u2111:
  3303   0013EE  EF75  F00A         	goto	l3056
  3304   0013F2                     u2110:
  3305   0013F2                     
  3306                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 64:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c:
      +                           65:                 for (lcd_data_counter = 0x00; lcd_data_counter < 4; lcd_data_counte
      +                          r++)
  3307   0013F2  0E00               	movlw	0
  3308   0013F4  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3309   0013F6                     l3030:
  3310                           
  3311                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 66:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 67:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counter]
      +                          ));
  3312   0013F6  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3313   0013F8  2414               	addwf	lcd_4bit_initialize@lcd_data_counter^0,w,c
  3314   0013FA  0F02               	addlw	2
  3315   0013FC  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3316   0013FE  EC11  F010         	call	_gpio_pin_initialize	;wreg free
  3317   001402  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3318   001404                     
  3319                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 68:                     if ((Std_ReturnType)0x01u ==
      +                           ret)
  3320   001404  0415               	decf	lcd_4bit_initialize@ret^0,w,c
  3321   001406  A4D8               	btfss	status,2,c
  3322   001408  EF08  F00A         	goto	u2121
  3323   00140C  EF0A  F00A         	goto	u2120
  3324   001410                     u2121:
  3325   001410  EF0C  F00A         	goto	l3036
  3326   001414                     u2120:
  3327   001414  EF15  F00A         	goto	l3040
  3328   001418                     l3036:
  3329                           
  3330                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 72:                 }
  3331   001418  2A14               	incf	lcd_4bit_initialize@lcd_data_counter^0,f,c
  3332   00141A  0E03               	movlw	3
  3333   00141C  6414               	cpfsgt	lcd_4bit_initialize@lcd_data_counter^0,c
  3334   00141E  EF13  F00A         	goto	u2131
  3335   001422  EF15  F00A         	goto	u2130
  3336   001426                     u2131:
  3337   001426  EFFB  F009         	goto	l3030
  3338   00142A                     u2130:
  3339   00142A                     l3040:
  3340                           
  3341                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 73:                 if ((Std_ReturnType)0x00u == ret
      +                          )
  3342   00142A  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3343   00142C  A4D8               	btfss	status,2,c
  3344   00142E  EF1B  F00A         	goto	u2141
  3345   001432  EF1D  F00A         	goto	u2140
  3346   001436                     u2141:
  3347   001436  EF75  F00A         	goto	l3056
  3348   00143A                     u2140:
  3349   00143A                     
  3350                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 74:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 76:                     _delay((unsigned long)((20)*((8 *1000UL *1000UL)/4000.0)));
  3351   00143A  0E34               	movlw	52
  3352   00143C  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3353   00143E  0EF2               	movlw	242
  3354   001440                     u3617:
  3355   001440  2EE8               	decfsz	wreg,f,c
  3356   001442  D7FE               	bra	u3617
  3357   001444  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3358   001446  D7FC               	bra	u3617
  3359   001448  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3360   00144C  0E38               	movlw	56
  3361   00144E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3362   001450  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3363   001454                     
  3364                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 78:                     _delay((unsigned long)((5)*(
      +                          (8 *1000UL *1000UL)/4000.0)));
  3365   001454  0E0D               	movlw	13
  3366   001456  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3367   001458  0EFC               	movlw	252
  3368   00145A                     u3627:
  3369   00145A  2EE8               	decfsz	wreg,f,c
  3370   00145C  D7FE               	bra	u3627
  3371   00145E  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3372   001460  D7FC               	bra	u3627
  3373   001462  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3374   001466  0E38               	movlw	56
  3375   001468  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3376   00146A  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3377   00146E                     
  3378                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 80:                     _delay((unsigned long)((150)
      +                          *((8 *1000UL *1000UL)/4000000.0)));
  3379   00146E  0E64               	movlw	100
  3380   001470                     u3637:
  3381   001470  2EE8               	decfsz	wreg,f,c
  3382   001472  D7FE               	bra	u3637
  3383   001474                     
  3384                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 81:                     ret = lcd_4bit_send_command(
      +                          lcd, 0x38);
  3385   001474  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3386   001478  0E38               	movlw	56
  3387   00147A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3388   00147C  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3389   001480  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3390   001482                     
  3391                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 83:                     if ((Std_ReturnType)0x00u ==
      +                           ret)
  3392   001482  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3393   001484  A4D8               	btfss	status,2,c
  3394   001486  EF47  F00A         	goto	u2151
  3395   00148A  EF49  F00A         	goto	u2150
  3396   00148E                     u2151:
  3397   00148E  EF75  F00A         	goto	l78
  3398   001492                     u2150:
  3399   001492                     
  3400                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 84:                     {;ECU_Layer/Char_LCD/ecu_cha
      +                          r_lcd.c: 85:                         ret |= lcd_4bit_send_command(lcd, 0x01);
  3401   001492  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3402   001496  0E01               	movlw	1
  3403   001498  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3404   00149A  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3405   00149E  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3406                           
  3407                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 86:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x02);
  3408   0014A0  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3409   0014A4  0E02               	movlw	2
  3410   0014A6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3411   0014A8  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3412   0014AC  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3413                           
  3414                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 87:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x06);
  3415   0014AE  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3416   0014B2  0E06               	movlw	6
  3417   0014B4  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3418   0014B6  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3419   0014BA  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3420                           
  3421                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 88:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x0C);
  3422   0014BC  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3423   0014C0  0E0C               	movlw	12
  3424   0014C2  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3425   0014C4  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3426   0014C8  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3427                           
  3428                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 89:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x28);
  3429   0014CA  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3430   0014CE  0E28               	movlw	40
  3431   0014D0  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3432   0014D2  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3433   0014D6  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3434                           
  3435                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 90:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x80);
  3436   0014D8  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3437   0014DC  0E80               	movlw	128
  3438   0014DE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3439   0014E0  EC46  F00D         	call	_lcd_4bit_send_command	;wreg free
  3440   0014E4  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3441   0014E6  EF75  F00A         	goto	l3056
  3442   0014EA                     l78:
  3443   0014EA                     l3056:
  3444                           
  3445                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 96:  return (ret);
  3446   0014EA  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3447   0014EC  0012               	return		;funcret
  3448   0014EE                     __end_of_lcd_4bit_initialize:
  3449                           	callstack 0
  3450                           
  3451 ;; *************** function _lcd_4bit_send_command *****************
  3452 ;; Defined at:
  3453 ;;		line 99 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3454 ;; Parameters:    Size  Location     Type
  3455 ;;  lcd             1   14[COMRAM] PTR const struct .
  3456 ;;		 -> lcd_1(6), 
  3457 ;;  command         1   15[COMRAM] unsigned char 
  3458 ;; Auto vars:     Size  Location     Type
  3459 ;;  ret             1   16[COMRAM] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      unsigned char 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;Total ram usage:        3 bytes
  3474 ;; Hardware stack levels used: 1
  3475 ;; Hardware stack levels required when called: 2
  3476 ;; This function calls:
  3477 ;;		_gpio_pin_write_logic
  3478 ;;		_lcd_4bit_send_enable_signal
  3479 ;;		_lcd_send_4bits
  3480 ;; This function is called by:
  3481 ;;		_lcd_4bit_initialize
  3482 ;;		_lcd_4bit_send_custom_char
  3483 ;;		_lcd_4bit_set_cursor
  3484 ;; This function uses a non-reentrant model
  3485 ;;
  3486                           
  3487                           	psect	text19
  3488   001A8C                     __ptext19:
  3489                           	callstack 0
  3490   001A8C                     _lcd_4bit_send_command:
  3491                           	callstack 26
  3492   001A8C                     
  3493                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 102:  if (((void*)0) == lcd)
  3494   001A8C  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  3495   001A8E  A4D8               	btfss	status,2,c
  3496   001A90  EF4C  F00D         	goto	u1981
  3497   001A94  EF4E  F00D         	goto	u1980
  3498   001A98                     u1981:
  3499   001A98  EF52  F00D         	goto	l2958
  3500   001A9C                     u1980:
  3501   001A9C                     
  3502                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 103:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 104:     
      +                           ret = (Std_ReturnType)0x01u;
  3503   001A9C  0E01               	movlw	1
  3504   001A9E  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3505                           
  3506                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 105:  }
  3507   001AA0  EF94  F00D         	goto	l2976
  3508   001AA4                     l2958:
  3509                           
  3510                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 107:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 108:     
      +                              ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  3511   001AA4  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  3512   001AA8  0E00               	movlw	0
  3513   001AAA  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3514   001AAC  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3515   001AB0  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3516   001AB2                     
  3517                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 109:         if ((Std_ReturnType)0x00u == ret)
  3518   001AB2  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3519   001AB4  A4D8               	btfss	status,2,c
  3520   001AB6  EF5F  F00D         	goto	u1991
  3521   001ABA  EF61  F00D         	goto	u1990
  3522   001ABE                     u1991:
  3523   001ABE  EF94  F00D         	goto	l2976
  3524   001AC2                     u1990:
  3525   001AC2                     
  3526                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 110:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 11
      +                          1:             ret = lcd_send_4bits(lcd, command >> 4);
  3527   001AC2  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3528   001AC6  3810               	swapf	lcd_4bit_send_command@command^0,w,c
  3529   001AC8  0B0F               	andlw	15
  3530   001ACA  6E0A               	movwf	lcd_send_4bits@data_command^0,c
  3531   001ACC  EC6F  F00E         	call	_lcd_send_4bits	;wreg free
  3532   001AD0  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3533   001AD2                     
  3534                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 112:             if ((Std_ReturnType)0x00u == ret)
  3535   001AD2  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3536   001AD4  A4D8               	btfss	status,2,c
  3537   001AD6  EF6F  F00D         	goto	u2001
  3538   001ADA  EF71  F00D         	goto	u2000
  3539   001ADE                     u2001:
  3540   001ADE  EF76  F00D         	goto	l2968
  3541   001AE2                     u2000:
  3542   001AE2                     
  3543                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 113:                 ret = lcd_4bit_send_enable_sign
      +                          al(lcd);
  3544   001AE2  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3545   001AE6  EC9D  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3546   001AEA  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3547   001AEC                     l2968:
  3548                           
  3549                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 114:             if ((Std_ReturnType)0x00u == ret)
  3550   001AEC  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3551   001AEE  A4D8               	btfss	status,2,c
  3552   001AF0  EF7C  F00D         	goto	u2011
  3553   001AF4  EF7E  F00D         	goto	u2010
  3554   001AF8                     u2011:
  3555   001AF8  EF94  F00D         	goto	l2976
  3556   001AFC                     u2010:
  3557   001AFC                     
  3558                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 115:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c
      +                          : 116:                 ret = lcd_send_4bits(lcd, command);
  3559   001AFC  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3560   001B00  C010  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  3561   001B04  EC6F  F00E         	call	_lcd_send_4bits	;wreg free
  3562   001B08  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3563   001B0A                     
  3564                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 117:                 if ((Std_ReturnType)0x00u == re
      +                          t)
  3565   001B0A  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3566   001B0C  A4D8               	btfss	status,2,c
  3567   001B0E  EF8B  F00D         	goto	u2021
  3568   001B12  EF8D  F00D         	goto	u2020
  3569   001B16                     u2021:
  3570   001B16  EF94  F00D         	goto	l90
  3571   001B1A                     u2020:
  3572   001B1A                     
  3573                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 118:                     ret = lcd_4bit_send_enable_
      +                          signal(lcd);
  3574   001B1A  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3575   001B1E  EC9D  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3576   001B22  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3577   001B24  EF94  F00D         	goto	l2976
  3578   001B28                     l90:
  3579   001B28                     l2976:
  3580                           
  3581                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 122:  return (ret);
  3582   001B28  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3583   001B2A  0012               	return		;funcret
  3584   001B2C                     __end_of_lcd_4bit_send_command:
  3585                           	callstack 0
  3586                           
  3587 ;; *************** function _lcd_send_4bits *****************
  3588 ;; Defined at:
  3589 ;;		line 439 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  lcd             1    8[COMRAM] PTR const struct .
  3592 ;;		 -> lcd_1(6), 
  3593 ;;  data_command    1    9[COMRAM] unsigned char 
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;  counter         1   13[COMRAM] unsigned char 
  3596 ;;  ret             1   12[COMRAM] unsigned char 
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      unsigned char 
  3599 ;; Registers used:
  3600 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3606 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3607 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3609 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3610 ;;Total ram usage:        6 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 1
  3613 ;; This function calls:
  3614 ;;		_gpio_pin_write_logic
  3615 ;; This function is called by:
  3616 ;;		_lcd_4bit_send_command
  3617 ;;		_lcd_4bit_send_char_data
  3618 ;; This function uses a non-reentrant model
  3619 ;;
  3620                           
  3621                           	psect	text20
  3622   001CDE                     __ptext20:
  3623                           	callstack 0
  3624   001CDE                     _lcd_send_4bits:
  3625                           	callstack 26
  3626   001CDE                     
  3627                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 442:     uint8 counter = 0x00;
  3628   001CDE  0E00               	movlw	0
  3629   001CE0  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3630                           
  3631                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 444:     if (((void*)0) == lcd)
  3632   001CE2  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3633   001CE4  A4D8               	btfss	status,2,c
  3634   001CE6  EF77  F00E         	goto	u1891
  3635   001CEA  EF79  F00E         	goto	u1890
  3636   001CEE                     u1891:
  3637   001CEE  EF7D  F00E         	goto	l2892
  3638   001CF2                     u1890:
  3639   001CF2                     
  3640                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 445:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 446:  
      +                                 ret = (Std_ReturnType)0x01u;
  3641   001CF2  0E01               	movlw	1
  3642   001CF4  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3643                           
  3644                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 447:     }
  3645   001CF6  EFA8  F00E         	goto	l2908
  3646   001CFA                     l2892:
  3647                           
  3648                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 449:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 450:  
      +                                 for (counter = 0x00; counter < 4; counter++)
  3649   001CFA  0E00               	movlw	0
  3650   001CFC  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3651   001CFE                     l2898:
  3652                           
  3653                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 451:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 45
      +                          2:             ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data_command >> co
      +                          unter) & (uint8)1);
  3654   001CFE  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3655   001D00  240E               	addwf	lcd_send_4bits@counter^0,w,c
  3656   001D02  0F02               	addlw	2
  3657   001D04  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3658   001D06  C00E  F00B         	movff	lcd_send_4bits@counter,??_lcd_send_4bits
  3659   001D0A  C00A  F00C         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  3660   001D0E  2A0B               	incf	??_lcd_send_4bits^0,f,c
  3661   001D10  EF8C  F00E         	goto	u1904
  3662   001D14                     u1905:
  3663   001D14  90D8               	bcf	status,0,c
  3664   001D16  320C               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3665   001D18                     u1904:
  3666   001D18  2E0B               	decfsz	??_lcd_send_4bits^0,f,c
  3667   001D1A  EF8A  F00E         	goto	u1905
  3668   001D1E  500C               	movf	(??_lcd_send_4bits+1)^0,w,c
  3669   001D20  0B01               	andlw	1
  3670   001D22  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3671   001D24  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3672   001D28  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3673   001D2A                     
  3674                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 453:             if ((Std_ReturnType)0x01u == ret)
  3675   001D2A  040D               	decf	lcd_send_4bits@ret^0,w,c
  3676   001D2C  A4D8               	btfss	status,2,c
  3677   001D2E  EF9B  F00E         	goto	u1911
  3678   001D32  EF9D  F00E         	goto	u1910
  3679   001D36                     u1911:
  3680   001D36  EF9F  F00E         	goto	l2904
  3681   001D3A                     u1910:
  3682   001D3A  EFA8  F00E         	goto	l2908
  3683   001D3E                     l2904:
  3684                           
  3685                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 457:         }
  3686   001D3E  2A0E               	incf	lcd_send_4bits@counter^0,f,c
  3687   001D40  0E03               	movlw	3
  3688   001D42  640E               	cpfsgt	lcd_send_4bits@counter^0,c
  3689   001D44  EFA6  F00E         	goto	u1921
  3690   001D48  EFA8  F00E         	goto	u1920
  3691   001D4C                     u1921:
  3692   001D4C  EF7F  F00E         	goto	l2898
  3693   001D50                     u1920:
  3694   001D50                     l2908:
  3695                           
  3696                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 459:     return (ret);
  3697   001D50  500D               	movf	lcd_send_4bits@ret^0,w,c
  3698   001D52  0012               	return		;funcret
  3699   001D54                     __end_of_lcd_send_4bits:
  3700                           	callstack 0
  3701                           
  3702 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3703 ;; Defined at:
  3704 ;;		line 497 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3705 ;; Parameters:    Size  Location     Type
  3706 ;;  lcd             1    8[COMRAM] PTR const struct .
  3707 ;;		 -> lcd_1(6), 
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;  ret             1    9[COMRAM] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      unsigned char 
  3712 ;; Registers used:
  3713 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3719 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3723 ;;Total ram usage:        2 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; Hardware stack levels required when called: 1
  3726 ;; This function calls:
  3727 ;;		_gpio_pin_write_logic
  3728 ;; This function is called by:
  3729 ;;		_lcd_4bit_send_command
  3730 ;;		_lcd_4bit_send_char_data
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text21
  3735   001F3A                     __ptext21:
  3736                           	callstack 0
  3737   001F3A                     _lcd_4bit_send_enable_signal:
  3738                           	callstack 26
  3739   001F3A                     
  3740                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 501:     if (((void*)0) == lcd)
  3741   001F3A  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3742   001F3C  A4D8               	btfss	status,2,c
  3743   001F3E  EFA3  F00F         	goto	u1931
  3744   001F42  EFA5  F00F         	goto	u1930
  3745   001F46                     u1931:
  3746   001F46  EFA9  F00F         	goto	l2916
  3747   001F4A                     u1930:
  3748   001F4A                     
  3749                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 502:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 503:  
      +                                 ret = (Std_ReturnType)0x01u;
  3750   001F4A  0E01               	movlw	1
  3751   001F4C  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3752                           
  3753                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 504:     }
  3754   001F4E  EFC3  F00F         	goto	l2924
  3755   001F52                     l2916:
  3756                           
  3757                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 506:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 507:  
      +                                 ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3758   001F52  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3759   001F54  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3760   001F56  0E01               	movlw	1
  3761   001F58  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3762   001F5A  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3763   001F5E  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3764   001F60                     
  3765                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 508:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3766   001F60  0E03               	movlw	3
  3767   001F62                     u3647:
  3768   001F62  2EE8               	decfsz	wreg,f,c
  3769   001F64  D7FE               	bra	u3647
  3770   001F66  0000               	nop	
  3771   001F68                     
  3772                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 509:         if ((Std_ReturnType)0x00u == ret)
  3773   001F68  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3774   001F6A  A4D8               	btfss	status,2,c
  3775   001F6C  EFBA  F00F         	goto	u1941
  3776   001F70  EFBC  F00F         	goto	u1940
  3777   001F74                     u1941:
  3778   001F74  EFC3  F00F         	goto	l2924
  3779   001F78                     u1940:
  3780   001F78                     
  3781                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 510:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 51
      +                          1:             ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  3782   001F78  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3783   001F7A  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3784   001F7C  0E00               	movlw	0
  3785   001F7E  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3786   001F80  EC1E  F009         	call	_gpio_pin_write_logic	;wreg free
  3787   001F84  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3788   001F86                     l2924:
  3789                           
  3790                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 514:     return (ret);
  3791   001F86  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3792   001F88  0012               	return		;funcret
  3793   001F8A                     __end_of_lcd_4bit_send_enable_signal:
  3794                           	callstack 0
  3795                           
  3796 ;; *************** function _gpio_pin_write_logic *****************
  3797 ;; Defined at:
  3798 ;;		line 95 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  3801 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  3802 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  3803 ;;		 -> keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), dc_motor_2(2), 
  3804 ;;		 -> dc_motor_1$dc_motor_pins(2), dc_motor_1(2), lcd_2$lcd_data(8), lcd_2(10), 
  3805 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3806 ;;		 -> led_turn_off@pin(1), led_turn_on@pin(1), 
  3807 ;;  logic           1    1[COMRAM] enum E3074
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  ret             1    7[COMRAM] unsigned char 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      unsigned char 
  3812 ;; Registers used:
  3813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3819 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3820 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3821 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;Total ram usage:        8 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; This function calls:
  3826 ;;		Nothing
  3827 ;; This function is called by:
  3828 ;;		_lcd_4bit_send_command
  3829 ;;		_lcd_4bit_send_char_data
  3830 ;;		_lcd_8bit_send_command
  3831 ;;		_lcd_8bit_send_char_data
  3832 ;;		_lcd_send_4bits
  3833 ;;		_lcd_4bit_send_enable_signal
  3834 ;;		_lcd_8bit_send_enable_signal
  3835 ;;		_dc_motor_move_forward
  3836 ;;		_dc_motor_move_backward
  3837 ;;		_dc_motor_stop
  3838 ;;		_keypad_get_value
  3839 ;;		_led_turn_on
  3840 ;;		_led_turn_off
  3841 ;;		_relay_turn_on
  3842 ;;		_relay_turn_off
  3843 ;;		_seven_segment_write_number
  3844 ;;		_seven_segment_test
  3845 ;; This function uses a non-reentrant model
  3846 ;;
  3847                           
  3848                           	psect	text22
  3849   00123C                     __ptext22:
  3850                           	callstack 0
  3851   00123C                     _gpio_pin_write_logic:
  3852                           	callstack 26
  3853   00123C                     
  3854                           ;MCAL_Layer/GPIO/hal_gpio.c: 95: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config_t, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 96: {;MCAL_Layer/GPIO/hal_gpi
      +                          o.c: 97:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  3855   00123C  0E00               	movlw	0
  3856   00123E  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3857                           
  3858                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  3859   001240  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3860   001242  B4D8               	btfsc	status,2,c
  3861   001244  EF26  F009         	goto	u1791
  3862   001248  EF28  F009         	goto	u1790
  3863   00124C                     u1791:
  3864   00124C  EF38  F009         	goto	l2846
  3865   001250                     u1790:
  3866   001250  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3867   001252  6ED9               	movwf	fsr2l,c
  3868   001254  6ADA               	clrf	fsr2h,c
  3869   001256  30DF               	rrcf	223,w,c
  3870   001258  32E8               	rrcf	wreg,f,c
  3871   00125A  32E8               	rrcf	wreg,f,c
  3872   00125C  0B07               	andlw	7
  3873   00125E  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3874   001260  0E07               	movlw	7
  3875   001262  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
  3876   001264  EF36  F009         	goto	u1801
  3877   001268  EF38  F009         	goto	u1800
  3878   00126C                     u1801:
  3879   00126C  EFBA  F009         	goto	l2858
  3880   001270                     u1800:
  3881   001270                     l2846:
  3882                           
  3883                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     {;MCAL_Layer/GPIO/hal_gpio.c: 100:         ret = (S
      +                          td_ReturnType)0x01u;
  3884   001270  0E01               	movlw	1
  3885   001272  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3886                           
  3887                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:     }
  3888   001274  EFCF  F009         	goto	l2860
  3889   001278                     l2848:
  3890                           
  3891                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:                 (*lat_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  3892   001278  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3893   00127A  6ED9               	movwf	fsr2l,c
  3894   00127C  6ADA               	clrf	fsr2h,c
  3895   00127E  30DF               	rrcf	223,w,c
  3896   001280  32E8               	rrcf	wreg,f,c
  3897   001282  32E8               	rrcf	wreg,f,c
  3898   001284  0B07               	andlw	7
  3899   001286  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3900   001288  0E01               	movlw	1
  3901   00128A  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3902   00128C  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3903   00128E  EF4B  F009         	goto	u1814
  3904   001292                     u1815:
  3905   001292  90D8               	bcf	status,0,c
  3906   001294  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3907   001296                     u1814:
  3908   001296  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3909   001298  EF49  F009         	goto	u1815
  3910   00129C  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3911   00129E  6ED9               	movwf	fsr2l,c
  3912   0012A0  6ADA               	clrf	fsr2h,c
  3913   0012A2  50DF               	movf	223,w,c
  3914   0012A4  0B07               	andlw	7
  3915   0012A6  0D02               	mullw	2
  3916   0012A8  50F3               	movf	243,w,c
  3917   0012AA  0F74               	addlw	low _lat_registers
  3918   0012AC  6ED9               	movwf	fsr2l,c
  3919   0012AE  6ADA               	clrf	fsr2h,c
  3920   0012B0  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
  3921   0012B4  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
  3922   0012B8  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3923   0012BC  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3924   0012C0  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3925   0012C2  12DF               	iorwf	indf2,f,c
  3926                           
  3927                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:                 break;
  3928   0012C4  EFCF  F009         	goto	l2860
  3929   0012C8                     l2850:
  3930                           
  3931                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3932   0012C8  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3933   0012CA  6ED9               	movwf	fsr2l,c
  3934   0012CC  6ADA               	clrf	fsr2h,c
  3935   0012CE  30DF               	rrcf	223,w,c
  3936   0012D0  32E8               	rrcf	wreg,f,c
  3937   0012D2  32E8               	rrcf	wreg,f,c
  3938   0012D4  0B07               	andlw	7
  3939   0012D6  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3940   0012D8  0E01               	movlw	1
  3941   0012DA  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3942   0012DC  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3943   0012DE  EF73  F009         	goto	u1824
  3944   0012E2                     u1825:
  3945   0012E2  90D8               	bcf	status,0,c
  3946   0012E4  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3947   0012E6                     u1824:
  3948   0012E6  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3949   0012E8  EF71  F009         	goto	u1825
  3950   0012EC  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3951   0012EE  0AFF               	xorlw	255
  3952   0012F0  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3953   0012F2  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3954   0012F4  6ED9               	movwf	fsr2l,c
  3955   0012F6  6ADA               	clrf	fsr2h,c
  3956   0012F8  50DF               	movf	223,w,c
  3957   0012FA  0B07               	andlw	7
  3958   0012FC  0D02               	mullw	2
  3959   0012FE  50F3               	movf	243,w,c
  3960   001300  0F74               	addlw	low _lat_registers
  3961   001302  6ED9               	movwf	fsr2l,c
  3962   001304  6ADA               	clrf	fsr2h,c
  3963   001306  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3964   00130A  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3965   00130E  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3966   001312  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3967   001316  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3968   001318  16DF               	andwf	indf2,f,c
  3969                           
  3970                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:                 break;
  3971   00131A  EFCF  F009         	goto	l2860
  3972   00131E                     l2852:
  3973                           
  3974                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3975   00131E  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3976   001320  6ED9               	movwf	fsr2l,c
  3977   001322  6ADA               	clrf	fsr2h,c
  3978   001324  30DF               	rrcf	223,w,c
  3979   001326  32E8               	rrcf	wreg,f,c
  3980   001328  32E8               	rrcf	wreg,f,c
  3981   00132A  0B07               	andlw	7
  3982   00132C  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3983   00132E  0E01               	movlw	1
  3984   001330  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3985   001332  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3986   001334  EF9E  F009         	goto	u1834
  3987   001338                     u1835:
  3988   001338  90D8               	bcf	status,0,c
  3989   00133A  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3990   00133C                     u1834:
  3991   00133C  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3992   00133E  EF9C  F009         	goto	u1835
  3993   001342  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3994   001344  0AFF               	xorlw	255
  3995   001346  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3996   001348  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3997   00134A  6ED9               	movwf	fsr2l,c
  3998   00134C  6ADA               	clrf	fsr2h,c
  3999   00134E  50DF               	movf	223,w,c
  4000   001350  0B07               	andlw	7
  4001   001352  0D02               	mullw	2
  4002   001354  50F3               	movf	243,w,c
  4003   001356  0F74               	addlw	low _lat_registers
  4004   001358  6ED9               	movwf	fsr2l,c
  4005   00135A  6ADA               	clrf	fsr2h,c
  4006   00135C  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  4007   001360  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  4008   001364  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  4009   001368  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  4010   00136C  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  4011   00136E  16DF               	andwf	indf2,f,c
  4012   001370  EF38  F009         	goto	l2846
  4013   001374                     l2858:
  4014   001374  5002               	movf	gpio_pin_write_logic@logic^0,w,c
  4015   001376  6E03               	movwf	??_gpio_pin_write_logic^0,c
  4016   001378  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
  4017                           
  4018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4019                           ; Switch size 1, requested type "simple"
  4020                           ; Number of cases is 1, Range of values is 0 to 0
  4021                           ; switch strategies available:
  4022                           ; Name         Instructions Cycles
  4023                           ; simple_byte            4     3 (average)
  4024                           ;	Chosen strategy is simple_byte
  4025   00137A  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  4026   00137C  0A00               	xorlw	0	; case 0
  4027   00137E  B4D8               	btfsc	status,2,c
  4028   001380  EFC4  F009         	goto	l4150
  4029   001384  EF8F  F009         	goto	l2852
  4030   001388                     l4150:
  4031                           
  4032                           ; Switch size 1, requested type "simple"
  4033                           ; Number of cases is 2, Range of values is 0 to 1
  4034                           ; switch strategies available:
  4035                           ; Name         Instructions Cycles
  4036                           ; simple_byte            7     4 (average)
  4037                           ;	Chosen strategy is simple_byte
  4038   001388  5003               	movf	??_gpio_pin_write_logic^0,w,c
  4039   00138A  0A00               	xorlw	0	; case 0
  4040   00138C  B4D8               	btfsc	status,2,c
  4041   00138E  EF64  F009         	goto	l2850
  4042   001392  0A01               	xorlw	1	; case 1
  4043   001394  B4D8               	btfsc	status,2,c
  4044   001396  EF3C  F009         	goto	l2848
  4045   00139A  EF8F  F009         	goto	l2852
  4046   00139E                     l2860:
  4047                           
  4048                           ;MCAL_Layer/GPIO/hal_gpio.c: 118:     return (ret);
  4049   00139E  5008               	movf	gpio_pin_write_logic@ret^0,w,c
  4050   0013A0  0012               	return		;funcret
  4051   0013A2                     __end_of_gpio_pin_write_logic:
  4052                           	callstack 0
  4053                           
  4054 ;; *************** function _gpio_pin_initialize *****************
  4055 ;; Defined at:
  4056 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  _pin_config_    1    7[COMRAM] PTR const struct .
  4059 ;;		 -> seg1$segment_pins(4), seg1(5), keypad1$keypad_rows_pins(4), keypad1(8), 
  4060 ;;		 -> dc_motor_2$dc_motor_pins(2), dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), 
  4061 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  4062 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  ret             1    9[COMRAM] unsigned char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      unsigned char 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4074 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4077 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4078 ;;Total ram usage:        3 bytes
  4079 ;; Hardware stack levels used: 1
  4080 ;; Hardware stack levels required when called: 1
  4081 ;; This function calls:
  4082 ;;		_gpio_pin_direction_initialize
  4083 ;; This function is called by:
  4084 ;;		_lcd_4bit_initialize
  4085 ;;		_lcd_8bit_initialize
  4086 ;;		_dc_motor_initialize
  4087 ;;		_keypad_initialize
  4088 ;;		_led_intitialize
  4089 ;;		_relay_initialize
  4090 ;;		_seven_segment_initialize
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text23
  4095   002022                     __ptext23:
  4096                           	callstack 0
  4097   002022                     _gpio_pin_initialize:
  4098                           	callstack 26
  4099   002022                     
  4100                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  4101   002022  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  4102   002024  B4D8               	btfsc	status,2,c
  4103   002026  EF17  F010         	goto	u1961
  4104   00202A  EF19  F010         	goto	u1960
  4105   00202E                     u1961:
  4106   00202E  EF29  F010         	goto	l2946
  4107   002032                     u1960:
  4108   002032  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  4109   002034  6ED9               	movwf	fsr2l,c
  4110   002036  6ADA               	clrf	fsr2h,c
  4111   002038  30DF               	rrcf	223,w,c
  4112   00203A  32E8               	rrcf	wreg,f,c
  4113   00203C  32E8               	rrcf	wreg,f,c
  4114   00203E  0B07               	andlw	7
  4115   002040  6E09               	movwf	??_gpio_pin_initialize^0,c
  4116   002042  0E07               	movlw	7
  4117   002044  6409               	cpfsgt	??_gpio_pin_initialize^0,c
  4118   002046  EF27  F010         	goto	u1971
  4119   00204A  EF29  F010         	goto	u1970
  4120   00204E                     u1971:
  4121   00204E  EF2D  F010         	goto	l2948
  4122   002052                     u1970:
  4123   002052                     l2946:
  4124                           
  4125                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     {;MCAL_Layer/GPIO/hal_gpio.c: 22:         ret = (St
      +                          d_ReturnType)0x01u;
  4126   002052  0E01               	movlw	1
  4127   002054  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  4128                           
  4129                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  4130   002056  EF32  F010         	goto	l2950
  4131   00205A                     l2948:
  4132                           
  4133                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = gpi
      +                          o_pin_direction_initialize(_pin_config_t);
  4134   00205A  C008  F001         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
  4135   00205E  EC13  F00B         	call	_gpio_pin_direction_initialize	;wreg free
  4136   002062  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  4137   002064                     l2950:
  4138                           
  4139                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     return (ret);
  4140   002064  500A               	movf	gpio_pin_initialize@ret^0,w,c
  4141   002066  0012               	return		;funcret
  4142   002068                     __end_of_gpio_pin_initialize:
  4143                           	callstack 0
  4144                           
  4145 ;; *************** function _gpio_pin_direction_initialize *****************
  4146 ;; Defined at:
  4147 ;;		line 38 in file "MCAL_Layer/GPIO/hal_gpio.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  4150 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  4151 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  4152 ;;		 -> keypad1$keypad_cols_pins(4), keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), 
  4153 ;;		 -> dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), btn_high(3), 
  4154 ;;		 -> btn_low(3), lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), 
  4155 ;;		 -> lcd_1(6), relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  ret             1    6[COMRAM] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      unsigned char 
  4160 ;; Registers used:
  4161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4167 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4168 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4169 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;Total ram usage:        7 bytes
  4172 ;; Hardware stack levels used: 1
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_gpio_pin_initialize
  4177 ;;		_button_initialize
  4178 ;;		_keypad_initialize
  4179 ;;		_seven_segment_application_initialize
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           
  4183                           	psect	text24
  4184   001626                     __ptext24:
  4185                           	callstack 0
  4186   001626                     _gpio_pin_direction_initialize:
  4187                           	callstack 26
  4188   001626                     
  4189                           ;MCAL_Layer/GPIO/hal_gpio.c: 38: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 39: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          0:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  4190   001626  0E00               	movlw	0
  4191   001628  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4192                           
  4193                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  4194   00162A  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4195   00162C  B4D8               	btfsc	status,2,c
  4196   00162E  EF1B  F00B         	goto	u1841
  4197   001632  EF1D  F00B         	goto	u1840
  4198   001636                     u1841:
  4199   001636  EF2D  F00B         	goto	l2872
  4200   00163A                     u1840:
  4201   00163A  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4202   00163C  6ED9               	movwf	fsr2l,c
  4203   00163E  6ADA               	clrf	fsr2h,c
  4204   001640  30DF               	rrcf	223,w,c
  4205   001642  32E8               	rrcf	wreg,f,c
  4206   001644  32E8               	rrcf	wreg,f,c
  4207   001646  0B07               	andlw	7
  4208   001648  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4209   00164A  0E07               	movlw	7
  4210   00164C  6402               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4211   00164E  EF2B  F00B         	goto	u1851
  4212   001652  EF2D  F00B         	goto	u1850
  4213   001656                     u1851:
  4214   001656  EF84  F00B         	goto	l2882
  4215   00165A                     u1850:
  4216   00165A                     l2872:
  4217                           
  4218                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     {;MCAL_Layer/GPIO/hal_gpio.c: 44:         ret = (St
      +                          d_ReturnType)0x01u;
  4219   00165A  0E01               	movlw	1
  4220   00165C  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4221                           
  4222                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
  4223   00165E  EF9A  F00B         	goto	l2884
  4224   001662                     l2874:
  4225                           
  4226                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  4227   001662  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4228   001664  6ED9               	movwf	fsr2l,c
  4229   001666  6ADA               	clrf	fsr2h,c
  4230   001668  30DF               	rrcf	223,w,c
  4231   00166A  32E8               	rrcf	wreg,f,c
  4232   00166C  32E8               	rrcf	wreg,f,c
  4233   00166E  0B07               	andlw	7
  4234   001670  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4235   001672  0E01               	movlw	1
  4236   001674  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4237   001676  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4238   001678  EF40  F00B         	goto	u1864
  4239   00167C                     u1865:
  4240   00167C  90D8               	bcf	status,0,c
  4241   00167E  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4242   001680                     u1864:
  4243   001680  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4244   001682  EF3E  F00B         	goto	u1865
  4245   001686  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4246   001688  6ED9               	movwf	fsr2l,c
  4247   00168A  6ADA               	clrf	fsr2h,c
  4248   00168C  50DF               	movf	223,w,c
  4249   00168E  0B07               	andlw	7
  4250   001690  0D02               	mullw	2
  4251   001692  50F3               	movf	243,w,c
  4252   001694  0F6A               	addlw	low _tris_registers
  4253   001696  6ED9               	movwf	fsr2l,c
  4254   001698  6ADA               	clrf	fsr2h,c
  4255   00169A  CFDE F004          	movff	postinc2,??_gpio_pin_direction_initialize+2
  4256   00169E  CFDD F005          	movff	postdec2,??_gpio_pin_direction_initialize+3
  4257   0016A2  C004  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  4258   0016A6  C005  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  4259   0016AA  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4260   0016AC  12DF               	iorwf	indf2,f,c
  4261                           
  4262                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 break;
  4263   0016AE  EF9A  F00B         	goto	l2884
  4264   0016B2                     l2876:
  4265                           
  4266                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  4267   0016B2  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4268   0016B4  6ED9               	movwf	fsr2l,c
  4269   0016B6  6ADA               	clrf	fsr2h,c
  4270   0016B8  30DF               	rrcf	223,w,c
  4271   0016BA  32E8               	rrcf	wreg,f,c
  4272   0016BC  32E8               	rrcf	wreg,f,c
  4273   0016BE  0B07               	andlw	7
  4274   0016C0  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4275   0016C2  0E01               	movlw	1
  4276   0016C4  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4277   0016C6  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4278   0016C8  EF68  F00B         	goto	u1874
  4279   0016CC                     u1875:
  4280   0016CC  90D8               	bcf	status,0,c
  4281   0016CE  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4282   0016D0                     u1874:
  4283   0016D0  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4284   0016D2  EF66  F00B         	goto	u1875
  4285   0016D6  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4286   0016D8  0AFF               	xorlw	255
  4287   0016DA  6E04               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4288   0016DC  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4289   0016DE  6ED9               	movwf	fsr2l,c
  4290   0016E0  6ADA               	clrf	fsr2h,c
  4291   0016E2  50DF               	movf	223,w,c
  4292   0016E4  0B07               	andlw	7
  4293   0016E6  0D02               	mullw	2
  4294   0016E8  50F3               	movf	243,w,c
  4295   0016EA  0F6A               	addlw	low _tris_registers
  4296   0016EC  6ED9               	movwf	fsr2l,c
  4297   0016EE  6ADA               	clrf	fsr2h,c
  4298   0016F0  CFDE F005          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4299   0016F4  CFDD F006          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4300   0016F8  C005  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4301   0016FC  C006  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4302   001700  5004               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4303   001702  16DF               	andwf	indf2,f,c
  4304                           
  4305                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 break;
  4306   001704  EF9A  F00B         	goto	l2884
  4307   001708                     l2882:
  4308   001708  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4309   00170A  6ED9               	movwf	fsr2l,c
  4310   00170C  6ADA               	clrf	fsr2h,c
  4311   00170E  BCDF               	btfsc	indf2,6,c
  4312   001710  EF8C  F00B         	goto	u1881
  4313   001714  EF8F  F00B         	goto	u1880
  4314   001718                     u1881:
  4315   001718  0E01               	movlw	1
  4316   00171A  EF90  F00B         	goto	u1886
  4317   00171E                     u1880:
  4318   00171E  0E00               	movlw	0
  4319   001720                     u1886:
  4320                           
  4321                           ; Switch size 1, requested type "simple"
  4322                           ; Number of cases is 2, Range of values is 0 to 1
  4323                           ; switch strategies available:
  4324                           ; Name         Instructions Cycles
  4325                           ; simple_byte            7     4 (average)
  4326                           ;	Chosen strategy is simple_byte
  4327   001720  0A00               	xorlw	0	; case 0
  4328   001722  B4D8               	btfsc	status,2,c
  4329   001724  EF59  F00B         	goto	l2876
  4330   001728  0A01               	xorlw	1	; case 1
  4331   00172A  B4D8               	btfsc	status,2,c
  4332   00172C  EF31  F00B         	goto	l2874
  4333   001730  EF2D  F00B         	goto	l2872
  4334   001734                     l2884:
  4335                           
  4336                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return (ret);
  4337   001734  5007               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4338   001736  0012               	return		;funcret
  4339   001738                     __end_of_gpio_pin_direction_initialize:
  4340                           	callstack 0
  4341                           
  4342                           	psect	rparam
  4343   000000                     tosu	equ	0xFFF
  4344                           tosh	equ	0xFFE
  4345                           tosl	equ	0xFFD
  4346                           stkptr	equ	0xFFC
  4347                           pclatu	equ	0xFFB
  4348                           pclath	equ	0xFFA
  4349                           pcl	equ	0xFF9
  4350                           tblptru	equ	0xFF8
  4351                           tblptrh	equ	0xFF7
  4352                           tblptrl	equ	0xFF6
  4353                           tablat	equ	0xFF5
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           indf0	equ	0xFEF
  4357                           postinc0	equ	0xFEE
  4358                           postdec0	equ	0xFED
  4359                           preinc0	equ	0xFEC
  4360                           plusw0	equ	0xFEB
  4361                           fsr0h	equ	0xFEA
  4362                           fsr0l	equ	0xFE9
  4363                           wreg	equ	0xFE8
  4364                           indf1	equ	0xFE7
  4365                           postinc1	equ	0xFE6
  4366                           postdec1	equ	0xFE5
  4367                           preinc1	equ	0xFE4
  4368                           plusw1	equ	0xFE3
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           bsr	equ	0xFE0
  4372                           indf2	equ	0xFDF
  4373                           postinc2	equ	0xFDE
  4374                           postdec2	equ	0xFDD
  4375                           preinc2	equ	0xFDC
  4376                           plusw2	equ	0xFDB
  4377                           fsr2h	equ	0xFDA
  4378                           fsr2l	equ	0xFD9
  4379                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    16
    Data        130
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     36      90
    BANK0           160      0     102
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> btn_high(COMRAM[3]), btn_low(COMRAM[3]), dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), keypad1(BANK0[8]), keypad1$keypad_cols_pins(BANK0[4]), 
		 -> keypad1$keypad_rows_pins(BANK0[4]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), lcd_2(BANK0[10]), 
		 -> lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), seg1(COMRAM[5]), 
		 -> seg1$segment_pins(COMRAM[4]), seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), 
		 -> seg4_enable(COMRAM[1]), seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    gpio_pin_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> seg1(COMRAM[5]), seg1$segment_pins(COMRAM[4]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(COMRAM[6]), lcd_1$lcd_data(COMRAM[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), seg1(COMRAM[5]), seg1$segment_pins(COMRAM[4]), 
		 -> seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), seg4_enable(COMRAM[1]), 
		 -> seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_custom_char@_char	PTR const unsigned char  size(1) Largest target is 8
		 -> custom1(BANK0[8]), custom2(BANK0[8]), custom3(BANK0[8]), custom4(BANK0[8]), 
		 -> custom5(BANK0[8]), custom6(BANK0[8]), 

    lcd_4bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 13
		 -> STR_4(CODE[13]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_custom_char@_char	PTR const unsigned char  size(1) Largest target is 8
		 -> custom1(BANK0[8]), custom2(BANK0[8]), custom3(BANK0[8]), custom4(BANK0[8]), 
		 -> custom5(BANK0[8]), custom6(BANK0[8]), 

    lcd_8bit_send_custom_char@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 11
		 -> STR_3(CODE[11]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    S1668$buffer	PTR unsigned char  size(2) Largest target is 0

    S1668$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), 
		 -> TRISE(BITBIGSFRhh[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> snprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_send_custom_char
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_custom_char->_lcd_8bit_send_char_data_pos
    _lcd_8bit_send_char_data_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char_data
    _lcd_4bit_send_custom_char->_lcd_4bit_send_char_data_pos
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bits
    _application_init->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0  290836
                                             33 COMRAM     3     3      0
                   _application_init
        _lcd_4bit_send_char_data_pos
          _lcd_4bit_send_custom_char
           _lcd_4bit_send_string_pos
          _lcd_8bit_send_custom_char
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   27963
                                             20 COMRAM     5     1      4
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   12672
                                             16 COMRAM     3     1      2
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_custom_char                            7     2      5   56711
                                             25 COMRAM     7     2      5
            _lcd_8bit_send_char_data
        _lcd_8bit_send_char_data_pos
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_char_data_pos                          5     1      4   27653
                                             20 COMRAM     5     1      4
            _lcd_8bit_send_char_data
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   14785
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2   12384
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   41345
                                             21 COMRAM     5     1      4
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 3     1      2   19374
                                             17 COMRAM     3     1      2
            _lcd_4bit_send_char_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_custom_char                            7     2      5   83735
                                             26 COMRAM     7     2      5
            _lcd_4bit_send_char_data
        _lcd_4bit_send_char_data_pos
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   41317
                                             21 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   21465
                                             17 COMRAM     4     1      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   19064
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _application_init                                     1     1      0   39727
                                             22 COMRAM     1     1      0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   39703
                                             21 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   16477
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   14056
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5939
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   23179
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   20736
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    6507
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_enable_signal                          2     1      1    6113
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5695
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    1866
                                              7 COMRAM     3     2      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     863
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_send_enable_signal
       _lcd_send_4bits
     _lcd_4bit_set_cursor
       _lcd_4bit_send_command
   _lcd_4bit_send_custom_char
     _lcd_4bit_send_char_data
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
       _lcd_4bit_send_char_data
     _lcd_4bit_set_cursor
   _lcd_8bit_send_custom_char
     _lcd_8bit_send_char_data
       _gpio_pin_write_logic
       _lcd_8bit_send_enable_signal
     _lcd_8bit_send_char_data_pos
       _lcd_8bit_send_char_data
       _lcd_8bit_set_cursor
         _lcd_8bit_send_command
     _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
     _lcd_8bit_set_cursor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      66       5       63.7%
BITBIGSFRhh         69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     24      5A       1       94.7%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      40        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 05 09:28:53 2024

                                ?_lcd_send_4bits 0009                                               l90 1B28  
                                             l85 14EC                                               l94 1B2A  
                                             l78 14EA                                               l99 1A88  
                button_read_state@btn_high_valid 004B                                              l103 1A8A  
                                            l120 1CDC                                              l200 1BC4  
                                            l221 19EA                                              l109 2020  
                                            l208 1D52                                              l232 20A6  
                                            l128 1F38                                              l137 1C5E  
                                            l227 1F88                                              l148 1624  
                                            l245 193E                                              l158 1892  
                                            l422 20CE                                              l174 1FD4  
                                            l183 1DC0                                              l191 1EDC  
                                            l168 17E4                                              l467 2066  
                                            l479 1736                                              l498 13A0  
                                            l763 1238                                              l764 1084  
                                            l769 20FA              __end_of_lcd_4bit_send_enable_signal 1F8A  
                    _lcd_4bit_send_enable_signal 1F3A                        ?_lcd_8bit_send_string_pos 0015  
                                            wreg 0FE8                            relay_initialize@F3148 0052  
                    __end_of_lcd_8bit_set_cursor 1940                     __end_of_lcd_8bit_send_string 1DC2  
                                           l3000 1864                                             l3002 1866  
                                           l3020 13D8                                             l3012 13A2  
                                           l3004 1876                                             l3100 199A  
                                           l3030 13F6                                             l3022 13E2  
                                           l3014 13B6                                             l3006 1886  
                                           l3102 19AE                                             l3110 19E8  
                                           l3040 142A                                             l3032 1404  
                                           l3024 13F2                                             l3016 13BE  
                                           l3008 1890                                             l3120 1514  
                                           l3200 18BE                                             l3050 1474  
                                           l3042 143A                                             l3018 13C8  
                                           l3122 1524                                             l3114 14EE  
                                           l3202 18C6                                             l3052 1482  
                                           l3044 1448                                             l3036 1418  
                                           l3140 1566                                             l3132 1542  
                                           l3124 152E                                             l3116 1502  
                                           l3300 20A8                                             l3060 19EC  
                                           l3108 19C2                                             l3204 18DA  
                                           l3054 1492                                             l3046 1454  
                                           l3038 141A                                             l3150 15B0  
                                           l3134 1550                                             l3126 153E  
                                           l3142 1576                                             l3118 150A  
                                           l3302 20A8                                             l3070 1A32  
                                           l3062 19FC                                             l3206 18EE  
                                           l3214 1916                                             l4110 102E  
                                           l3048 146E                                             l3056 14EA  
                                           l3152 15BE                                             l3144 1584  
                                           l3304 20B2                                             l3080 1A7A  
                                           l3072 1A42                                             l3064 1A04  
                                           l3240 2000                                             l3400 1F28  
                                           l3160 1738                                             l3208 1902  
                                           l3216 193C                                             l4120 1070  
                                           l4112 1034                                             l3154 15CE  
                                           l3146 1590                                             l3138 1564  
                                           l3306 20C2                                             l3074 1A4C  
                                           l3066 1A12                                             l3082 1A88  
                                           l3090 1958                                             l3242 2010  
                                           l3234 1FD6                                             l3410 1BE2  
                                           l3250 1C74                                             l3402 1F36  
                                           l3162 174C                                             l4130 1148  
                                           l4122 10B8                                             l3148 15AA  
                                           l3156 1622                                             l3308 20CC  
                                           l3076 1A5C                                             l3068 1A22  
                                           l3092 195A                                             l3244 201E  
                                           l3236 1FE6                                             l3420 1C0A  
                                           l3412 1BF6                                             l3252 1C84  
                                           l3180 17B6                                             l3164 1754  
                                           l4140 11EE                                             l4132 115E  
                                           l4124 10CE                                             l4116 1048  
                                           l4150 1388                                             l3078 1A6A  
                                           l3094 196A                                             l3086 1940  
                                           l3238 1FEE                                             l3430 1C46  
                                           l3422 1C20                                             l3414 1C06  
                                           l3406 1BC6                                             l3254 1C8C  
                                           l3262 1CBC                                             l3182 17B8  
                                           l3174 1776                                             l3166 1762  
                                           l3270 1F9A                                             l4142 1206  
                                           l4134 1176                                             l4126 10E6  
                                           l4118 105C                                             l3096 1972  
                                           l3088 1950                                             l3432 1C5C  
                                           l3408 1BDA                                             l3256 1CA6  
                                           l3264 1CDA                                             l3248 1C60  
                                           l3184 17C8                                             l3176 17A2  
                                           l3168 1772                                             l3192 1894  
                                           l3272 1FA2                                             l3440 1EA2  
                                           l4144 121E                                             l4136 118E  
                                           l4128 10FE                                             l3098 1986  
                                           l3426 1C34                                             l3258 1CA8  
                                           l3186 17D8                                             l3194 18A4  
                                           l3274 1FB4                                             l3290 1D8C  
                                           l3282 1D54                                             l3442 1EAA  
                                           l4138 11D8                                             l2900 1D2A  
                                           l3428 1C36                                             l3188 17E2  
                                           l3196 18AC                                             l3276 1FC4  
                                           l3268 1F8A                                             l3460 1B6C  
                                           l3452 1B2C                                             l3284 1D68  
                                           l3444 1EBC                                             l3436 1E82  
                                           l3390 1EDE                                             l3198 18AE  
                                           l3278 1FD2                                             l3454 1B40  
                                           l3286 1D70                                             l3294 1DA0  
                                           l3446 1ECC                                             l3438 1E92  
                                           l2920 1F68                                             l2912 1F3A  
                                           l2904 1D3E                                             l3392 1EEE  
                                           l3472 1B9A                                             l3456 1B48  
                                           l3288 1D8A                                             l3296 1DBE  
                                           l3448 1EDA                                             l2850 12C8  
                                           l2842 123C                                             l2922 1F78  
                                           l2914 1F4A                                             l2906 1D40  
                                           l2930 2078                                             l3730 20F2  
                                           l3394 1EFE                                             l3474 1B9C  
                                           l3466 1B70                                             l3458 1B5C  
                                           l2852 131E                                             l2860 139E  
                                           l2844 1250                                             l2924 1F86  
                                           l2916 1F52                                             l2908 1D50  
                                           l2932 2080                                             l3732 20F2  
                                           l3396 1F06                                             l3476 1BAC  
                                           l3468 1B86                                             l2870 163A  
                                           l2950 2064                                             l2942 2022  
                                           l2846 1270                                             l2918 1F60  
                                           l2934 208E                                             l3734 20F8  
                                           l3398 1F18                                             l3478 1BC2  
                                           l2872 165A                                             l2944 2032  
                                           l2848 1278                                             l2960 1AB2  
                                           l2936 2096                                             l2928 2068  
                                           l2874 1662                                             l2882 1708  
                                           l2946 2052                                             l2858 1374  
                                           l2890 1CF2                                             l2970 1AFC  
                                           l2962 1AC2                                             l2954 1A8C  
                                           l2938 20A4                                             l2876 16B2  
                                           l2884 1734                                             l2868 1626  
                                           l2948 205A                                             l2892 1CFA  
                                           l2972 1B0A                                             l2964 1AD2  
                                           l2956 1A9C                                             l2980 17E6  
                                           l2974 1B1A                                             l2966 1AE2  
                                           l2958 1AA4                                             l2982 17FA  
                                           l2888 1CDE                                             l2968 1AEC  
                                           l2976 1B28                                             l2984 1802  
                                           l2898 1CFE                                             l2994 1824  
                                           l2986 1810                                             l2996 1850  
                                           l2988 1820                                             STR_1 1029  
                                           STR_3 101E                                             STR_4 1011  
                                           u2000 1AE2                                             u2001 1ADE  
                                           u2010 1AFC                                             u2011 1AF8  
                                           u2020 1B1A                                             u2100 13D8  
                                           u2021 1B16                                             u2101 13D4  
                                           u2110 13F2                                             u2030 17FA  
                                           u2111 13EE                                             u2031 17F6  
                                           u2120 1414                                             u2040 1820  
                                           u2200 1A7A                                             u2121 1410  
                                           u2041 181C                                             u2201 1A76  
                                           u2130 142A                                             u2210 1950  
                                           u2131 1426                                             u2211 194C  
                                           u2140 143A                                             u2060 1860  
                                           u2220 196A                                             u2300 1772  
                                           u2141 1436                                             u2061 185C  
                                           u2221 1966                                             u2301 176E  
                                           _LATA 0F89                                             u2150 1492  
                                           u2070 1876                                             u2054 183E  
                                           u2230 1502                                             _LATB 0F8A  
                                           u2151 148E                                             u2071 1872  
                                           u2055 183A                                             u2231 14FE  
                                           _LATC 0F8B                                             u2080 1886  
                                           u2240 1524                                             u2160 19FC  
                                           u2320 17B2                                             _LATD 0F8C  
                                           u2081 1882                                             u2241 1520  
                                           u2161 19F8                                             u2321 17AE  
                                           _LATE 0F8D                                             u2090 13B6  
                                           u2250 153E                                             u2170 1A22  
                                           u2330 17C8                                             u2314 1790  
                                           u2091 13B2                                             u2251 153A  
                                           u2171 1A1E                                             u2331 17C4  
                                           u2315 178C                                             u2260 1560  
                                           u2180 1A42                                             u2420 1FE6  
                                           u2340 17D8                                             u2500 1D68  
                                           u2261 155C                                             u2181 1A3E  
                                           u2421 1FE2                                             u2341 17D4  
                                           u2501 1D64                                             u2270 1576  
                                           u2190 1A5C                                             u2430 2010  
                                           u2350 18A4                                             u2510 1D9C  
                                           u2271 1572                                             u2191 1A58  
                                           u2431 200C                                             u2351 18A0  
                                           u2511 1D98                                             u1800 1270  
                                           u2280 15CE                                             u2440 1C74  
                                           u2360 18BE                                             u2520 1DBE  
                                           u1801 126C                                             u2281 15CA  
                                           u2441 1C70                                             u2361 18BA  
                                           u2521 1DBA                                             u2530 20C2  
                                           u2450 1C84                                             u2290 174C  
                                           u2531 20BE                                             u2451 1C80  
                                           u2291 1748                                             u2700 1C06  
                                           u2460 1CB8                                             u3500 1044  
                                           u2701 1C02                                             u2461 1CB4  
                                           u3501 1040                                             u1814 1296  
                                           u1910 1D3A                                             u2710 1C30  
                                           u2470 1CDA                                             u1815 1292  
                                           u1911 1D36                                             u2711 1C2C  
                                           u2471 1CD6                                             u1840 163A  
                                           u1824 12E6                                             u1920 1D50  
                                           u1904 1D18                                             u2720 1C46  
                                           u2480 1F9A                                             u1841 1636  
                                           u1825 12E2                                             u1921 1D4C  
                                           u1905 1D14                                             u2721 1C42  
                                           u2481 1F96                                             u1850 165A  
                                           u1834 133C                                             u1930 1F4A  
                                           u2490 1FC4                                             u2730 1E92  
                                           u1851 1656                                             u1835 1338  
                                           u1931 1F46                                             u2491 1FC0  
                                           u2731 1E8E                                             u1940 1F78  
                                           u2660 1EEE                                             u2740 1EA2  
                                           u1941 1F74                                             u2661 1EEA  
                                           u2741 1E9E                                             u3517 10C2  
                                           u1790 1250                                             u1950 2078  
                                           u2670 1EFE                                             u2750 1ECC  
                                           u1791 124C                                             u3607 2090  
                                           u1951 2074                                             u2671 1EFA  
                                           u2751 1EC8                                             u3527 1108  
                                           u1880 171E                                             u1864 1680  
                                           u1960 2032                                             u2680 1F28  
                                           u2760 1B40                                             u1881 1718  
                                           u1865 167C                                             u1961 202E  
                                           u3617 1440                                             u2681 1F24  
                                           u2761 1B3C                                             u3537 1152  
                                           u1874 16D0                                             u1970 2052  
                                           u1890 1CF2                                             u2690 1BDA  
                                           u2770 1B6C                                             u1875 16CC  
                                           u1971 204E                                             u1891 1CEE  
                                           u3627 145A                                             u2691 1BD6  
                                           u2771 1B68                                             u3547 1198  
                                           u1980 1A9C                                             u2780 1B96  
                                           u1981 1A98                                             u3637 1470  
                                           u2781 1B92                                             u3557 11E2  
                                           u1886 1720                                             u1990 1AC2  
                                           u2790 1BAC                                             u3647 1F62  
                                           u1991 1ABE                                             u2791 1BA8  
                                           u3567 1228                                             u3577 157C  
                                           u3587 1596                                             u3597 15AC  
                           _lcd_4bit_send_string 1C60                    ??_lcd_4bit_send_enable_signal 000A  
                                           _led1 0046                                             _led2 0045  
                                           _seg1 002E                                             _main 102E  
                                           fsr2h 0FDA                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                                           prodl 0FF3                                             start 0000  
               gpio_pin_initialize@_pin_config_t 0008                    __end_of_lcd_8bit_send_command 1894  
                                   ___param_bank 0000                            _lcd_4bit_send_command 1A8C  
                           _gpio_pin_write_logic 123C                                            ?_main 0001  
                            relay_turn_off@F3158 0050                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96  btn_high_magic_button@btn_high_last_valid_status 0059  
                    ??_lcd_8bit_send_custom_char 001F                            lcd_send_4bits@counter 000E  
                                          _lcd_1 0028                                            _lcd_2 007E  
                                          _count 004D                                            _errno 0047  
                                          _funcs 00C0                                            _hours 0027  
                                          _value 005A                         ?_lcd_8bit_send_char_data 000B  
            __end_of_lcd_8bit_send_char_data_pos 1FD6                      _lcd_8bit_send_char_data_pos 1F8A  
                          ?_lcd_4bit_send_string 0012                                            tablat 0FF5  
                                          status 0FD8                   ?_gpio_pin_direction_initialize 0001  
                  ??_lcd_8bit_send_char_data_pos 0019                                  __initialization 1E22  
                                   __end_of_main 123C                            ?_gpio_pin_write_logic 0001  
                         lcd_8bit_set_cursor@col 0013                           lcd_8bit_set_cursor@lcd 0011  
                         lcd_8bit_set_cursor@ret 0014                           lcd_8bit_set_cursor@row 0012  
                 lcd_8bit_send_char_data@counter 000F                                    _lat_registers 0074  
              __end_of_lcd_4bit_send_custom_char 1C60                                           ??_main 0022  
                                  __activetblptr 0003                                 led_turn_on@F3163 0055  
                        ecu_layer_initialize@ret 0016                   lcd_4bit_send_custom_char@_char 001E  
                      _lcd_8bit_send_custom_char 1B2C                 __end_of_lcd_4bit_send_string_pos 1F3A  
                         ?_lcd_4bit_send_command 000F                             _lcd_8bit_send_string 1D54  
                                         clear_0 1E76                                           _relay1 0044  
                                         _relay2 0043                                           isa$std 0001  
                 lcd_8bit_send_char_data_pos@col 0017                   lcd_8bit_send_char_data_pos@lcd 0015  
                 lcd_8bit_send_char_data_pos@ret 0019                      lcd_8bit_send_string_pos@col 0017  
                    lcd_8bit_send_string_pos@lcd 0015                   lcd_8bit_send_char_data_pos@row 0016  
                    lcd_8bit_send_string_pos@ret 0019                      lcd_8bit_send_string_pos@row 0016  
                    lcd_8bit_send_string_pos@str 0018                                     __pdataCOMRAM 0025  
                                   __mediumconst 0000                                           tblptrh 0FF7  
                                         tblptrl 0FF6                                           tblptru 0FF8  
                         ??_lcd_4bit_send_string 0014                                       __accesstop 0060  
                        __end_of__initialization 1E7C                                    ___rparam_used 0001  
                               ??_lcd_send_4bits 000B                          _lcd_4bit_send_char_data 19EC  
                         ??_gpio_pin_write_logic 0003                                   __pcstackCOMRAM 0001  
                               _application_init 20F2                                     __pidataBANK0 1DC2  
                          ?_lcd_8bit_send_string 0011                         lcd_4bit_send_command@lcd 000F  
                       lcd_4bit_send_command@ret 0011                     ?_lcd_4bit_send_char_data_pos 0016  
                                     _dc_motor_1 003B                                       _dc_motor_2 0039  
                        lcd_4bit_send_string@lcd 0012                          lcd_4bit_send_string@ret 0014  
                        lcd_4bit_send_string@str 0013                                       __pbssBANK0 00C0  
                         lcd_8bit_initialize@lcd 0011                           lcd_8bit_initialize@ret 0014  
                              led_turn_off@F3168 0054              lcd_4bit_initialize@lcd_data_counter 0014  
            lcd_8bit_initialize@lcd_data_counter 0013                                  led_toggle@F3173 0053  
                   lcd_4bit_send_custom_char@col 001D                     lcd_4bit_send_custom_char@lcd 001B  
                   lcd_4bit_send_custom_char@ret 0021                     lcd_4bit_send_custom_char@row 001C  
                      ?_lcd_4bit_send_string_pos 0016              __end_of_lcd_8bit_send_enable_signal 20A8  
                    _lcd_8bit_send_enable_signal 2068                                       _btn_values 1001  
                 lcd_8bit_send_enable_signal@lcd 0009                   lcd_8bit_send_enable_signal@ret 000A  
                                 _tris_registers 006A                        ??_lcd_4bit_send_char_data 0011  
                  ??_lcd_8bit_send_enable_signal 000A                                          __Hparam 0000  
                                        __Lparam 0000                           ??_lcd_8bit_send_string 0013  
                            _gpio_pin_initialize 2022                            _lcd_8bit_send_command 17E6  
                                   __psmallconst 1000                                          __pcinit 1E22  
                           led_intitialize@F3158 0056                                          __ramtop 1000  
                       _lcd_8bit_send_string_pos 1E82                                          __ptext0 102E  
                                        __ptext1 1E82                                          __ptext2 1D54  
                                        __ptext3 1B2C                                          __ptext4 1F8A  
                                        __ptext5 1894                                          __ptext6 1738  
                                        __ptext7 1EDE                                          __ptext8 1C60  
                                        __ptext9 1BC6                                          _btn_low 0036  
                ??_gpio_pin_direction_initialize 0002                                          _counter 004E  
                                        _keypad1 00B8                                          _custom1 00B0  
                                        _custom2 00A8                                          _custom3 00A0  
                                        _custom4 0098                                          _custom5 0090  
                                        _custom6 0088                                          _seg_val 004F  
                                        _minutes 0026                                          _seconds 0025  
                           ?_gpio_pin_initialize 0008                  lcd_8bit_send_char_data_pos@data 0018  
                                        main@ret 0024                             end_of_initialization 1E7C  
                              lcd_send_4bits@lcd 0009                                lcd_send_4bits@ret 000D  
                        ??_lcd_4bit_send_command 0011                gpio_pin_write_logic@_pin_config_t 0001  
                                        postdec1 0FE5                                          postdec2 0FDD  
                                        postinc0 0FEE                                          postinc2 0FDE  
                            _lcd_4bit_initialize 13A2                  __end_of_lcd_4bit_send_char_data 1A8C  
              __end_of_lcd_8bit_send_custom_char 1BC6                       ?_lcd_4bit_send_custom_char 001B  
                     lcd_4bit_send_char_data@lcd 000F                       lcd_4bit_send_char_data@ret 0011  
                          ??_gpio_pin_initialize 0009                         __end_of_application_init 20FC  
                lcd_4bit_send_char_data_pos@data 0019                             ?_lcd_4bit_initialize 0012  
               lcd_8bit_send_custom_char@mem_pos 001E                              _lcd_4bit_set_cursor 1940  
                             relay_turn_on@F3153 0051                           ?_lcd_8bit_send_command 000B  
                    lcd_4bit_send_string_pos@col 0018                      lcd_4bit_send_string_pos@lcd 0016  
                    lcd_4bit_send_string_pos@ret 001A                      lcd_4bit_send_string_pos@row 0017  
                    lcd_4bit_send_string_pos@str 0019                                    __pidataCOMRAM 20D0  
                               turn_on_leds@_POS 0057                   button_read_state@btn_low_valid 0049  
                            start_initialization 1E22                     ?_lcd_4bit_send_enable_signal 0009  
                           ?_lcd_4bit_set_cursor 0012                              _lcd_8bit_initialize 14EE  
          __end_of_gpio_pin_direction_initialize 1738                    _gpio_pin_direction_initialize 1626  
                          ??_lcd_4bit_initialize 0013                             ?_lcd_8bit_initialize 0011  
                        _lcd_8bit_send_char_data 1738                              application_init@ret 0017  
                                    __pdataBANK0 0060                     __end_of_ecu_layer_initialize 20D0  
                            _lcd_8bit_set_cursor 1894                     lcd_4bit_send_command@command 0010  
                       lcd_8bit_send_command@lcd 000B                         lcd_8bit_send_command@ret 0010  
                 lcd_8bit_send_custom_char@_char 001D                                      __pbssCOMRAM 0047  
                          ??_lcd_4bit_set_cursor 0015                  btn_high_magic_button@led_status 0058  
                   ?_lcd_8bit_send_char_data_pos 0015                             ?_lcd_8bit_set_cursor 0011  
                          ??_lcd_8bit_initialize 0012                       ??_lcd_8bit_send_string_pos 0019  
                    lcd_8bit_send_char_data@data 000C                 lcd_4bit_send_custom_char@mem_pos 001F  
                      gpio_pin_write_logic@logic 0002                                      __smallconst 1000  
                          ??_lcd_8bit_set_cursor 0014                     lcd_8bit_send_custom_char@col 001C  
                   lcd_8bit_send_custom_char@lcd 001A                     lcd_8bit_send_custom_char@ret 0020  
                   lcd_8bit_send_custom_char@row 001B                       lcd_send_4bits@data_command 000A  
                      ??_lcd_8bit_send_char_data 000D                    __end_of_lcd_4bit_send_command 1B2C  
               gpio_pin_direction_initialize@ret 0007       gpio_pin_direction_initialize@_pin_config_t 0001  
                       _lcd_4bit_send_string_pos 1EDE                   lcd_4bit_send_char_data_pos@col 0018  
                 lcd_4bit_send_char_data_pos@lcd 0016                   lcd_4bit_send_char_data_pos@ret 001A  
                 lcd_4bit_send_char_data_pos@row 0017                      ??_lcd_4bit_send_custom_char 0020  
                         gpio_pin_initialize@ret 000A                                      _seg1_enable 0042  
            __end_of_lcd_4bit_send_char_data_pos 2022                      _lcd_4bit_send_char_data_pos 1FD6  
                                    _seg2_enable 0041                                      _seg3_enable 0040  
                                    _seg4_enable 003F                          gpio_pin_write_logic@ret 0008  
                              ?_application_init 0001                                      _seg5_enable 003E  
                       ?_lcd_4bit_send_char_data 000F                                        copy_data0 1E36  
                                      copy_data1 1E56                                      _seg6_enable 003D  
                             ??_application_init 0017                             _ecu_layer_initialize 20A8  
                  ??_lcd_4bit_send_char_data_pos 001A                          ??_lcd_8bit_send_command 000D  
           lcd_4bit_send_custom_char@lcd_counter 0020             lcd_8bit_send_custom_char@lcd_counter 001F  
                                       __Hrparam 0000                                         __Lrparam 0000  
                         lcd_4bit_set_cursor@col 0014                           lcd_4bit_set_cursor@lcd 0012  
                         lcd_4bit_set_cursor@ret 0015                           lcd_4bit_set_cursor@row 0013  
                __end_of_lcd_8bit_send_char_data 17E6                      __end_of_gpio_pin_initialize 2068  
                             __end_of_btn_values 1011                       ?_lcd_8bit_send_custom_char 001A  
                     lcd_8bit_send_char_data@lcd 000B                       lcd_8bit_send_char_data@ret 0010  
                                       __ptext10 1FD6                                         __ptext11 1940  
                                       __ptext20 1CDE                                         __ptext12 19EC  
                                       __ptext21 1F3A                                         __ptext13 20F2  
                                       __ptext22 123C                                         __ptext14 20A8  
                                       __ptext23 2022                                         __ptext15 14EE  
                                       __ptext24 1626                                         __ptext16 17E6  
                                       __ptext17 2068                                         __ptext18 13A2  
                                       __ptext19 1A8C                                         _btn_high 0033  
                          ?_ecu_layer_initialize 0001                        _lcd_4bit_send_custom_char 1BC6  
               __end_of_lcd_8bit_send_string_pos 1EDE                                         isa$xinst 0000  
                   __end_of_lcd_4bit_send_string 1CDE                                   _lcd_send_4bits 1CDE  
                    __end_of_lcd_4bit_initialize 14EE                     __end_of_gpio_pin_write_logic 13A2  
                   ?_lcd_8bit_send_enable_signal 0009                   lcd_4bit_send_enable_signal@lcd 0009  
                 lcd_4bit_send_enable_signal@ret 000A                           __end_of_lcd_send_4bits 1D54  
                    __end_of_lcd_4bit_set_cursor 19EC                                   _port_registers 0060  
                        lcd_8bit_send_string@lcd 0011                          lcd_8bit_send_string@ret 0013  
                        lcd_8bit_send_string@str 0012                           ??_ecu_layer_initialize 0016  
                    __end_of_lcd_8bit_initialize 1626                     lcd_8bit_send_command@command 000C  
                   lcd_8bit_send_command@counter 000F                      lcd_4bit_send_char_data@data 0010  
                     ??_lcd_4bit_send_string_pos 001A                           lcd_4bit_initialize@lcd 0012  
                         lcd_4bit_initialize@ret 0015  
