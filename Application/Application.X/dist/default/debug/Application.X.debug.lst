

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Jul 05 07:58:31 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1
    40                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    41                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    42   000000                     
    43                           ; Generated 12/10/2023 GMT
    44                           ; 
    45                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC18F46K20 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77   000000                     
    78                           	psect	idataCOMRAM
    79   001FF2                     __pidataCOMRAM:
    80                           	callstack 0
    81                           
    82                           ;initializer for _number2
    83   001FF2  FFFF               	dw	65535
    84                           
    85                           ;initializer for _seconds
    86   001FF4  2D                 	db	45
    87                           
    88                           ;initializer for _minutes
    89   001FF5  3B                 	db	59
    90                           
    91                           ;initializer for _hours
    92   001FF6  17                 	db	23
    93                           
    94                           ;initializer for _dc_motor_2
    95   001FF7  12                 	db	18
    96   001FF8  1A                 	db	26
    97                           
    98                           ;initializer for _dc_motor_1
    99   001FF9  02                 	db	2
   100   001FFA  0A                 	db	10
   101                           
   102                           ;initializer for _seg6_enable
   103   001FFB  2B                 	db	43
   104                           
   105                           ;initializer for _seg5_enable
   106   001FFC  23                 	db	35
   107                           
   108                           ;initializer for _seg4_enable
   109   001FFD  1B                 	db	27
   110                           
   111                           ;initializer for _seg3_enable
   112   001FFE  13                 	db	19
   113                           
   114                           ;initializer for _seg2_enable
   115   001FFF  0B                 	db	11
   116                           
   117                           ;initializer for _seg1_enable
   118   002000  03                 	db	3
   119                           
   120                           ;initializer for _relay2
   121   002001  12                 	db	18
   122                           
   123                           ;initializer for _relay1
   124   002002  02                 	db	2
   125                           
   126                           ;initializer for _led2
   127   002003  12                 	db	18
   128                           
   129                           ;initializer for _led1
   130   002004  02                 	db	2
   131                           
   132                           	psect	idataBANK0
   133   001F18                     __pidataBANK0:
   134                           	callstack 0
   135                           
   136                           ;initializer for _port_registers
   137   001F18  80                 	db	128
   138   001F19  0F                 	db	15
   139   001F1A  81                 	db	129
   140   001F1B  0F                 	db	15
   141   001F1C  82                 	db	130
   142   001F1D  0F                 	db	15
   143   001F1E  83                 	db	131
   144   001F1F  0F                 	db	15
   145   001F20  84                 	db	132
   146   001F21  0F                 	db	15
   147                           
   148                           ;initializer for _tris_registers
   149   001F22  92                 	db	146
   150   001F23  0F                 	db	15
   151   001F24  93                 	db	147
   152   001F25  0F                 	db	15
   153   001F26  94                 	db	148
   154   001F27  0F                 	db	15
   155   001F28  95                 	db	149
   156   001F29  0F                 	db	15
   157   001F2A  96                 	db	150
   158   001F2B  0F                 	db	15
   159                           
   160                           ;initializer for _lat_registers
   161   001F2C  89                 	db	137
   162   001F2D  0F                 	db	15
   163   001F2E  8A                 	db	138
   164   001F2F  0F                 	db	15
   165   001F30  8B                 	db	139
   166   001F31  0F                 	db	15
   167   001F32  8C                 	db	140
   168   001F33  0F                 	db	15
   169   001F34  8D                 	db	141
   170   001F35  0F                 	db	15
   171                           
   172                           ;initializer for _lcd_2
   173   001F36  32                 	db	50
   174   001F37  3A                 	db	58
   175   001F38  03                 	db	3
   176   001F39  0B                 	db	11
   177   001F3A  13                 	db	19
   178   001F3B  1B                 	db	27
   179   001F3C  23                 	db	35
   180   001F3D  2B                 	db	43
   181   001F3E  33                 	db	51
   182   001F3F  3B                 	db	59
   183                           
   184                           ;initializer for _keypad1
   185   001F40  82                 	db	130
   186   001F41  8A                 	db	138
   187   001F42  92                 	db	146
   188   001F43  9A                 	db	154
   189   001F44  62                 	db	98
   190   001F45  6A                 	db	106
   191   001F46  72                 	db	114
   192   001F47  7A                 	db	122
   193                           
   194                           ;initializer for _lcd_1
   195   001F48  02                 	db	2
   196   001F49  0A                 	db	10
   197   001F4A  12                 	db	18
   198   001F4B  1A                 	db	26
   199   001F4C  22                 	db	34
   200   001F4D  2A                 	db	42
   201                           
   202                           ;initializer for _seg1
   203   001F4E  02                 	db	2
   204   001F4F  0A                 	db	10
   205   001F50  12                 	db	18
   206   001F51  1A                 	db	26
   207   001F52  01                 	db	1
   208                           
   209                           ;initializer for _btn_high
   210   001F53  52                 	db	82
   211   001F54  00                 	db	0
   212   001F55  00                 	db	0
   213                           
   214                           ;initializer for _btn_low
   215   001F56  C3                 	db	195
   216   001F57  00                 	db	0
   217   001F58  01                 	db	1
   218                           
   219                           	psect	smallconst
   220   001000                     __psmallconst:
   221                           	callstack 0
   222   001000  00                 	db	0
   223   001001                     _btn_values:
   224                           	callstack 0
   225   001001  37                 	db	55
   226   001002  38                 	db	56
   227   001003  39                 	db	57
   228   001004  2F                 	db	47
   229   001005  34                 	db	52
   230   001006  35                 	db	53
   231   001007  36                 	db	54
   232   001008  2A                 	db	42
   233   001009  31                 	db	49
   234   00100A  32                 	db	50
   235   00100B  33                 	db	51
   236   00100C  2D                 	db	45
   237   00100D  23                 	db	35
   238   00100E  30                 	db	48
   239   00100F  3D                 	db	61
   240   001010  2B                 	db	43
   241   001011                     __end_of_btn_values:
   242                           	callstack 0
   243   000000                     _PORTA	set	3968
   244   000000                     _LATA	set	3977
   245   000000                     _TRISA	set	3986
   246   000000                     _LATE	set	3981
   247   000000                     _LATD	set	3980
   248   000000                     _LATC	set	3979
   249   000000                     _LATB	set	3978
   250   000000                     _TRISE	set	3990
   251   000000                     _TRISD	set	3989
   252   000000                     _TRISC	set	3988
   253   000000                     _TRISB	set	3987
   254   000000                     _PORTE	set	3972
   255   000000                     _PORTD	set	3971
   256   000000                     _PORTC	set	3970
   257   000000                     _PORTB	set	3969
   258   001011                     STR_1:
   259   001011  25                 	db	37
   260   001012  75                 	db	117	;'u'
   261   001013  00                 	db	0
   262   001014  00                 	db	0	; dummy byte at the end
   263   000000                     
   264                           ; #config settings
   265                           
   266                           	psect	cinit
   267   001D74                     __pcinit:
   268                           	callstack 0
   269   001D74                     start_initialization:
   270                           	callstack 0
   271   001D74                     __initialization:
   272                           	callstack 0
   273                           
   274                           ; Initialize objects allocated to BANK0 (65 bytes)
   275                           ; load TBLPTR registers with __pidataBANK0
   276   001D74  0E18               	movlw	low __pidataBANK0
   277   001D76  6EF6               	movwf	tblptrl,c
   278   001D78  0E1F               	movlw	high __pidataBANK0
   279   001D7A  6EF7               	movwf	tblptrh,c
   280   001D7C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   281   001D7E  6EF8               	movwf	tblptru,c
   282   001D80  EE00  F060         	lfsr	0,__pdataBANK0
   283   001D84  EE10 F041          	lfsr	1,65
   284   001D88                     copy_data0:
   285   001D88  0009               	tblrd		*+
   286   001D8A  CFF5 FFEE          	movff	tablat,postinc0
   287   001D8E  50E5               	movf	postdec1,w,c
   288   001D90  50E1               	movf	fsr1l,w,c
   289   001D92  E1FA               	bnz	copy_data0
   290                           
   291                           ; Initialize objects allocated to COMRAM (19 bytes)
   292                           ; load TBLPTR registers with __pidataCOMRAM
   293   001D94  0EF2               	movlw	low __pidataCOMRAM
   294   001D96  6EF6               	movwf	tblptrl,c
   295   001D98  0E1F               	movlw	high __pidataCOMRAM
   296   001D9A  6EF7               	movwf	tblptrh,c
   297   001D9C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   298   001D9E  6EF8               	movwf	tblptru,c
   299   001DA0  EE00  F04C         	lfsr	0,__pdataCOMRAM
   300   001DA4  EE10 F013          	lfsr	1,19
   301   001DA8                     copy_data1:
   302   001DA8  0009               	tblrd		*+
   303   001DAA  CFF5 FFEE          	movff	tablat,postinc0
   304   001DAE  50E5               	movf	postdec1,w,c
   305   001DB0  50E1               	movf	fsr1l,w,c
   306   001DB2  E1FA               	bnz	copy_data1
   307                           
   308                           ; Clear objects allocated to BANK0 (56 bytes)
   309   001DB4  EE00  F0A1         	lfsr	0,__pbssBANK0
   310   001DB8  0E38               	movlw	56
   311   001DBA                     clear_0:
   312   001DBA  6AEE               	clrf	postinc0,c
   313   001DBC  06E8               	decf	wreg,f,c
   314   001DBE  E1FD               	bnz	clear_0
   315                           
   316                           ; Clear objects allocated to COMRAM (20 bytes)
   317   001DC0  EE00  F038         	lfsr	0,__pbssCOMRAM
   318   001DC4  0E14               	movlw	20
   319   001DC6                     clear_1:
   320   001DC6  6AEE               	clrf	postinc0,c
   321   001DC8  06E8               	decf	wreg,f,c
   322   001DCA  E1FD               	bnz	clear_1
   323   001DCC                     end_of_initialization:
   324                           	callstack 0
   325   001DCC                     __end_of__initialization:
   326                           	callstack 0
   327   001DCC  0100               	movlb	0
   328   001DCE  EFF1  F00D         	goto	_main	;jump to C main() function
   329                           
   330                           	psect	bssCOMRAM
   331   000038                     __pbssCOMRAM:
   332                           	callstack 0
   333   000038                     button_read_state@btn_low_valid:
   334                           	callstack 0
   335   000038                     	ds	2
   336   00003A                     button_read_state@btn_high_valid:
   337                           	callstack 0
   338   00003A                     	ds	2
   339   00003C                     _flags:
   340                           	callstack 0
   341   00003C                     	ds	1
   342   00003D                     _count:
   343                           	callstack 0
   344   00003D                     	ds	1
   345   00003E                     _number:
   346                           	callstack 0
   347   00003E                     	ds	1
   348   00003F                     _counter:
   349                           	callstack 0
   350   00003F                     	ds	1
   351   000040                     _seg_val:
   352                           	callstack 0
   353   000040                     	ds	1
   354   000041                     relay_turn_off@F3160:
   355                           	callstack 0
   356   000041                     	ds	1
   357   000042                     relay_turn_on@F3155:
   358                           	callstack 0
   359   000042                     	ds	1
   360   000043                     relay_initialize@F3150:
   361                           	callstack 0
   362   000043                     	ds	1
   363   000044                     led_toggle@F3175:
   364                           	callstack 0
   365   000044                     	ds	1
   366   000045                     led_turn_off@F3170:
   367                           	callstack 0
   368   000045                     	ds	1
   369   000046                     led_turn_on@F3165:
   370                           	callstack 0
   371   000046                     	ds	1
   372   000047                     led_intitialize@F3160:
   373                           	callstack 0
   374   000047                     	ds	1
   375   000048                     turn_on_leds@_POS:
   376                           	callstack 0
   377   000048                     	ds	1
   378   000049                     btn_high_magic_button@led_status:
   379                           	callstack 0
   380   000049                     	ds	1
   381   00004A                     btn_high_magic_button@btn_high_last_valid_status:
   382                           	callstack 0
   383   00004A                     	ds	1
   384   00004B                     _value:
   385                           	callstack 0
   386   00004B                     	ds	1
   387                           
   388                           	psect	dataCOMRAM
   389   00004C                     __pdataCOMRAM:
   390                           	callstack 0
   391   00004C                     _number2:
   392                           	callstack 0
   393   00004C                     	ds	2
   394   00004E                     _seconds:
   395                           	callstack 0
   396   00004E                     	ds	1
   397   00004F                     _minutes:
   398                           	callstack 0
   399   00004F                     	ds	1
   400   000050                     _hours:
   401                           	callstack 0
   402   000050                     	ds	1
   403   000051                     _dc_motor_2:
   404                           	callstack 0
   405   000051                     	ds	2
   406   000053                     _dc_motor_1:
   407                           	callstack 0
   408   000053                     	ds	2
   409   000055                     _seg6_enable:
   410                           	callstack 0
   411   000055                     	ds	1
   412   000056                     _seg5_enable:
   413                           	callstack 0
   414   000056                     	ds	1
   415   000057                     _seg4_enable:
   416                           	callstack 0
   417   000057                     	ds	1
   418   000058                     _seg3_enable:
   419                           	callstack 0
   420   000058                     	ds	1
   421   000059                     _seg2_enable:
   422                           	callstack 0
   423   000059                     	ds	1
   424   00005A                     _seg1_enable:
   425                           	callstack 0
   426   00005A                     	ds	1
   427   00005B                     _relay2:
   428                           	callstack 0
   429   00005B                     	ds	1
   430   00005C                     _relay1:
   431                           	callstack 0
   432   00005C                     	ds	1
   433   00005D                     _led2:
   434                           	callstack 0
   435   00005D                     	ds	1
   436   00005E                     _led1:
   437                           	callstack 0
   438   00005E                     	ds	1
   439                           
   440                           	psect	bssBANK0
   441   0000A1                     __pbssBANK0:
   442                           	callstack 0
   443   0000A1                     _dbuf:
   444                           	callstack 0
   445   0000A1                     	ds	32
   446   0000C1                     _funcs:
   447                           	callstack 0
   448   0000C1                     	ds	6
   449   0000C7                     _lcd_counter_txt:
   450                           	callstack 0
   451   0000C7                     	ds	4
   452   0000CB                     _nout:
   453                           	callstack 0
   454   0000CB                     	ds	2
   455   0000CD                     _width:
   456                           	callstack 0
   457   0000CD                     	ds	2
   458   0000CF                     _prec:
   459                           	callstack 0
   460   0000CF                     	ds	2
   461   0000D1                     _errno:
   462                           	callstack 0
   463   0000D1                     	ds	2
   464   0000D3                     _lcd_counter_txt2:
   465                           	callstack 0
   466   0000D3                     	ds	6
   467                           
   468                           	psect	dataBANK0
   469   000060                     __pdataBANK0:
   470                           	callstack 0
   471   000060                     _port_registers:
   472                           	callstack 0
   473   000060                     	ds	10
   474   00006A                     _tris_registers:
   475                           	callstack 0
   476   00006A                     	ds	10
   477   000074                     _lat_registers:
   478                           	callstack 0
   479   000074                     	ds	10
   480   00007E                     _lcd_2:
   481                           	callstack 0
   482   00007E                     	ds	10
   483   000088                     _keypad1:
   484                           	callstack 0
   485   000088                     	ds	8
   486   000090                     _lcd_1:
   487                           	callstack 0
   488   000090                     	ds	6
   489   000096                     _seg1:
   490                           	callstack 0
   491   000096                     	ds	5
   492   00009B                     _btn_high:
   493                           	callstack 0
   494   00009B                     	ds	3
   495   00009E                     _btn_low:
   496                           	callstack 0
   497   00009E                     	ds	3
   498                           
   499                           	psect	cstackCOMRAM
   500   000001                     __pcstackCOMRAM:
   501                           	callstack 0
   502   000001                     ?___lwdiv:
   503                           	callstack 0
   504   000001                     ?___lwmod:
   505                           	callstack 0
   506   000001                     gpio_pin_direction_initialize@_pin_config_t:
   507                           	callstack 0
   508   000001                     gpio_pin_write_logic@_pin_config_t:
   509                           	callstack 0
   510   000001                     memset@dest:
   511                           	callstack 0
   512   000001                     ___lwdiv@dividend:
   513                           	callstack 0
   514   000001                     ___lwmod@dividend:
   515                           	callstack 0
   516   000001                     fputc@c:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x0
   520   000001                     	ds	1
   521   000002                     ??_gpio_pin_direction_initialize:
   522   000002                     gpio_pin_write_logic@logic:
   523                           	callstack 0
   524   000002                     memset@c:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x1
   528   000002                     	ds	1
   529   000003                     ??_gpio_pin_write_logic:
   530   000003                     fputc@fp:
   531                           	callstack 0
   532   000003                     ___lwdiv@divisor:
   533                           	callstack 0
   534   000003                     ___lwmod@divisor:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x2
   538   000003                     	ds	1
   539   000004                     ??_fputc:
   540   000004                     memset@n:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x3
   544   000004                     	ds	1
   545   000005                     ___lwmod@counter:
   546                           	callstack 0
   547   000005                     ___lwdiv@quotient:
   548                           	callstack 0
   549                           
   550                           ; 2 bytes @ 0x4
   551   000005                     	ds	1
   552   000006                     memset@p:
   553                           	callstack 0
   554                           
   555                           ; 1 bytes @ 0x5
   556   000006                     	ds	1
   557   000007                     gpio_pin_direction_initialize@ret:
   558                           	callstack 0
   559   000007                     ___lwdiv@counter:
   560                           	callstack 0
   561                           
   562                           ; 1 bytes @ 0x6
   563   000007                     	ds	1
   564   000008                     gpio_pin_initialize@_pin_config_t:
   565                           	callstack 0
   566   000008                     gpio_pin_write_logic@ret:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x7
   570   000008                     	ds	1
   571   000009                     ??_gpio_pin_initialize:
   572   000009                     ?_vfpfcnvrt:
   573                           	callstack 0
   574   000009                     lcd_send_4bits@lcd:
   575                           	callstack 0
   576   000009                     lcd_4bit_send_enable_signal@lcd:
   577                           	callstack 0
   578   000009                     lcd_8bit_send_enable_signal@lcd:
   579                           	callstack 0
   580   000009                     vfpfcnvrt@fp:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x8
   584   000009                     	ds	1
   585   00000A                     lcd_send_4bits@data_command:
   586                           	callstack 0
   587   00000A                     lcd_4bit_send_enable_signal@ret:
   588                           	callstack 0
   589   00000A                     lcd_8bit_send_enable_signal@ret:
   590                           	callstack 0
   591   00000A                     gpio_pin_initialize@ret:
   592                           	callstack 0
   593   00000A                     vfpfcnvrt@fmt:
   594                           	callstack 0
   595                           
   596                           ; 1 bytes @ 0x9
   597   00000A                     	ds	1
   598   00000B                     ??_lcd_send_4bits:
   599   00000B                     lcd_8bit_send_command@lcd:
   600                           	callstack 0
   601   00000B                     lcd_8bit_send_char_data@lcd:
   602                           	callstack 0
   603   00000B                     vfpfcnvrt@ap:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0xA
   607   00000B                     	ds	1
   608   00000C                     ??_vfpfcnvrt:
   609   00000C                     lcd_8bit_send_command@command:
   610                           	callstack 0
   611   00000C                     lcd_8bit_send_char_data@data:
   612                           	callstack 0
   613                           
   614                           ; 1 bytes @ 0xB
   615   00000C                     	ds	1
   616   00000D                     ??_lcd_8bit_send_command:
   617   00000D                     ??_lcd_8bit_send_char_data:
   618   00000D                     lcd_send_4bits@ret:
   619                           	callstack 0
   620   00000D                     vfpfcnvrt@cnt:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0xC
   624   00000D                     	ds	1
   625   00000E                     lcd_send_4bits@counter:
   626                           	callstack 0
   627                           
   628                           ; 1 bytes @ 0xD
   629   00000E                     	ds	1
   630   00000F                     lcd_4bit_send_command@lcd:
   631                           	callstack 0
   632   00000F                     lcd_8bit_send_command@counter:
   633                           	callstack 0
   634   00000F                     lcd_8bit_send_char_data@counter:
   635                           	callstack 0
   636   00000F                     vfpfcnvrt@convarg:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0xE
   640   00000F                     	ds	1
   641   000010                     lcd_4bit_send_command@command:
   642                           	callstack 0
   643   000010                     lcd_8bit_send_command@ret:
   644                           	callstack 0
   645   000010                     lcd_8bit_send_char_data@ret:
   646                           	callstack 0
   647                           
   648                           ; 1 bytes @ 0xF
   649   000010                     	ds	1
   650   000011                     lcd_4bit_send_command@ret:
   651                           	callstack 0
   652   000011                     lcd_8bit_initialize@lcd:
   653                           	callstack 0
   654   000011                     lcd_8bit_send_string@lcd:
   655                           	callstack 0
   656   000011                     lcd_8bit_set_cursor@lcd:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x10
   660   000011                     	ds	1
   661   000012                     ??_lcd_8bit_initialize:
   662   000012                     lcd_4bit_initialize@lcd:
   663                           	callstack 0
   664   000012                     lcd_8bit_send_string@str:
   665                           	callstack 0
   666   000012                     lcd_8bit_set_cursor@row:
   667                           	callstack 0
   668                           
   669                           ; 1 bytes @ 0x11
   670   000012                     	ds	1
   671   000013                     ??_lcd_4bit_initialize:
   672   000013                     lcd_8bit_initialize@lcd_data_counter:
   673                           	callstack 0
   674   000013                     lcd_8bit_send_string@ret:
   675                           	callstack 0
   676   000013                     lcd_8bit_set_cursor@col:
   677                           	callstack 0
   678   000013                     vfpfcnvrt@cp:
   679                           	callstack 0
   680                           
   681                           ; 1 bytes @ 0x12
   682   000013                     	ds	1
   683   000014                     lcd_4bit_initialize@lcd_data_counter:
   684                           	callstack 0
   685   000014                     lcd_8bit_initialize@ret:
   686                           	callstack 0
   687   000014                     lcd_8bit_set_cursor@ret:
   688                           	callstack 0
   689   000014                     vfpfcnvrt@c:
   690                           	callstack 0
   691                           
   692                           ; 1 bytes @ 0x13
   693   000014                     	ds	1
   694   000015                     ?_vfprintf:
   695                           	callstack 0
   696   000015                     lcd_4bit_initialize@ret:
   697                           	callstack 0
   698   000015                     lcd_8bit_send_string_pos@lcd:
   699                           	callstack 0
   700   000015                     vfprintf@fp:
   701                           	callstack 0
   702                           
   703                           ; 1 bytes @ 0x14
   704   000015                     	ds	1
   705   000016                     lcd_8bit_send_string_pos@row:
   706                           	callstack 0
   707   000016                     ecu_layer_initialize@ret:
   708                           	callstack 0
   709   000016                     vfprintf@fmt:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x15
   713   000016                     	ds	1
   714   000017                     lcd_8bit_send_string_pos@col:
   715                           	callstack 0
   716   000017                     application_init@ret:
   717                           	callstack 0
   718   000017                     vfprintf@ap:
   719                           	callstack 0
   720                           
   721                           ; 1 bytes @ 0x16
   722   000017                     	ds	1
   723   000018                     lcd_8bit_send_string_pos@str:
   724                           	callstack 0
   725   000018                     vfprintf@cfmt:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x17
   729   000018                     	ds	1
   730   000019                     ?_snprintf:
   731                           	callstack 0
   732   000019                     lcd_8bit_send_string_pos@ret:
   733                           	callstack 0
   734   000019                     snprintf@s:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x18
   738   000019                     	ds	1
   739   00001A                     snprintf@n:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x19
   743   00001A                     	ds	2
   744   00001C                     snprintf@fmt:
   745                           	callstack 0
   746                           
   747                           ; 1 bytes @ 0x1B
   748   00001C                     	ds	3
   749   00001F                     ??_snprintf:
   750                           
   751                           ; 1 bytes @ 0x1E
   752   00001F                     	ds	3
   753   000022                     _snprintf$1691:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x21
   757   000022                     	ds	2
   758   000024                     snprintf@ap:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x23
   762   000024                     	ds	1
   763   000025                     snprintf@cnt:
   764                           	callstack 0
   765                           
   766                           ; 2 bytes @ 0x24
   767   000025                     	ds	2
   768   000027                     snprintf@f:
   769                           	callstack 0
   770                           
   771                           ; 12 bytes @ 0x26
   772   000027                     	ds	12
   773   000033                     convert_short_to_string@value:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x32
   777   000033                     	ds	2
   778   000035                     convert_short_to_string@str:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x34
   782   000035                     	ds	1
   783   000036                     convert_short_to_string@ret:
   784                           	callstack 0
   785                           
   786                           ; 1 bytes @ 0x35
   787   000036                     	ds	1
   788   000037                     main@ret:
   789                           	callstack 0
   790                           
   791                           ; 1 bytes @ 0x36
   792   000037                     	ds	1
   793                           
   794 ;;
   795 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   796 ;;
   797 ;; *************** function _main *****************
   798 ;; Defined at:
   799 ;;		line 13 in file "app.c"
   800 ;; Parameters:    Size  Location     Type
   801 ;;		None
   802 ;; Auto vars:     Size  Location     Type
   803 ;;  ret             1   54[COMRAM] unsigned char 
   804 ;; Return value:  Size  Location     Type
   805 ;;                  2  747[None  ] int 
   806 ;; Registers used:
   807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels required when called: 6
   819 ;; This function calls:
   820 ;;		_application_init
   821 ;;		_convert_short_to_string
   822 ;;		_lcd_8bit_send_command
   823 ;;		_lcd_8bit_send_string_pos
   824 ;; This function is called by:
   825 ;;		Startup code after reset
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text0
   830   001BE2                     __ptext0:
   831                           	callstack 0
   832   001BE2                     _main:
   833                           	callstack 25
   834   001BE2                     
   835                           ;app.c: 15:     Std_ReturnType ret = application_init();
   836   001BE2  EC03  F010         	call	_application_init	;wreg free
   837   001BE6  6E37               	movwf	main@ret^0,c
   838   001BE8                     
   839                           ;app.c: 17:     if ((Std_ReturnType)0x01u == ret)
   840   001BE8  0437               	decf	main@ret^0,w,c
   841   001BEA  A4D8               	btfss	status,2,c
   842   001BEC  EFFA  F00D         	goto	u3891
   843   001BF0  EFFC  F00D         	goto	u3890
   844   001BF4                     u3891:
   845   001BF4  EFFE  F00D         	goto	l4426
   846   001BF8                     u3890:
   847   001BF8  EF23  F00E         	goto	l749
   848   001BFC                     l4426:
   849                           
   850                           ;app.c: 23:     {;app.c: 24:         if (0 == number2) {ret = lcd_8bit_send_command(&lcd
      +                          _2, 0x01);}
   851   001BFC  504C               	movf	_number2^0,w,c
   852   001BFE  104D               	iorwf	(_number2+1)^0,w,c
   853   001C00  A4D8               	btfss	status,2,c
   854   001C02  EF05  F00E         	goto	u3901
   855   001C06  EF07  F00E         	goto	u3900
   856   001C0A                     u3901:
   857   001C0A  EF0D  F00E         	goto	l4430
   858   001C0E                     u3900:
   859   001C0E  0E7E               	movlw	low _lcd_2
   860   001C10  6E0B               	movwf	lcd_8bit_send_command@lcd^0,c
   861   001C12  0E01               	movlw	1
   862   001C14  6E0C               	movwf	lcd_8bit_send_command@command^0,c
   863   001C16  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
   864   001C1A                     l4430:
   865   001C1A  C04C  F033         	movff	_number2,convert_short_to_string@value
   866   001C1E  C04D  F034         	movff	_number2+1,convert_short_to_string@value+1
   867   001C22  0ED3               	movlw	low _lcd_counter_txt2
   868   001C24  6E35               	movwf	convert_short_to_string@str^0,c
   869   001C26  EC25  F00E         	call	_convert_short_to_string	;wreg free
   870   001C2A  0E7E               	movlw	low _lcd_2
   871   001C2C  6E15               	movwf	lcd_8bit_send_string_pos@lcd^0,c
   872   001C2E  0E01               	movlw	1
   873   001C30  6E16               	movwf	lcd_8bit_send_string_pos@row^0,c
   874   001C32  0E01               	movlw	1
   875   001C34  6E17               	movwf	lcd_8bit_send_string_pos@col^0,c
   876   001C36  0ED3               	movlw	low _lcd_counter_txt2
   877   001C38  6E18               	movwf	lcd_8bit_send_string_pos@str^0,c
   878   001C3A  ECE9  F00E         	call	_lcd_8bit_send_string_pos	;wreg free
   879   001C3E                     
   880                           ;app.c: 27:         number2++;
   881   001C3E  4A4C               	infsnz	_number2^0,f,c
   882   001C40  2A4D               	incf	(_number2+1)^0,f,c
   883   001C42  EFFE  F00D         	goto	l4426
   884   001C46                     l749:
   885   001C46  EF00  F000         	goto	start
   886   001C4A                     __end_of_main:
   887                           	callstack 0
   888                           
   889 ;; *************** function _lcd_8bit_send_string_pos *****************
   890 ;; Defined at:
   891 ;;		line 343 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;  lcd             1   20[COMRAM] PTR const struct .
   894 ;;		 -> lcd_2(10), 
   895 ;;  row             1   21[COMRAM] unsigned char 
   896 ;;  col             1   22[COMRAM] unsigned char 
   897 ;;  str             1   23[COMRAM] PTR unsigned char 
   898 ;;		 -> lcd_counter_txt2(6), 
   899 ;; Auto vars:     Size  Location     Type
   900 ;;  ret             1   24[COMRAM] unsigned char 
   901 ;; Return value:  Size  Location     Type
   902 ;;                  1    wreg      unsigned char 
   903 ;; Registers used:
   904 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   905 ;; Tracked objects:
   906 ;;		On entry : 0/0
   907 ;;		On exit  : 0/0
   908 ;;		Unchanged: 0/0
   909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   910 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   911 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;Total ram usage:        5 bytes
   915 ;; Hardware stack levels used: 1
   916 ;; Hardware stack levels required when called: 4
   917 ;; This function calls:
   918 ;;		_lcd_8bit_send_string
   919 ;;		_lcd_8bit_set_cursor
   920 ;; This function is called by:
   921 ;;		_main
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           	psect	text1
   926   001DD2                     __ptext1:
   927                           	callstack 0
   928   001DD2                     _lcd_8bit_send_string_pos:
   929                           	callstack 26
   930   001DD2                     
   931                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 346:  if (((void*)0) == lcd || ((void*)0) == str)
   932   001DD2  5015               	movf	lcd_8bit_send_string_pos@lcd^0,w,c
   933   001DD4  B4D8               	btfsc	status,2,c
   934   001DD6  EFEF  F00E         	goto	u3011
   935   001DDA  EFF1  F00E         	goto	u3010
   936   001DDE                     u3011:
   937   001DDE  EFF9  F00E         	goto	l3664
   938   001DE2                     u3010:
   939   001DE2  5018               	movf	lcd_8bit_send_string_pos@str^0,w,c
   940   001DE4  A4D8               	btfss	status,2,c
   941   001DE6  EFF7  F00E         	goto	u3021
   942   001DEA  EFF9  F00E         	goto	u3020
   943   001DEE                     u3021:
   944   001DEE  EFFD  F00E         	goto	l3666
   945   001DF2                     u3020:
   946   001DF2                     l3664:
   947                           
   948                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 347:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 348:     
      +                           ret = (Std_ReturnType)0x01u;
   949   001DF2  0E01               	movlw	1
   950   001DF4  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   951                           
   952                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 349:  }
   953   001DF6  EF15  F00F         	goto	l3672
   954   001DFA                     l3666:
   955                           
   956                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 351:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 352:   re
      +                          t = lcd_8bit_set_cursor(lcd, row, col);
   957   001DFA  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_set_cursor@lcd
   958   001DFE  C016  F012         	movff	lcd_8bit_send_string_pos@row,lcd_8bit_set_cursor@row
   959   001E02  C017  F013         	movff	lcd_8bit_send_string_pos@col,lcd_8bit_set_cursor@col
   960   001E06  EC81  F00C         	call	_lcd_8bit_set_cursor	;wreg free
   961   001E0A  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   962   001E0C                     
   963                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 353:   if ((Std_ReturnType)0x00u == ret)
   964   001E0C  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   965   001E0E  A4D8               	btfss	status,2,c
   966   001E10  EF0C  F00F         	goto	u3031
   967   001E14  EF0E  F00F         	goto	u3030
   968   001E18                     u3031:
   969   001E18  EF15  F00F         	goto	l3672
   970   001E1C                     u3030:
   971   001E1C                     
   972                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 354:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 355:    
      +                          ret = lcd_8bit_send_string(lcd, str);
   973   001E1C  C015  F011         	movff	lcd_8bit_send_string_pos@lcd,lcd_8bit_send_string@lcd
   974   001E20  C018  F012         	movff	lcd_8bit_send_string_pos@str,lcd_8bit_send_string@str
   975   001E24  EC8A  F00E         	call	_lcd_8bit_send_string	;wreg free
   976   001E28  6E19               	movwf	lcd_8bit_send_string_pos@ret^0,c
   977   001E2A                     l3672:
   978                           
   979                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 358:  return (ret);
   980   001E2A  5019               	movf	lcd_8bit_send_string_pos@ret^0,w,c
   981   001E2C  0012               	return		;funcret
   982   001E2E                     __end_of_lcd_8bit_send_string_pos:
   983                           	callstack 0
   984                           
   985 ;; *************** function _lcd_8bit_set_cursor *****************
   986 ;; Defined at:
   987 ;;		line 470 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  lcd             1   16[COMRAM] PTR const struct .
   990 ;;		 -> lcd_2(10), 
   991 ;;  row             1   17[COMRAM] unsigned char 
   992 ;;  col             1   18[COMRAM] unsigned char 
   993 ;; Auto vars:     Size  Location     Type
   994 ;;  ret             1   19[COMRAM] unsigned char 
   995 ;; Return value:  Size  Location     Type
   996 ;;                  1    wreg      unsigned char 
   997 ;; Registers used:
   998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   999 ;; Tracked objects:
  1000 ;;		On entry : 0/0
  1001 ;;		On exit  : 0/0
  1002 ;;		Unchanged: 0/0
  1003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1004 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1005 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1007 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1008 ;;Total ram usage:        4 bytes
  1009 ;; Hardware stack levels used: 1
  1010 ;; Hardware stack levels required when called: 3
  1011 ;; This function calls:
  1012 ;;		_lcd_8bit_send_command
  1013 ;; This function is called by:
  1014 ;;		_lcd_8bit_send_string_pos
  1015 ;;		_lcd_8bit_send_char_data_pos
  1016 ;; This function uses a non-reentrant model
  1017 ;;
  1018                           
  1019                           	psect	text2
  1020   001902                     __ptext2:
  1021                           	callstack 0
  1022   001902                     _lcd_8bit_set_cursor:
  1023                           	callstack 26
  1024   001902                     
  1025                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 474:  if (((void*)0) == lcd)
  1026   001902  5011               	movf	lcd_8bit_set_cursor@lcd^0,w,c
  1027   001904  A4D8               	btfss	status,2,c
  1028   001906  EF87  F00C         	goto	u2731
  1029   00190A  EF89  F00C         	goto	u2730
  1030   00190E                     u2731:
  1031   00190E  EF8D  F00C         	goto	l3466
  1032   001912                     u2730:
  1033   001912                     l3464:
  1034                           
  1035                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 475:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 476:   re
      +                          t = (Std_ReturnType)0x01u;
  1036   001912  0E01               	movlw	1
  1037   001914  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1038                           
  1039                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 477:  }
  1040   001916  EFD5  F00C         	goto	l3486
  1041   00191A                     l3466:
  1042                           
  1043                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 479:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 480:   co
      +                          l--;
  1044   00191A  0613               	decf	lcd_8bit_set_cursor@col^0,f,c
  1045   00191C                     
  1046                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 481:   if ((0xff) == col)
  1047   00191C  2813               	incf	lcd_8bit_set_cursor@col^0,w,c
  1048   00191E  A4D8               	btfss	status,2,c
  1049   001920  EF94  F00C         	goto	u2741
  1050   001924  EF96  F00C         	goto	u2740
  1051   001928                     u2741:
  1052   001928  EFC2  F00C         	goto	l3484
  1053   00192C                     u2740:
  1054   00192C                     
  1055                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 482:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 483:    
      +                          col = 0;
  1056   00192C  0E00               	movlw	0
  1057   00192E  6E13               	movwf	lcd_8bit_set_cursor@col^0,c
  1058   001930  EFC2  F00C         	goto	l3484
  1059   001934                     l3472:
  1060                           
  1061                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 488:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x80 + col);
  1062   001934  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1063   001938  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1064   00193A  0F80               	addlw	128
  1065   00193C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1066   00193E  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  1067   001942  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1068                           
  1069                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 489:                 break;
  1070   001944  EFD5  F00C         	goto	l3486
  1071   001948                     l3474:
  1072                           
  1073                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 491:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xC0 + col);
  1074   001948  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1075   00194C  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1076   00194E  0FC0               	addlw	192
  1077   001950  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1078   001952  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  1079   001956  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1080                           
  1081                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 492:                 break;
  1082   001958  EFD5  F00C         	goto	l3486
  1083   00195C                     l3476:
  1084                           
  1085                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 494:                 ret = lcd_8bit_send_command(lcd
      +                          , 0x94 + col);
  1086   00195C  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1087   001960  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1088   001962  0F94               	addlw	148
  1089   001964  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1090   001966  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  1091   00196A  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1092                           
  1093                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 495:                 break;
  1094   00196C  EFD5  F00C         	goto	l3486
  1095   001970                     l3478:
  1096                           
  1097                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 497:                 ret = lcd_8bit_send_command(lcd
      +                          , 0xD4 + col);
  1098   001970  C011  F00B         	movff	lcd_8bit_set_cursor@lcd,lcd_8bit_send_command@lcd
  1099   001974  5013               	movf	lcd_8bit_set_cursor@col^0,w,c
  1100   001976  0FD4               	addlw	212
  1101   001978  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  1102   00197A  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  1103   00197E  6E14               	movwf	lcd_8bit_set_cursor@ret^0,c
  1104                           
  1105                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 498:                 break;
  1106   001980  EFD5  F00C         	goto	l3486
  1107   001984                     l3484:
  1108   001984  5012               	movf	lcd_8bit_set_cursor@row^0,w,c
  1109                           
  1110                           ; Switch size 1, requested type "simple"
  1111                           ; Number of cases is 4, Range of values is 1 to 4
  1112                           ; switch strategies available:
  1113                           ; Name         Instructions Cycles
  1114                           ; simple_byte           13     7 (average)
  1115                           ;	Chosen strategy is simple_byte
  1116   001986  0A01               	xorlw	1	; case 1
  1117   001988  B4D8               	btfsc	status,2,c
  1118   00198A  EF9A  F00C         	goto	l3472
  1119   00198E  0A03               	xorlw	3	; case 2
  1120   001990  B4D8               	btfsc	status,2,c
  1121   001992  EFA4  F00C         	goto	l3474
  1122   001996  0A01               	xorlw	1	; case 3
  1123   001998  B4D8               	btfsc	status,2,c
  1124   00199A  EFAE  F00C         	goto	l3476
  1125   00199E  0A07               	xorlw	7	; case 4
  1126   0019A0  B4D8               	btfsc	status,2,c
  1127   0019A2  EFB8  F00C         	goto	l3478
  1128   0019A6  EF89  F00C         	goto	l3464
  1129   0019AA                     l3486:
  1130                           
  1131                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 504:  return (ret);
  1132   0019AA  5014               	movf	lcd_8bit_set_cursor@ret^0,w,c
  1133   0019AC  0012               	return		;funcret
  1134   0019AE                     __end_of_lcd_8bit_set_cursor:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _lcd_8bit_send_string *****************
  1138 ;; Defined at:
  1139 ;;		line 322 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;  lcd             1   16[COMRAM] PTR const struct .
  1142 ;;		 -> lcd_2(10), 
  1143 ;;  str             1   17[COMRAM] PTR unsigned char 
  1144 ;;		 -> lcd_counter_txt2(6), 
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;  ret             1   18[COMRAM] unsigned char 
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      unsigned char 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : 0/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1156 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1157 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1159 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1160 ;;Total ram usage:        3 bytes
  1161 ;; Hardware stack levels used: 1
  1162 ;; Hardware stack levels required when called: 3
  1163 ;; This function calls:
  1164 ;;		_lcd_8bit_send_char_data
  1165 ;; This function is called by:
  1166 ;;		_lcd_8bit_send_string_pos
  1167 ;; This function uses a non-reentrant model
  1168 ;;
  1169                           
  1170                           	psect	text3
  1171   001D14                     __ptext3:
  1172                           	callstack 0
  1173   001D14                     _lcd_8bit_send_string:
  1174                           	callstack 26
  1175   001D14                     
  1176                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 322: Std_ReturnType lcd_8bit_send_string(const char_
      +                          lcd_8bit_t *lcd, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 323: {;ECU_Layer/Char_LC
      +                          D/ecu_char_lcd.c: 324:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  1177   001D14  0E00               	movlw	0
  1178   001D16  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1179                           
  1180                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 325:  if (((void*)0) == lcd)
  1181   001D18  5011               	movf	lcd_8bit_send_string@lcd^0,w,c
  1182   001D1A  A4D8               	btfss	status,2,c
  1183   001D1C  EF92  F00E         	goto	u2751
  1184   001D20  EF94  F00E         	goto	u2750
  1185   001D24                     u2751:
  1186   001D24  EFAD  F00E         	goto	l3502
  1187   001D28                     u2750:
  1188   001D28                     
  1189                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 326:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 327:     
      +                           ret = (Std_ReturnType)0x01u;
  1190   001D28  0E01               	movlw	1
  1191   001D2A  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1192                           
  1193                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 328:  }
  1194   001D2C  EFB8  F00E         	goto	l3504
  1195   001D30                     l3494:
  1196                           
  1197                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 332:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 333:    
      +                          ret = lcd_8bit_send_char_data(lcd, *str++);
  1198   001D30  C011  F00B         	movff	lcd_8bit_send_string@lcd,lcd_8bit_send_char_data@lcd
  1199   001D34  5012               	movf	lcd_8bit_send_string@str^0,w,c
  1200   001D36  6ED9               	movwf	fsr2l,c
  1201   001D38  6ADA               	clrf	fsr2h,c
  1202   001D3A  50DF               	movf	indf2,w,c
  1203   001D3C  6E0C               	movwf	lcd_8bit_send_char_data@data^0,c
  1204   001D3E  ECD3  F00B         	call	_lcd_8bit_send_char_data	;wreg free
  1205   001D42  6E13               	movwf	lcd_8bit_send_string@ret^0,c
  1206   001D44  2A12               	incf	lcd_8bit_send_string@str^0,f,c
  1207   001D46                     
  1208                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 334:    if ((Std_ReturnType)0x01u == ret)
  1209   001D46  0413               	decf	lcd_8bit_send_string@ret^0,w,c
  1210   001D48  A4D8               	btfss	status,2,c
  1211   001D4A  EFA9  F00E         	goto	u2761
  1212   001D4E  EFAB  F00E         	goto	u2760
  1213   001D52                     u2761:
  1214   001D52  EFAD  F00E         	goto	l3502
  1215   001D56                     u2760:
  1216   001D56  EFB8  F00E         	goto	l3504
  1217   001D5A                     l3502:
  1218                           
  1219                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 331:   while (*str)
  1220   001D5A  5012               	movf	lcd_8bit_send_string@str^0,w,c
  1221   001D5C  6ED9               	movwf	fsr2l,c
  1222   001D5E  6ADA               	clrf	fsr2h,c
  1223   001D60  50DF               	movf	indf2,w,c
  1224   001D62  A4D8               	btfss	status,2,c
  1225   001D64  EFB6  F00E         	goto	u2771
  1226   001D68  EFB8  F00E         	goto	u2770
  1227   001D6C                     u2771:
  1228   001D6C  EF98  F00E         	goto	l3494
  1229   001D70                     u2770:
  1230   001D70                     l3504:
  1231                           
  1232                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 340:  return (ret);
  1233   001D70  5013               	movf	lcd_8bit_send_string@ret^0,w,c
  1234   001D72  0012               	return		;funcret
  1235   001D74                     __end_of_lcd_8bit_send_string:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _lcd_8bit_send_char_data *****************
  1239 ;; Defined at:
  1240 ;;		line 273 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  lcd             1   10[COMRAM] PTR const struct .
  1243 ;;		 -> lcd_2(10), 
  1244 ;;  data            1   11[COMRAM] unsigned char 
  1245 ;; Auto vars:     Size  Location     Type
  1246 ;;  ret             1   15[COMRAM] unsigned char 
  1247 ;;  counter         1   14[COMRAM] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      unsigned char 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1257 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;Total ram usage:        6 bytes
  1262 ;; Hardware stack levels used: 1
  1263 ;; Hardware stack levels required when called: 2
  1264 ;; This function calls:
  1265 ;;		_gpio_pin_write_logic
  1266 ;;		_lcd_8bit_send_enable_signal
  1267 ;; This function is called by:
  1268 ;;		_lcd_8bit_send_string
  1269 ;;		_lcd_8bit_send_char_data_pos
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text4
  1274   0017A6                     __ptext4:
  1275                           	callstack 0
  1276   0017A6                     _lcd_8bit_send_char_data:
  1277                           	callstack 26
  1278   0017A6                     
  1279                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 276:  uint8 counter = 0x00;
  1280   0017A6  0E00               	movlw	0
  1281   0017A8  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1282                           
  1283                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 278:  if (((void*)0) == lcd)
  1284   0017AA  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1285   0017AC  A4D8               	btfss	status,2,c
  1286   0017AE  EFDB  F00B         	goto	u2561
  1287   0017B2  EFDD  F00B         	goto	u2560
  1288   0017B6                     u2561:
  1289   0017B6  EFE1  F00B         	goto	l3384
  1290   0017BA                     u2560:
  1291   0017BA                     
  1292                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 279:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 280:     
      +                           ret = (Std_ReturnType)0x01u;
  1293   0017BA  0E01               	movlw	1
  1294   0017BC  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1295                           
  1296                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 281:  }
  1297   0017BE  EF28  F00C         	goto	l3408
  1298   0017C2                     l3384:
  1299                           
  1300                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 283:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 284:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_HIGH);
  1301   0017C2  C00B  F001         	movff	lcd_8bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config_t
  1302   0017C6  0E01               	movlw	1
  1303   0017C8  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1304   0017CA  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  1305   0017CE  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1306   0017D0                     
  1307                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 285:   if ((Std_ReturnType)0x00u == ret)
  1308   0017D0  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1309   0017D2  A4D8               	btfss	status,2,c
  1310   0017D4  EFEE  F00B         	goto	u2571
  1311   0017D8  EFF0  F00B         	goto	u2570
  1312   0017DC                     u2571:
  1313   0017DC  EF28  F00C         	goto	l3408
  1314   0017E0                     u2570:
  1315   0017E0                     
  1316                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 286:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 287:    
      +                          for (counter = 0x00; counter < 8; counter++)
  1317   0017E0  0E00               	movlw	0
  1318   0017E2  6E0F               	movwf	lcd_8bit_send_char_data@counter^0,c
  1319   0017E4                     l3394:
  1320                           
  1321                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 288:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 289:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data >> counter) & (uint8)1);
  1322   0017E4  500B               	movf	lcd_8bit_send_char_data@lcd^0,w,c
  1323   0017E6  240F               	addwf	lcd_8bit_send_char_data@counter^0,w,c
  1324   0017E8  0F02               	addlw	2
  1325   0017EA  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  1326   0017EC  C00F  F00D         	movff	lcd_8bit_send_char_data@counter,??_lcd_8bit_send_char_data
  1327   0017F0  C00C  F00E         	movff	lcd_8bit_send_char_data@data,??_lcd_8bit_send_char_data+1
  1328   0017F4  2A0D               	incf	??_lcd_8bit_send_char_data^0,f,c
  1329   0017F6  EFFF  F00B         	goto	u2584
  1330   0017FA                     u2585:
  1331   0017FA  90D8               	bcf	status,0,c
  1332   0017FC  320E               	rrcf	(??_lcd_8bit_send_char_data+1)^0,f,c
  1333   0017FE                     u2584:
  1334   0017FE  2E0D               	decfsz	??_lcd_8bit_send_char_data^0,f,c
  1335   001800  EFFD  F00B         	goto	u2585
  1336   001804  500E               	movf	(??_lcd_8bit_send_char_data+1)^0,w,c
  1337   001806  0B01               	andlw	1
  1338   001808  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  1339   00180A  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  1340   00180E  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1341   001810                     
  1342                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 290:     if ((Std_ReturnType)0x01u == ret)
  1343   001810  0410               	decf	lcd_8bit_send_char_data@ret^0,w,c
  1344   001812  A4D8               	btfss	status,2,c
  1345   001814  EF0E  F00C         	goto	u2591
  1346   001818  EF10  F00C         	goto	u2590
  1347   00181C                     u2591:
  1348   00181C  EF12  F00C         	goto	l3400
  1349   001820                     u2590:
  1350   001820  EF1B  F00C         	goto	l3404
  1351   001824                     l3400:
  1352                           
  1353                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 294:    }
  1354   001824  2A0F               	incf	lcd_8bit_send_char_data@counter^0,f,c
  1355   001826  0E07               	movlw	7
  1356   001828  640F               	cpfsgt	lcd_8bit_send_char_data@counter^0,c
  1357   00182A  EF19  F00C         	goto	u2601
  1358   00182E  EF1B  F00C         	goto	u2600
  1359   001832                     u2601:
  1360   001832  EFF2  F00B         	goto	l3394
  1361   001836                     u2600:
  1362   001836                     l3404:
  1363                           
  1364                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 295:    if ((Std_ReturnType)0x00u == ret)
  1365   001836  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1366   001838  A4D8               	btfss	status,2,c
  1367   00183A  EF21  F00C         	goto	u2611
  1368   00183E  EF23  F00C         	goto	u2610
  1369   001842                     u2611:
  1370   001842  EF28  F00C         	goto	l3408
  1371   001846                     u2610:
  1372   001846                     
  1373                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 296:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 297:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  1374   001846  C00B  F009         	movff	lcd_8bit_send_char_data@lcd,lcd_8bit_send_enable_signal@lcd
  1375   00184A  ECAD  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  1376   00184E  6E10               	movwf	lcd_8bit_send_char_data@ret^0,c
  1377   001850                     l3408:
  1378                           
  1379                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 301:  return (ret);
  1380   001850  5010               	movf	lcd_8bit_send_char_data@ret^0,w,c
  1381   001852  0012               	return		;funcret
  1382   001854                     __end_of_lcd_8bit_send_char_data:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _convert_short_to_string *****************
  1386 ;; Defined at:
  1387 ;;		line 525 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  value           2   50[COMRAM] unsigned short 
  1390 ;;  str             1   52[COMRAM] PTR unsigned char 
  1391 ;;		 -> lcd_counter_txt2(6), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;  ret             1   53[COMRAM] unsigned char 
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  1    wreg      unsigned char 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1403 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1406 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1407 ;;Total ram usage:        4 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 5
  1410 ;; This function calls:
  1411 ;;		_memset
  1412 ;;		_snprintf
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           	psect	text5
  1419   001C4A                     __ptext5:
  1420                           	callstack 0
  1421   001C4A                     _convert_short_to_string:
  1422                           	callstack 25
  1423   001C4A                     
  1424                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 525: Std_ReturnType convert_short_to_string(uint16 v
      +                          alue, uint8 *str);ECU_Layer/Char_LCD/ecu_char_lcd.c: 526: {;ECU_Layer/Char_LCD/ecu_char_
      +                          lcd.c: 527:  Std_ReturnType ret = (Std_ReturnType)0x00u;
  1425   001C4A  0E00               	movlw	0
  1426   001C4C  6E36               	movwf	convert_short_to_string@ret^0,c
  1427                           
  1428                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 528:  if (((void*)0) == str)
  1429   001C4E  5035               	movf	convert_short_to_string@str^0,w,c
  1430   001C50  A4D8               	btfss	status,2,c
  1431   001C52  EF2D  F00E         	goto	u3041
  1432   001C56  EF2F  F00E         	goto	u3040
  1433   001C5A                     u3041:
  1434   001C5A  EF33  F00E         	goto	l3680
  1435   001C5E                     u3040:
  1436   001C5E                     l3678:
  1437                           
  1438                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 529:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 530:     
      +                           ret = (Std_ReturnType)0x01u;
  1439   001C5E  0E01               	movlw	1
  1440   001C60  6E36               	movwf	convert_short_to_string@ret^0,c
  1441                           
  1442                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 531:  }
  1443   001C62  EF56  F00E         	goto	l247
  1444   001C66                     l3680:
  1445                           
  1446                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 533:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 534:   me
      +                          mset(str, '\0', 6);
  1447   001C66  C035  F001         	movff	convert_short_to_string@str,memset@dest
  1448   001C6A  0E00               	movlw	0
  1449   001C6C  6E03               	movwf	(memset@c+1)^0,c
  1450   001C6E  0E00               	movlw	0
  1451   001C70  6E02               	movwf	memset@c^0,c
  1452   001C72  0E00               	movlw	0
  1453   001C74  6E05               	movwf	(memset@n+1)^0,c
  1454   001C76  0E06               	movlw	6
  1455   001C78  6E04               	movwf	memset@n^0,c
  1456   001C7A  ECCD  F00F         	call	_memset	;wreg free
  1457   001C7E                     
  1458                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 535:   if (snprintf((char *)str, 6, "%u", value) < 0
      +                          )
  1459   001C7E  C035  F019         	movff	convert_short_to_string@str,snprintf@s
  1460   001C82  0E00               	movlw	0
  1461   001C84  6E1B               	movwf	(snprintf@n+1)^0,c
  1462   001C86  0E06               	movlw	6
  1463   001C88  6E1A               	movwf	snprintf@n^0,c
  1464   001C8A  0E11               	movlw	low STR_1
  1465   001C8C  6E1C               	movwf	snprintf@fmt^0,c
  1466   001C8E  C033  F01D         	movff	convert_short_to_string@value,?_snprintf+4
  1467   001C92  C034  F01E         	movff	convert_short_to_string@value+1,?_snprintf+5
  1468   001C96  EC57  F00B         	call	_snprintf	;wreg free
  1469   001C9A  BE1A               	btfsc	(?_snprintf+1)^0,7,c
  1470   001C9C  EF54  F00E         	goto	u3050
  1471   001CA0  EF52  F00E         	goto	u3051
  1472   001CA4                     u3051:
  1473   001CA4  EF56  F00E         	goto	l247
  1474   001CA8                     u3050:
  1475   001CA8  EF2F  F00E         	goto	l3678
  1476   001CAC                     l247:
  1477                           
  1478                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 540:  return (ret);
  1479   001CAC  5036               	movf	convert_short_to_string@ret^0,w,c
  1480   001CAE  0012               	return		;funcret
  1481   001CB0                     __end_of_convert_short_to_string:
  1482                           	callstack 0
  1483                           
  1484 ;; *************** function _snprintf *****************
  1485 ;; Defined at:
  1486 ;;		line 13 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\nf_snprintf.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  s               1   24[COMRAM] PTR unsigned char 
  1489 ;;		 -> lcd_counter_txt2(6), 
  1490 ;;  n               2   25[COMRAM] unsigned int 
  1491 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  1492 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1493 ;; Auto vars:     Size  Location     Type
  1494 ;;  f              12   38[COMRAM] struct _IO_FILE
  1495 ;;  cnt             2   36[COMRAM] int 
  1496 ;;  ap              1   35[COMRAM] PTR void [1]
  1497 ;;		 -> ?_snprintf(2), 
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  2   24[COMRAM] int 
  1500 ;; Registers used:
  1501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1507 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1510 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1511 ;;Total ram usage:       26 bytes
  1512 ;; Hardware stack levels used: 1
  1513 ;; Hardware stack levels required when called: 4
  1514 ;; This function calls:
  1515 ;;		_vfprintf
  1516 ;; This function is called by:
  1517 ;;		_convert_short_to_string
  1518 ;;		_convert_byte_to_string
  1519 ;;		_convert_int_to_string
  1520 ;; This function uses a non-reentrant model
  1521 ;;
  1522                           
  1523                           	psect	text6
  1524   0016AE                     __ptext6:
  1525                           	callstack 0
  1526   0016AE                     _snprintf:
  1527                           	callstack 25
  1528   0016AE  0E80               	movlw	128
  1529   0016B0  5C1B               	subwf	(snprintf@n+1)^0,w,c
  1530   0016B2  A0D8               	btfss	status,0,c
  1531   0016B4  EF5E  F00B         	goto	u2791
  1532   0016B8  EF60  F00B         	goto	u2790
  1533   0016BC                     u2791:
  1534   0016BC  EF69  F00B         	goto	l3524
  1535   0016C0                     u2790:
  1536   0016C0  0E00               	movlw	0
  1537   0016C2  0100               	movlb	0	; () banked
  1538   0016C4  6FD2               	movwf	(_errno+1)& (0+255),b
  1539   0016C6  0E4B               	movlw	75
  1540   0016C8  6FD1               	movwf	_errno& (0+255),b
  1541   0016CA                     
  1542                           ; BSR set to: 0
  1543   0016CA  6819               	setf	?_snprintf^0,c
  1544   0016CC  681A               	setf	(?_snprintf+1)^0,c
  1545   0016CE  EFD2  F00B         	goto	l1472
  1546   0016D2                     l3524:
  1547   0016D2  0E1D               	movlw	low (?_snprintf+4)
  1548   0016D4  6E24               	movwf	snprintf@ap^0,c
  1549   0016D6  C019  F027         	movff	snprintf@s,snprintf@f
  1550   0016DA  501B               	movf	(snprintf@n+1)^0,w,c
  1551   0016DC  E109               	bnz	u2800
  1552   0016DE  0E02               	movlw	2
  1553   0016E0  5C1A               	subwf	snprintf@n^0,w,c
  1554   0016E2  A0D8               	btfss	status,0,c
  1555   0016E4  EF76  F00B         	goto	u2801
  1556   0016E8  EF78  F00B         	goto	u2800
  1557   0016EC                     u2801:
  1558   0016EC  EF84  F00B         	goto	l3530
  1559   0016F0                     u2800:
  1560   0016F0  0EFF               	movlw	255
  1561   0016F2  241A               	addwf	snprintf@n^0,w,c
  1562   0016F4  6E31               	movwf	(snprintf@f+10)^0,c
  1563   0016F6  0EFF               	movlw	255
  1564   0016F8  201B               	addwfc	(snprintf@n+1)^0,w,c
  1565   0016FA  6E32               	movwf	(snprintf@f+11)^0,c
  1566   0016FC  0E00               	movlw	0
  1567   0016FE  6E2B               	movwf	(snprintf@f+4)^0,c
  1568   001700  0E00               	movlw	0
  1569   001702  6E2A               	movwf	(snprintf@f+3)^0,c
  1570   001704  EF8C  F00B         	goto	l3532
  1571   001708                     l3530:
  1572   001708  0E00               	movlw	0
  1573   00170A  6E32               	movwf	(snprintf@f+11)^0,c
  1574   00170C  0E01               	movlw	1
  1575   00170E  6E31               	movwf	(snprintf@f+10)^0,c
  1576   001710  0E00               	movlw	0
  1577   001712  6E2B               	movwf	(snprintf@f+4)^0,c
  1578   001714  0E01               	movlw	1
  1579   001716  6E2A               	movwf	(snprintf@f+3)^0,c
  1580   001718                     l3532:
  1581   001718  0E27               	movlw	low snprintf@f
  1582   00171A  6E15               	movwf	vfprintf@fp^0,c
  1583   00171C  C01C  F016         	movff	snprintf@fmt,vfprintf@fmt
  1584   001720  0E24               	movlw	low snprintf@ap
  1585   001722  6E17               	movwf	vfprintf@ap^0,c
  1586   001724  EC17  F00F         	call	_vfprintf	;wreg free
  1587   001728  C015  F025         	movff	?_vfprintf,snprintf@cnt
  1588   00172C  C016  F026         	movff	?_vfprintf+1,snprintf@cnt+1
  1589   001730  501A               	movf	snprintf@n^0,w,c
  1590   001732  101B               	iorwf	(snprintf@n+1)^0,w,c
  1591   001734  B4D8               	btfsc	status,2,c
  1592   001736  EF9F  F00B         	goto	u2811
  1593   00173A  EFA1  F00B         	goto	u2810
  1594   00173E                     u2811:
  1595   00173E  EFCE  F00B         	goto	l3544
  1596   001742                     u2810:
  1597   001742  BE26               	btfsc	(snprintf@cnt+1)^0,7,c
  1598   001744  EFA6  F00B         	goto	u2821
  1599   001748  EFA8  F00B         	goto	u2820
  1600   00174C                     u2821:
  1601   00174C  EFCE  F00B         	goto	l3544
  1602   001750                     u2820:
  1603   001750  0EFF               	movlw	255
  1604   001752  241A               	addwf	snprintf@n^0,w,c
  1605   001754  6E1F               	movwf	??_snprintf^0,c
  1606   001756  0EFF               	movlw	255
  1607   001758  201B               	addwfc	(snprintf@n+1)^0,w,c
  1608   00175A  6E20               	movwf	(??_snprintf+1)^0,c
  1609   00175C  501F               	movf	??_snprintf^0,w,c
  1610   00175E  5C25               	subwf	snprintf@cnt^0,w,c
  1611   001760  5026               	movf	(snprintf@cnt+1)^0,w,c
  1612   001762  0A80               	xorlw	128
  1613   001764  6E21               	movwf	(??_snprintf+2)^0,c
  1614   001766  5020               	movf	(??_snprintf+1)^0,w,c
  1615   001768  0A80               	xorlw	128
  1616   00176A  5821               	subwfb	(??_snprintf+2)^0,w,c
  1617   00176C  A0D8               	btfss	status,0,c
  1618   00176E  EFBB  F00B         	goto	u2831
  1619   001772  EFBD  F00B         	goto	u2830
  1620   001776                     u2831:
  1621   001776  EFC5  F00B         	goto	l1477
  1622   00177A                     u2830:
  1623   00177A  0EFF               	movlw	255
  1624   00177C  241A               	addwf	snprintf@n^0,w,c
  1625   00177E  6E22               	movwf	_snprintf$1691^0,c
  1626   001780  0EFF               	movlw	255
  1627   001782  201B               	addwfc	(snprintf@n+1)^0,w,c
  1628   001784  6E23               	movwf	(_snprintf$1691+1)^0,c
  1629   001786  EFC9  F00B         	goto	l3542
  1630   00178A                     l1477:
  1631   00178A  C025  F022         	movff	snprintf@cnt,_snprintf$1691
  1632   00178E  C026  F023         	movff	snprintf@cnt+1,_snprintf$1691+1
  1633   001792                     l3542:
  1634   001792  5019               	movf	snprintf@s^0,w,c
  1635   001794  2422               	addwf	_snprintf$1691^0,w,c
  1636   001796  6ED9               	movwf	fsr2l,c
  1637   001798  6ADA               	clrf	fsr2h,c
  1638   00179A  6ADF               	clrf	indf2,c
  1639   00179C                     l3544:
  1640   00179C  C025  F019         	movff	snprintf@cnt,?_snprintf
  1641   0017A0  C026  F01A         	movff	snprintf@cnt+1,?_snprintf+1
  1642   0017A4                     l1472:
  1643   0017A4  0012               	return		;funcret
  1644   0017A6                     __end_of_snprintf:
  1645                           	callstack 0
  1646                           
  1647 ;; *************** function _vfprintf *****************
  1648 ;; Defined at:
  1649 ;;		line 1817 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1650 ;; Parameters:    Size  Location     Type
  1651 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1652 ;;		 -> snprintf@f(12), 
  1653 ;;  fmt             1   21[COMRAM] PTR const unsigned char 
  1654 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1655 ;;  ap              1   22[COMRAM] PTR PTR void 
  1656 ;;		 -> snprintf@ap(1), 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  cfmt            1   23[COMRAM] PTR unsigned char 
  1659 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1660 ;; Return value:  Size  Location     Type
  1661 ;;                  2   20[COMRAM] int 
  1662 ;; Registers used:
  1663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1664 ;; Tracked objects:
  1665 ;;		On entry : 0/0
  1666 ;;		On exit  : 0/0
  1667 ;;		Unchanged: 0/0
  1668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1669 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;Total ram usage:        4 bytes
  1674 ;; Hardware stack levels used: 1
  1675 ;; Hardware stack levels required when called: 3
  1676 ;; This function calls:
  1677 ;;		_vfpfcnvrt
  1678 ;; This function is called by:
  1679 ;;		_snprintf
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text7
  1684   001E2E                     __ptext7:
  1685                           	callstack 0
  1686   001E2E                     _vfprintf:
  1687                           	callstack 25
  1688   001E2E                     
  1689                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprintf(
      +                          FILE *fp, const char *fmt, va_list ap);D:\Programming\Microchip\xc8\v2.46\pic\sources\c9
      +                          9\common\doprnt.c: 1818: {;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\dop
      +                          rnt.c: 1820:     char *cfmt;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\d
      +                          oprnt.c: 1822:     cfmt = (char *)fmt;
  1690   001E2E  C016  F018         	movff	vfprintf@fmt,vfprintf@cfmt
  1691   001E32                     
  1692                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1824:     nout = 0;
  1693   001E32  0E00               	movlw	0
  1694   001E34  0100               	movlb	0	; () banked
  1695   001E36  6FCC               	movwf	(_nout+1)& (0+255),b
  1696   001E38  0E00               	movlw	0
  1697   001E3A  6FCB               	movwf	_nout& (0+255),b
  1698                           
  1699                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (*c
      +                          fmt) {
  1700   001E3C  EF2D  F00F         	goto	l3418
  1701   001E40                     l3416:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1828:         nout 
      +                          +=
  1705   001E40  C015  F009         	movff	vfprintf@fp,vfpfcnvrt@fp
  1706   001E44  0E18               	movlw	low vfprintf@cfmt
  1707   001E46  6E0A               	movwf	vfpfcnvrt@fmt^0,c
  1708   001E48  C017  F00B         	movff	vfprintf@ap,vfpfcnvrt@ap
  1709   001E4C  EC0B  F008         	call	_vfpfcnvrt	;wreg free
  1710   001E50  5009               	movf	?_vfpfcnvrt^0,w,c
  1711   001E52  0100               	movlb	0	; () banked
  1712   001E54  27CB               	addwf	_nout& (0+255),f,b
  1713   001E56  500A               	movf	(?_vfpfcnvrt+1)^0,w,c
  1714   001E58  23CC               	addwfc	(_nout+1)& (0+255),f,b
  1715   001E5A                     l3418:
  1716                           
  1717                           ; BSR set to: 0
  1718                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (*c
      +                          fmt) {
  1719   001E5A  C018  FFF6         	movff	vfprintf@cfmt,tblptrl
  1720   001E5E                     	if	1	;There is more than 1 active tblptr byte
  1721   001E5E  0E10               	movlw	high __smallconst
  1722   001E60  6EF7               	movwf	tblptrh,c
  1723   001E62                     	endif
  1724   001E62                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1725   001E62  6AF8               	clrf	tblptru,c
  1726   001E64                     	endif
  1727   001E64                     	if	0	;tblptru may be non-zero
  1728   001E64                     	endif
  1729   001E64  0008               	tblrd		*
  1730   001E66  50F5               	movf	tablat,w,c
  1731   001E68  0900               	iorlw	0
  1732   001E6A  A4D8               	btfss	status,2,c
  1733   001E6C  EF3A  F00F         	goto	u2621
  1734   001E70  EF3C  F00F         	goto	u2620
  1735   001E74                     u2621:
  1736   001E74  EF20  F00F         	goto	l3416
  1737   001E78                     u2620:
  1738   001E78                     
  1739                           ; BSR set to: 0
  1740                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1833:     return no
      +                          ut;
  1741   001E78  C0CB  F015         	movff	_nout,?_vfprintf
  1742   001E7C  C0CC  F016         	movff	_nout+1,?_vfprintf+1
  1743   001E80                     
  1744                           ; BSR set to: 0
  1745   001E80  0012               	return		;funcret
  1746   001E82                     __end_of_vfprintf:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _vfpfcnvrt *****************
  1750 ;; Defined at:
  1751 ;;		line 1177 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  1754 ;;		 -> snprintf@f(12), 
  1755 ;;  fmt             1    9[COMRAM] PTR PTR unsigned char 
  1756 ;;		 -> vfprintf@cfmt(1), 
  1757 ;;  ap              1   10[COMRAM] PTR PTR void 
  1758 ;;		 -> snprintf@ap(1), 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  convarg         4   14[COMRAM] struct .
  1761 ;;  cnt             2   12[COMRAM] int 
  1762 ;;  c               1   19[COMRAM] unsigned char 
  1763 ;;  cp              1   18[COMRAM] PTR unsigned char 
  1764 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  1765 ;;  done            1    0        _Bool 
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  2    8[COMRAM] int 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1775 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1776 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1777 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1778 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1779 ;;Total ram usage:       12 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 2
  1782 ;; This function calls:
  1783 ;;		___lwdiv
  1784 ;;		___lwmod
  1785 ;;		_fputc
  1786 ;; This function is called by:
  1787 ;;		_vfprintf
  1788 ;; This function uses a non-reentrant model
  1789 ;;
  1790                           
  1791                           	psect	text8
  1792   001016                     __ptext8:
  1793                           	callstack 0
  1794   001016                     _vfpfcnvrt:
  1795                           	callstack 25
  1796   001016                     
  1797                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\commo
      +                          n\doprnt.c: 1178: {;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 
      +                          1179:     char c, *cp;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1180:     _Bool done;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprn
      +                          t.c: 1188:  } convarg;;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 1191:  int cnt = 0;
  1798   001016  0E00               	movlw	0
  1799   001018  6E0E               	movwf	(vfpfcnvrt@cnt+1)^0,c
  1800   00101A  0E00               	movlw	0
  1801   00101C  6E0D               	movwf	vfpfcnvrt@cnt^0,c
  1802   00101E                     
  1803                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1201:     if ((*fmt
      +                          )[0] == '%') {
  1804   00101E  500A               	movf	vfpfcnvrt@fmt^0,w,c
  1805   001020  6ED9               	movwf	fsr2l,c
  1806   001022  6ADA               	clrf	fsr2h,c
  1807   001024  CFDF FFF6          	movff	indf2,tblptrl
  1808   001028                     	if	1	;There is more than 1 active tblptr byte
  1809   001028  0E10               	movlw	high __smallconst
  1810   00102A  6EF7               	movwf	tblptrh,c
  1811   00102C                     	endif
  1812   00102C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1813   00102C  6AF8               	clrf	tblptru,c
  1814   00102E                     	endif
  1815   00102E                     	if	0	;tblptru may be non-zero
  1816   00102E                     	endif
  1817   00102E  0008               	tblrd		*
  1818   001030  50F5               	movf	tablat,w,c
  1819   001032  0A25               	xorlw	37
  1820   001034  A4D8               	btfss	status,2,c
  1821   001036  EF1F  F008         	goto	u2381
  1822   00103A  EF21  F008         	goto	u2380
  1823   00103E                     u2381:
  1824   00103E  EFC0  F008         	goto	l3278
  1825   001042                     u2380:
  1826   001042                     
  1827                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*fm
      +                          t;
  1828   001042  500A               	movf	vfpfcnvrt@fmt^0,w,c
  1829   001044  6ED9               	movwf	fsr2l,c
  1830   001046  6ADA               	clrf	fsr2h,c
  1831   001048  2ADF               	incf	indf2,f,c
  1832   00104A                     
  1833                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         flags
      +                           = width = 0;
  1834   00104A  0E00               	movlw	0
  1835   00104C  0100               	movlb	0	; () banked
  1836   00104E  6FCE               	movwf	(_width+1)& (0+255),b
  1837   001050  0E00               	movlw	0
  1838   001052  6FCD               	movwf	_width& (0+255),b
  1839   001054  C0CD  F03C         	movff	_width,_flags
  1840   001058                     
  1841                           ; BSR set to: 0
  1842                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         prec 
      +                          = -1;
  1843   001058  69CF               	setf	_prec& (0+255),b
  1844   00105A  69D0               	setf	(_prec+1)& (0+255),b
  1845   00105C                     
  1846                           ; BSR set to: 0
  1847                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1439:   if (0
  1848   00105C  500A               	movf	vfpfcnvrt@fmt^0,w,c
  1849   00105E  6ED9               	movwf	fsr2l,c
  1850   001060  6ADA               	clrf	fsr2h,c
  1851   001062  50DF               	movf	indf2,w,c
  1852   001064  6E13               	movwf	vfpfcnvrt@cp^0,c
  1853   001066                     
  1854                           ; BSR set to: 0
  1855   001066  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1856   00106A                     	if	1	;There is more than 1 active tblptr byte
  1857   00106A  0E10               	movlw	high __smallconst
  1858   00106C  6EF7               	movwf	tblptrh,c
  1859   00106E                     	endif
  1860   00106E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1861   00106E  6AF8               	clrf	tblptru,c
  1862   001070                     	endif
  1863   001070                     	if	0	;tblptru may be non-zero
  1864   001070                     	endif
  1865   001070  0008               	tblrd		*
  1866   001072  50F5               	movf	tablat,w,c
  1867   001074  0A75               	xorlw	117
  1868   001076  A4D8               	btfss	status,2,c
  1869   001078  EF40  F008         	goto	u2391
  1870   00107C  EF42  F008         	goto	u2390
  1871   001080                     u2391:
  1872   001080  EFB6  F008         	goto	l3272
  1873   001084                     u2390:
  1874   001084                     
  1875                           ; BSR set to: 0
  1876                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1452:     ) {;D:\Pr
      +                          ogramming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint = (
      +                          vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int
      +                          )0));
  1877   001084  500B               	movf	vfpfcnvrt@ap^0,w,c
  1878   001086  6ED9               	movwf	fsr2l,c
  1879   001088  6ADA               	clrf	fsr2h,c
  1880   00108A  0E02               	movlw	2
  1881   00108C  26DF               	addwf	indf2,f,c
  1882   00108E  5CDF               	subwf	indf2,w,c
  1883   001090  6ED9               	movwf	fsr2l,c
  1884   001092  6ADA               	clrf	fsr2h,c
  1885   001094  CFDE F00F          	movff	postinc2,vfpfcnvrt@convarg
  1886   001098  CFDE F010          	movff	postinc2,vfpfcnvrt@convarg+1
  1887   00109C                     
  1888                           ; BSR set to: 0
  1889                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1497:    *fmt = cp+
      +                          1;
  1890   00109C  500A               	movf	vfpfcnvrt@fmt^0,w,c
  1891   00109E  6ED9               	movwf	fsr2l,c
  1892   0010A0  6ADA               	clrf	fsr2h,c
  1893   0010A2  2813               	incf	vfpfcnvrt@cp^0,w,c
  1894   0010A4  6EDF               	movwf	indf2,c
  1895                           
  1896                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1498:    switch (*c
      +                          p) {
  1897   0010A6  EFA9  F008         	goto	l3270
  1898   0010AA                     l3250:
  1899                           
  1900                           ; BSR set to: 0
  1901                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1525:      c = size
      +                          of(dbuf);
  1902   0010AA  0E20               	movlw	32
  1903   0010AC  6E14               	movwf	vfpfcnvrt@c^0,c
  1904   0010AE                     l3252:
  1905                           
  1906                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1527:       dbuf[--
      +                          c] = (convarg.uint % 10) + '0';
  1907   0010AE  0614               	decf	vfpfcnvrt@c^0,f,c
  1908   0010B0  5014               	movf	vfpfcnvrt@c^0,w,c
  1909   0010B2  0FA1               	addlw	low _dbuf
  1910   0010B4  6ED9               	movwf	fsr2l,c
  1911   0010B6  6ADA               	clrf	fsr2h,c
  1912   0010B8  C00F  F001         	movff	vfpfcnvrt@convarg,___lwmod@dividend
  1913   0010BC  C010  F002         	movff	vfpfcnvrt@convarg+1,___lwmod@dividend+1
  1914   0010C0  0E00               	movlw	0
  1915   0010C2  6E04               	movwf	(___lwmod@divisor+1)^0,c
  1916   0010C4  0E0A               	movlw	10
  1917   0010C6  6E03               	movwf	___lwmod@divisor^0,c
  1918   0010C8  EC58  F00E         	call	___lwmod	;wreg free
  1919   0010CC  5001               	movf	?___lwmod^0,w,c
  1920   0010CE  0F30               	addlw	48
  1921   0010D0  6EDF               	movwf	indf2,c
  1922   0010D2                     
  1923                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1528:       convarg
      +                          .uint /= 10;
  1924   0010D2  C00F  F001         	movff	vfpfcnvrt@convarg,___lwdiv@dividend
  1925   0010D6  C010  F002         	movff	vfpfcnvrt@convarg+1,___lwdiv@dividend+1
  1926   0010DA  0E00               	movlw	0
  1927   0010DC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1928   0010DE  0E0A               	movlw	10
  1929   0010E0  6E03               	movwf	___lwdiv@divisor^0,c
  1930   0010E2  ECB7  F00D         	call	___lwdiv	;wreg free
  1931   0010E6  C001  F00F         	movff	?___lwdiv,vfpfcnvrt@convarg
  1932   0010EA  C002  F010         	movff	?___lwdiv+1,vfpfcnvrt@convarg+1
  1933   0010EE                     
  1934                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1530:       cnt++;
  1935   0010EE  4A0D               	infsnz	vfpfcnvrt@cnt^0,f,c
  1936   0010F0  2A0E               	incf	(vfpfcnvrt@cnt+1)^0,f,c
  1937   0010F2                     
  1938                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1532:      } while 
      +                          (convarg.uint != 0 && c != 0);
  1939   0010F2  500F               	movf	vfpfcnvrt@convarg^0,w,c
  1940   0010F4  1010               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1941   0010F6  B4D8               	btfsc	status,2,c
  1942   0010F8  EF80  F008         	goto	u2401
  1943   0010FC  EF82  F008         	goto	u2400
  1944   001100                     u2401:
  1945   001100  EF9A  F008         	goto	l3266
  1946   001104                     u2400:
  1947   001104  5014               	movf	vfpfcnvrt@c^0,w,c
  1948   001106  A4D8               	btfss	status,2,c
  1949   001108  EF88  F008         	goto	u2411
  1950   00110C  EF8A  F008         	goto	u2410
  1951   001110                     u2411:
  1952   001110  EF57  F008         	goto	l3252
  1953   001114                     u2410:
  1954   001114  EF9A  F008         	goto	l3266
  1955   001118                     l3262:
  1956                           
  1957                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1534:       fputc(d
      +                          buf[c++], fp);
  1958   001118  5014               	movf	vfpfcnvrt@c^0,w,c
  1959   00111A  0FA1               	addlw	low _dbuf
  1960   00111C  6ED9               	movwf	fsr2l,c
  1961   00111E  6ADA               	clrf	fsr2h,c
  1962   001120  50DF               	movf	indf2,w,c
  1963   001122  6E0C               	movwf	??_vfpfcnvrt^0,c
  1964   001124  500C               	movf	??_vfpfcnvrt^0,w,c
  1965   001126  6E01               	movwf	fputc@c^0,c
  1966   001128  6A02               	clrf	(fputc@c+1)^0,c
  1967   00112A  C009  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1968   00112E  ECD7  F00C         	call	_fputc	;wreg free
  1969   001132  2A14               	incf	vfpfcnvrt@c^0,f,c
  1970   001134                     l3266:
  1971                           
  1972                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1533:      while (c
      +                           != sizeof(dbuf)) {
  1973   001134  0E20               	movlw	32
  1974   001136  1814               	xorwf	vfpfcnvrt@c^0,w,c
  1975   001138  A4D8               	btfss	status,2,c
  1976   00113A  EFA1  F008         	goto	u2421
  1977   00113E  EFA3  F008         	goto	u2420
  1978   001142                     u2421:
  1979   001142  EF8C  F008         	goto	l3262
  1980   001146                     u2420:
  1981   001146                     
  1982                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1537:      return c
      +                          nt;
  1983   001146  C00D  F009         	movff	vfpfcnvrt@cnt,?_vfpfcnvrt
  1984   00114A  C00E  F00A         	movff	vfpfcnvrt@cnt+1,?_vfpfcnvrt+1
  1985   00114E  EFD8  F008         	goto	l1520
  1986   001152                     l3270:
  1987                           
  1988                           ; BSR set to: 0
  1989   001152  C013  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1990   001156                     	if	1	;There is more than 1 active tblptr byte
  1991   001156  0E10               	movlw	high __smallconst
  1992   001158  6EF7               	movwf	tblptrh,c
  1993   00115A                     	endif
  1994   00115A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1995   00115A  6AF8               	clrf	tblptru,c
  1996   00115C                     	endif
  1997   00115C                     	if	0	;tblptru may be non-zero
  1998   00115C                     	endif
  1999   00115C  0008               	tblrd		*
  2000   00115E  50F5               	movf	tablat,w,c
  2001                           
  2002                           ; Switch size 1, requested type "simple"
  2003                           ; Number of cases is 1, Range of values is 117 to 117
  2004                           ; switch strategies available:
  2005                           ; Name         Instructions Cycles
  2006                           ; simple_byte            4     3 (average)
  2007                           ;	Chosen strategy is simple_byte
  2008   001160  0A75               	xorlw	117	; case 117
  2009   001162  B4D8               	btfsc	status,2,c
  2010   001164  EF55  F008         	goto	l3250
  2011   001168  EFB6  F008         	goto	l3272
  2012   00116C                     l3272:
  2013                           
  2014                           ; BSR set to: 0
  2015                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*fm
      +                          t;
  2016   00116C  500A               	movf	vfpfcnvrt@fmt^0,w,c
  2017   00116E  6ED9               	movwf	fsr2l,c
  2018   001170  6ADA               	clrf	fsr2h,c
  2019   001172  2ADF               	incf	indf2,f,c
  2020   001174                     
  2021                           ; BSR set to: 0
  2022                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1807:         retur
      +                          n (int) 0;
  2023   001174  0E00               	movlw	0
  2024   001176  6E0A               	movwf	(?_vfpfcnvrt+1)^0,c
  2025   001178  0E00               	movlw	0
  2026   00117A  6E09               	movwf	?_vfpfcnvrt^0,c
  2027   00117C  EFD8  F008         	goto	l1520
  2028   001180                     l3278:
  2029                           
  2030                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((in
      +                          t)(*fmt)[0], fp);
  2031   001180  500A               	movf	vfpfcnvrt@fmt^0,w,c
  2032   001182  6ED9               	movwf	fsr2l,c
  2033   001184  6ADA               	clrf	fsr2h,c
  2034   001186  CFDF FFF6          	movff	indf2,tblptrl
  2035   00118A                     	if	1	;There is more than 1 active tblptr byte
  2036   00118A  0E10               	movlw	high __smallconst
  2037   00118C  6EF7               	movwf	tblptrh,c
  2038   00118E                     	endif
  2039   00118E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2040   00118E  6AF8               	clrf	tblptru,c
  2041   001190                     	endif
  2042   001190                     	if	0	;tblptru may be non-zero
  2043   001190                     	endif
  2044   001190  0008               	tblrd		*
  2045   001192  50F5               	movf	tablat,w,c
  2046   001194  6E01               	movwf	fputc@c^0,c
  2047   001196  6A02               	clrf	(fputc@c+1)^0,c
  2048   001198  C009  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2049   00119C  ECD7  F00C         	call	_fputc	;wreg free
  2050   0011A0                     
  2051                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2052   0011A0  500A               	movf	vfpfcnvrt@fmt^0,w,c
  2053   0011A2  6ED9               	movwf	fsr2l,c
  2054   0011A4  6ADA               	clrf	fsr2h,c
  2055   0011A6  2ADF               	incf	indf2,f,c
  2056   0011A8                     
  2057                           ;D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1813:     return (i
      +                          nt) 1;
  2058   0011A8  0E00               	movlw	0
  2059   0011AA  6E0A               	movwf	(?_vfpfcnvrt+1)^0,c
  2060   0011AC  0E01               	movlw	1
  2061   0011AE  6E09               	movwf	?_vfpfcnvrt^0,c
  2062   0011B0                     l1520:
  2063   0011B0  0012               	return		;funcret
  2064   0011B2                     __end_of_vfpfcnvrt:
  2065                           	callstack 0
  2066                           
  2067 ;; *************** function _fputc *****************
  2068 ;; Defined at:
  2069 ;;		line 8 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2070 ;; Parameters:    Size  Location     Type
  2071 ;;  c               2    0[COMRAM] int 
  2072 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2073 ;;		 -> snprintf@f(12), 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;		None
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2    0[COMRAM] int 
  2078 ;; Registers used:
  2079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2087 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2088 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2089 ;;Total ram usage:        8 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 1
  2092 ;; This function calls:
  2093 ;;		_putch
  2094 ;; This function is called by:
  2095 ;;		_vfpfcnvrt
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099                           	psect	text9
  2100   0019AE                     __ptext9:
  2101                           	callstack 0
  2102   0019AE                     _fputc:
  2103                           	callstack 25
  2104   0019AE  5003               	movf	fputc@fp^0,w,c
  2105   0019B0  B4D8               	btfsc	status,2,c
  2106   0019B2  EFDD  F00C         	goto	u2211
  2107   0019B6  EFDF  F00C         	goto	u2210
  2108   0019BA                     u2211:
  2109   0019BA  EFE7  F00C         	goto	l3152
  2110   0019BE                     u2210:
  2111   0019BE  5003               	movf	fputc@fp^0,w,c
  2112   0019C0  A4D8               	btfss	status,2,c
  2113   0019C2  EFE5  F00C         	goto	u2221
  2114   0019C6  EFE7  F00C         	goto	u2220
  2115   0019CA                     u2221:
  2116   0019CA  EFEC  F00C         	goto	l3154
  2117   0019CE                     u2220:
  2118   0019CE                     l3152:
  2119   0019CE  5001               	movf	fputc@c^0,w,c
  2120   0019D0  EC08  F010         	call	_putch
  2121   0019D4  EF2B  F00D         	goto	l1541
  2122   0019D8                     l3154:
  2123   0019D8  5003               	movf	fputc@fp^0,w,c
  2124   0019DA  6ED9               	movwf	fsr2l,c
  2125   0019DC  6ADA               	clrf	fsr2h,c
  2126   0019DE  0E0A               	movlw	10
  2127   0019E0  26D9               	addwf	fsr2l,f,c
  2128   0019E2  50DE               	movf	postinc2,w,c
  2129   0019E4  10DE               	iorwf	postinc2,w,c
  2130   0019E6  B4D8               	btfsc	status,2,c
  2131   0019E8  EFF8  F00C         	goto	u2231
  2132   0019EC  EFFA  F00C         	goto	u2230
  2133   0019F0                     u2231:
  2134   0019F0  EF13  F00D         	goto	l3158
  2135   0019F4                     u2230:
  2136   0019F4  5003               	movf	fputc@fp^0,w,c
  2137   0019F6  6ED9               	movwf	fsr2l,c
  2138   0019F8  6ADA               	clrf	fsr2h,c
  2139   0019FA  0E0A               	movlw	10
  2140   0019FC  26D9               	addwf	fsr2l,f,c
  2141   0019FE  5003               	movf	fputc@fp^0,w,c
  2142   001A00  6EE1               	movwf	fsr1l,c
  2143   001A02  6AE2               	clrf	fsr1h,c
  2144   001A04  0E03               	movlw	3
  2145   001A06  26E1               	addwf	fsr1l,f,c
  2146   001A08  50DE               	movf	postinc2,w,c
  2147   001A0A  5CE6               	subwf	postinc1,w,c
  2148   001A0C  50E6               	movf	postinc1,w,c
  2149   001A0E  0A80               	xorlw	128
  2150   001A10  6E08               	movwf	(??_fputc+4)^0,c
  2151   001A12  50DE               	movf	postinc2,w,c
  2152   001A14  0A80               	xorlw	128
  2153   001A16  5808               	subwfb	(??_fputc+4)^0,w,c
  2154   001A18  B0D8               	btfsc	status,0,c
  2155   001A1A  EF11  F00D         	goto	u2241
  2156   001A1E  EF13  F00D         	goto	u2240
  2157   001A22                     u2241:
  2158   001A22  EF2B  F00D         	goto	l1541
  2159   001A26                     u2240:
  2160   001A26                     l3158:
  2161   001A26  5003               	movf	fputc@fp^0,w,c
  2162   001A28  6ED9               	movwf	fsr2l,c
  2163   001A2A  6ADA               	clrf	fsr2h,c
  2164   001A2C  0E03               	movlw	3
  2165   001A2E  26D9               	addwf	fsr2l,f,c
  2166   001A30  50DF               	movf	indf2,w,c
  2167   001A32  6E04               	movwf	??_fputc^0,c
  2168   001A34  5003               	movf	fputc@fp^0,w,c
  2169   001A36  6ED9               	movwf	fsr2l,c
  2170   001A38  6ADA               	clrf	fsr2h,c
  2171   001A3A  50DF               	movf	indf2,w,c
  2172   001A3C  2404               	addwf	??_fputc^0,w,c
  2173   001A3E  6ED9               	movwf	fsr2l,c
  2174   001A40  6ADA               	clrf	fsr2h,c
  2175   001A42  C001  FFDF         	movff	fputc@c,indf2
  2176   001A46  5003               	movf	fputc@fp^0,w,c
  2177   001A48  6ED9               	movwf	fsr2l,c
  2178   001A4A  6ADA               	clrf	fsr2h,c
  2179   001A4C  0E03               	movlw	3
  2180   001A4E  26D9               	addwf	fsr2l,f,c
  2181   001A50  2ADE               	incf	postinc2,f,c
  2182   001A52  0E00               	movlw	0
  2183   001A54  22DD               	addwfc	postdec2,f,c
  2184   001A56                     l1541:
  2185   001A56  0012               	return		;funcret
  2186   001A58                     __end_of_fputc:
  2187                           	callstack 0
  2188                           
  2189 ;; *************** function _putch *****************
  2190 ;; Defined at:
  2191 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;  c               1    wreg     unsigned char 
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;  c               1    0[COMRAM] unsigned char 
  2196 ;; Return value:  Size  Location     Type
  2197 ;;                  1    wreg      void 
  2198 ;; Registers used:
  2199 ;;		wreg
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;Total ram usage:        0 bytes
  2210 ;; Hardware stack levels used: 1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_fputc
  2215 ;; This function uses a non-reentrant model
  2216 ;;
  2217                           
  2218                           	psect	text10
  2219   002010                     __ptext10:
  2220                           	callstack 0
  2221   002010                     _putch:
  2222                           	callstack 25
  2223   002010  0012               	return		;funcret
  2224   002012                     __end_of_putch:
  2225                           	callstack 0
  2226                           
  2227 ;; *************** function ___lwmod *****************
  2228 ;; Defined at:
  2229 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\lwmod.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;  dividend        2    0[COMRAM] unsigned int 
  2232 ;;  divisor         2    2[COMRAM] unsigned int 
  2233 ;; Auto vars:     Size  Location     Type
  2234 ;;  counter         1    4[COMRAM] unsigned char 
  2235 ;; Return value:  Size  Location     Type
  2236 ;;                  2    0[COMRAM] unsigned int 
  2237 ;; Registers used:
  2238 ;;		wreg, status,2, status,0
  2239 ;; Tracked objects:
  2240 ;;		On entry : 0/0
  2241 ;;		On exit  : 0/0
  2242 ;;		Unchanged: 0/0
  2243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2244 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2248 ;;Total ram usage:        5 bytes
  2249 ;; Hardware stack levels used: 1
  2250 ;; This function calls:
  2251 ;;		Nothing
  2252 ;; This function is called by:
  2253 ;;		_vfpfcnvrt
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text11
  2258   001CB0                     __ptext11:
  2259                           	callstack 0
  2260   001CB0                     ___lwmod:
  2261                           	callstack 26
  2262   001CB0  5003               	movf	___lwmod@divisor^0,w,c
  2263   001CB2  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2264   001CB4  B4D8               	btfsc	status,2,c
  2265   001CB6  EF5F  F00E         	goto	u2181
  2266   001CBA  EF61  F00E         	goto	u2180
  2267   001CBE                     u2181:
  2268   001CBE  EF85  F00E         	goto	l1260
  2269   001CC2                     u2180:
  2270   001CC2  0E01               	movlw	1
  2271   001CC4  6E05               	movwf	___lwmod@counter^0,c
  2272   001CC6  EF69  F00E         	goto	l3138
  2273   001CCA                     l3136:
  2274   001CCA  90D8               	bcf	status,0,c
  2275   001CCC  3603               	rlcf	___lwmod@divisor^0,f,c
  2276   001CCE  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2277   001CD0  2A05               	incf	___lwmod@counter^0,f,c
  2278   001CD2                     l3138:
  2279   001CD2  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2280   001CD4  EF6E  F00E         	goto	u2191
  2281   001CD8  EF70  F00E         	goto	u2190
  2282   001CDC                     u2191:
  2283   001CDC  EF65  F00E         	goto	l3136
  2284   001CE0                     u2190:
  2285   001CE0                     l3140:
  2286   001CE0  5003               	movf	___lwmod@divisor^0,w,c
  2287   001CE2  5C01               	subwf	___lwmod@dividend^0,w,c
  2288   001CE4  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2289   001CE6  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2290   001CE8  A0D8               	btfss	status,0,c
  2291   001CEA  EF79  F00E         	goto	u2201
  2292   001CEE  EF7B  F00E         	goto	u2200
  2293   001CF2                     u2201:
  2294   001CF2  EF7F  F00E         	goto	l3144
  2295   001CF6                     u2200:
  2296   001CF6  5003               	movf	___lwmod@divisor^0,w,c
  2297   001CF8  5E01               	subwf	___lwmod@dividend^0,f,c
  2298   001CFA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2299   001CFC  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2300   001CFE                     l3144:
  2301   001CFE  90D8               	bcf	status,0,c
  2302   001D00  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2303   001D02  3203               	rrcf	___lwmod@divisor^0,f,c
  2304   001D04  2E05               	decfsz	___lwmod@counter^0,f,c
  2305   001D06  EF70  F00E         	goto	l3140
  2306   001D0A                     l1260:
  2307   001D0A  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2308   001D0E  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2309   001D12  0012               	return		;funcret
  2310   001D14                     __end_of___lwmod:
  2311                           	callstack 0
  2312                           
  2313 ;; *************** function ___lwdiv *****************
  2314 ;; Defined at:
  2315 ;;		line 7 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  dividend        2    0[COMRAM] unsigned int 
  2318 ;;  divisor         2    2[COMRAM] unsigned int 
  2319 ;; Auto vars:     Size  Location     Type
  2320 ;;  quotient        2    4[COMRAM] unsigned int 
  2321 ;;  counter         1    6[COMRAM] unsigned char 
  2322 ;; Return value:  Size  Location     Type
  2323 ;;                  2    0[COMRAM] unsigned int 
  2324 ;; Registers used:
  2325 ;;		wreg, status,2, status,0
  2326 ;; Tracked objects:
  2327 ;;		On entry : 0/0
  2328 ;;		On exit  : 0/0
  2329 ;;		Unchanged: 0/0
  2330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2331 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;Total ram usage:        7 bytes
  2336 ;; Hardware stack levels used: 1
  2337 ;; This function calls:
  2338 ;;		Nothing
  2339 ;; This function is called by:
  2340 ;;		_vfpfcnvrt
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text12
  2345   001B6E                     __ptext12:
  2346                           	callstack 0
  2347   001B6E                     ___lwdiv:
  2348                           	callstack 26
  2349   001B6E  0E00               	movlw	0
  2350   001B70  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2351   001B72  0E00               	movlw	0
  2352   001B74  6E05               	movwf	___lwdiv@quotient^0,c
  2353   001B76  5003               	movf	___lwdiv@divisor^0,w,c
  2354   001B78  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2355   001B7A  B4D8               	btfsc	status,2,c
  2356   001B7C  EFC2  F00D         	goto	u2151
  2357   001B80  EFC4  F00D         	goto	u2150
  2358   001B84                     u2151:
  2359   001B84  EFEC  F00D         	goto	l1250
  2360   001B88                     u2150:
  2361   001B88  0E01               	movlw	1
  2362   001B8A  6E07               	movwf	___lwdiv@counter^0,c
  2363   001B8C  EFCC  F00D         	goto	l3118
  2364   001B90                     l3116:
  2365   001B90  90D8               	bcf	status,0,c
  2366   001B92  3603               	rlcf	___lwdiv@divisor^0,f,c
  2367   001B94  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2368   001B96  2A07               	incf	___lwdiv@counter^0,f,c
  2369   001B98                     l3118:
  2370   001B98  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2371   001B9A  EFD1  F00D         	goto	u2161
  2372   001B9E  EFD3  F00D         	goto	u2160
  2373   001BA2                     u2161:
  2374   001BA2  EFC8  F00D         	goto	l3116
  2375   001BA6                     u2160:
  2376   001BA6                     l3120:
  2377   001BA6  90D8               	bcf	status,0,c
  2378   001BA8  3605               	rlcf	___lwdiv@quotient^0,f,c
  2379   001BAA  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2380   001BAC  5003               	movf	___lwdiv@divisor^0,w,c
  2381   001BAE  5C01               	subwf	___lwdiv@dividend^0,w,c
  2382   001BB0  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2383   001BB2  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2384   001BB4  A0D8               	btfss	status,0,c
  2385   001BB6  EFDF  F00D         	goto	u2171
  2386   001BBA  EFE1  F00D         	goto	u2170
  2387   001BBE                     u2171:
  2388   001BBE  EFE6  F00D         	goto	l3128
  2389   001BC2                     u2170:
  2390   001BC2  5003               	movf	___lwdiv@divisor^0,w,c
  2391   001BC4  5E01               	subwf	___lwdiv@dividend^0,f,c
  2392   001BC6  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2393   001BC8  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2394   001BCA  8005               	bsf	___lwdiv@quotient^0,0,c
  2395   001BCC                     l3128:
  2396   001BCC  90D8               	bcf	status,0,c
  2397   001BCE  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2398   001BD0  3203               	rrcf	___lwdiv@divisor^0,f,c
  2399   001BD2  2E07               	decfsz	___lwdiv@counter^0,f,c
  2400   001BD4  EFD3  F00D         	goto	l3120
  2401   001BD8                     l1250:
  2402   001BD8  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2403   001BDC  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2404   001BE0  0012               	return		;funcret
  2405   001BE2                     __end_of___lwdiv:
  2406                           	callstack 0
  2407                           
  2408 ;; *************** function _memset *****************
  2409 ;; Defined at:
  2410 ;;		line 3 in file "D:\Programming\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  dest            1    0[COMRAM] PTR void 
  2413 ;;		 -> lcd_counter_txt2(6), 
  2414 ;;  c               2    1[COMRAM] int 
  2415 ;;  n               2    3[COMRAM] unsigned int 
  2416 ;; Auto vars:     Size  Location     Type
  2417 ;;  p               1    5[COMRAM] PTR unsigned char 
  2418 ;;		 -> lcd_counter_txt2(6), 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      PTR void 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2428 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2432 ;;Total ram usage:        6 bytes
  2433 ;; Hardware stack levels used: 1
  2434 ;; This function calls:
  2435 ;;		Nothing
  2436 ;; This function is called by:
  2437 ;;		_convert_short_to_string
  2438 ;;		_convert_byte_to_string
  2439 ;;		_convert_int_to_string
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text13
  2444   001F9A                     __ptext13:
  2445                           	callstack 0
  2446   001F9A                     _memset:
  2447                           	callstack 29
  2448   001F9A  C001  F006         	movff	memset@dest,memset@p
  2449   001F9E  EFD7  F00F         	goto	l3514
  2450   001FA2                     l3510:
  2451   001FA2  5006               	movf	memset@p^0,w,c
  2452   001FA4  6ED9               	movwf	fsr2l,c
  2453   001FA6  6ADA               	clrf	fsr2h,c
  2454   001FA8  C002  FFDF         	movff	memset@c,indf2
  2455   001FAC  2A06               	incf	memset@p^0,f,c
  2456   001FAE                     l3514:
  2457   001FAE  0604               	decf	memset@n^0,f,c
  2458   001FB0  A0D8               	btfss	status,0,c
  2459   001FB2  0605               	decf	(memset@n+1)^0,f,c
  2460   001FB4  2804               	incf	memset@n^0,w,c
  2461   001FB6  E106               	bnz	u2781
  2462   001FB8  2805               	incf	(memset@n+1)^0,w,c
  2463   001FBA  A4D8               	btfss	status,2,c
  2464   001FBC  EFE2  F00F         	goto	u2781
  2465   001FC0  EFE4  F00F         	goto	u2780
  2466   001FC4                     u2781:
  2467   001FC4  EFD1  F00F         	goto	l3510
  2468   001FC8                     u2780:
  2469   001FC8  0012               	return		;funcret
  2470   001FCA                     __end_of_memset:
  2471                           	callstack 0
  2472                           
  2473 ;; *************** function _application_init *****************
  2474 ;; Defined at:
  2475 ;;		line 32 in file "app.c"
  2476 ;; Parameters:    Size  Location     Type
  2477 ;;		None
  2478 ;; Auto vars:     Size  Location     Type
  2479 ;;  ret             1   22[COMRAM] unsigned char 
  2480 ;; Return value:  Size  Location     Type
  2481 ;;                  1    wreg      unsigned char 
  2482 ;; Registers used:
  2483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2484 ;; Tracked objects:
  2485 ;;		On entry : 0/0
  2486 ;;		On exit  : 0/0
  2487 ;;		Unchanged: 0/0
  2488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2490 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;Total ram usage:        1 bytes
  2494 ;; Hardware stack levels used: 1
  2495 ;; Hardware stack levels required when called: 5
  2496 ;; This function calls:
  2497 ;;		_ecu_layer_initialize
  2498 ;; This function is called by:
  2499 ;;		_main
  2500 ;; This function uses a non-reentrant model
  2501 ;;
  2502                           
  2503                           	psect	text14
  2504   002006                     __ptext14:
  2505                           	callstack 0
  2506   002006                     _application_init:
  2507                           	callstack 25
  2508   002006                     
  2509                           ;app.c: 35:     ret = ecu_layer_initialize();
  2510   002006  ECE5  F00F         	call	_ecu_layer_initialize	;wreg free
  2511   00200A  6E17               	movwf	application_init@ret^0,c
  2512   00200C                     
  2513                           ;app.c: 37:     return (ret);
  2514   00200C  5017               	movf	application_init@ret^0,w,c
  2515   00200E  0012               	return		;funcret
  2516   002010                     __end_of_application_init:
  2517                           	callstack 0
  2518                           
  2519 ;; *************** function _ecu_layer_initialize *****************
  2520 ;; Defined at:
  2521 ;;		line 78 in file "ECU_Layer/ecu_layer_init.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;		None
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  ret             1   21[COMRAM] unsigned char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  1    wreg      unsigned char 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2536 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;Total ram usage:        1 bytes
  2540 ;; Hardware stack levels used: 1
  2541 ;; Hardware stack levels required when called: 4
  2542 ;; This function calls:
  2543 ;;		_lcd_4bit_initialize
  2544 ;;		_lcd_8bit_initialize
  2545 ;; This function is called by:
  2546 ;;		_application_init
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551   001FCA                     __ptext15:
  2552                           	callstack 0
  2553   001FCA                     _ecu_layer_initialize:
  2554                           	callstack 25
  2555   001FCA                     
  2556                           ;ECU_Layer/ecu_layer_init.c: 82:     ret = lcd_4bit_initialize(&lcd_1);
  2557   001FCA  0E90               	movlw	low _lcd_1
  2558   001FCC  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
  2559   001FCE  EC8C  F009         	call	_lcd_4bit_initialize	;wreg free
  2560   001FD2  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2561   001FD4                     
  2562                           ;ECU_Layer/ecu_layer_init.c: 83:     if ((Std_ReturnType)0x00u == ret)
  2563   001FD4  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2564   001FD6  A4D8               	btfss	status,2,c
  2565   001FD8  EFF0  F00F         	goto	u2841
  2566   001FDC  EFF2  F00F         	goto	u2840
  2567   001FE0                     u2841:
  2568   001FE0  EFF7  F00F         	goto	l3556
  2569   001FE4                     u2840:
  2570   001FE4                     
  2571                           ;ECU_Layer/ecu_layer_init.c: 84:     {;ECU_Layer/ecu_layer_init.c: 85:         ret = lcd
      +                          _8bit_initialize(&lcd_2);
  2572   001FE4  0E7E               	movlw	low _lcd_2
  2573   001FE6  6E11               	movwf	lcd_8bit_initialize@lcd^0,c
  2574   001FE8  EC32  F00A         	call	_lcd_8bit_initialize	;wreg free
  2575   001FEC  6E16               	movwf	ecu_layer_initialize@ret^0,c
  2576   001FEE                     l3556:
  2577                           
  2578                           ;ECU_Layer/ecu_layer_init.c: 88:     return (ret);
  2579   001FEE  5016               	movf	ecu_layer_initialize@ret^0,w,c
  2580   001FF0  0012               	return		;funcret
  2581   001FF2                     __end_of_ecu_layer_initialize:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _lcd_8bit_initialize *****************
  2585 ;; Defined at:
  2586 ;;		line 195 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  lcd             1   16[COMRAM] PTR const struct .
  2589 ;;		 -> lcd_2(10), 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  ret             1   19[COMRAM] unsigned char 
  2592 ;;  lcd_data_cou    1   18[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      unsigned char 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2602 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2603 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;Total ram usage:        4 bytes
  2607 ;; Hardware stack levels used: 1
  2608 ;; Hardware stack levels required when called: 3
  2609 ;; This function calls:
  2610 ;;		_gpio_pin_initialize
  2611 ;;		_lcd_8bit_send_command
  2612 ;; This function is called by:
  2613 ;;		_ecu_layer_initialize
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text16
  2618   001464                     __ptext16:
  2619                           	callstack 0
  2620   001464                     _lcd_8bit_initialize:
  2621                           	callstack 25
  2622   001464                     
  2623                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 198:     uint8 lcd_data_counter = 0x00;
  2624   001464  0E00               	movlw	0
  2625   001466  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2626                           
  2627                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 199:  if (((void*)0) == lcd)
  2628   001468  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2629   00146A  A4D8               	btfss	status,2,c
  2630   00146C  EF3A  F00A         	goto	u2501
  2631   001470  EF3C  F00A         	goto	u2500
  2632   001474                     u2501:
  2633   001474  EF40  F00A         	goto	l3338
  2634   001478                     u2500:
  2635   001478                     
  2636                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 200:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 201:     
      +                           ret = (Std_ReturnType)0x01u;
  2637   001478  0E01               	movlw	1
  2638   00147A  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2639                           
  2640                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 202:  }
  2641   00147C  EFCC  F00A         	goto	l3376
  2642   001480                     l3338:
  2643                           
  2644                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 204:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 205:     
      +                              ret = gpio_pin_initialize(&(lcd->lcd_rs));
  2645   001480  C011  F008         	movff	lcd_8bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  2646   001484  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  2647   001488  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2648   00148A                     
  2649                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 206:         if ((Std_ReturnType)0x00u == ret)
  2650   00148A  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2651   00148C  A4D8               	btfss	status,2,c
  2652   00148E  EF4B  F00A         	goto	u2511
  2653   001492  EF4D  F00A         	goto	u2510
  2654   001496                     u2511:
  2655   001496  EFCC  F00A         	goto	l3376
  2656   00149A                     u2510:
  2657   00149A                     
  2658                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 207:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 20
      +                          8:             ret = gpio_pin_initialize(&(lcd->lcd_en));
  2659   00149A  2811               	incf	lcd_8bit_initialize@lcd^0,w,c
  2660   00149C  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2661   00149E  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  2662   0014A2  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2663   0014A4                     
  2664                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 209:             if ((Std_ReturnType)0x00u == ret)
  2665   0014A4  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2666   0014A6  A4D8               	btfss	status,2,c
  2667   0014A8  EF58  F00A         	goto	u2521
  2668   0014AC  EF5A  F00A         	goto	u2520
  2669   0014B0                     u2521:
  2670   0014B0  EF76  F00A         	goto	l3362
  2671   0014B4                     u2520:
  2672   0014B4                     
  2673                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 210:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c
      +                          : 211:                 for (lcd_data_counter = 0x00; lcd_data_counter < 8; lcd_data_coun
      +                          ter++)
  2674   0014B4  0E00               	movlw	0
  2675   0014B6  6E13               	movwf	lcd_8bit_initialize@lcd_data_counter^0,c
  2676   0014B8                     l3352:
  2677                           
  2678                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 212:                 {;ECU_Layer/Char_LCD/ecu_char_l
      +                          cd.c: 213:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counte
      +                          r]));
  2679   0014B8  5011               	movf	lcd_8bit_initialize@lcd^0,w,c
  2680   0014BA  2413               	addwf	lcd_8bit_initialize@lcd_data_counter^0,w,c
  2681   0014BC  0F02               	addlw	2
  2682   0014BE  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  2683   0014C0  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  2684   0014C4  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2685   0014C6                     
  2686                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 214:                     if ((Std_ReturnType)0x01u =
      +                          = ret)
  2687   0014C6  0414               	decf	lcd_8bit_initialize@ret^0,w,c
  2688   0014C8  A4D8               	btfss	status,2,c
  2689   0014CA  EF69  F00A         	goto	u2531
  2690   0014CE  EF6B  F00A         	goto	u2530
  2691   0014D2                     u2531:
  2692   0014D2  EF6D  F00A         	goto	l3358
  2693   0014D6                     u2530:
  2694   0014D6  EF76  F00A         	goto	l3362
  2695   0014DA                     l3358:
  2696                           
  2697                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 218:                 }
  2698   0014DA  2A13               	incf	lcd_8bit_initialize@lcd_data_counter^0,f,c
  2699   0014DC  0E07               	movlw	7
  2700   0014DE  6413               	cpfsgt	lcd_8bit_initialize@lcd_data_counter^0,c
  2701   0014E0  EF74  F00A         	goto	u2541
  2702   0014E4  EF76  F00A         	goto	u2540
  2703   0014E8                     u2541:
  2704   0014E8  EF5C  F00A         	goto	l3352
  2705   0014EC                     u2540:
  2706   0014EC                     l3362:
  2707                           
  2708                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 221:    _delay((unsigned long)((20)*((8 *1000UL *100
      +                          0UL)/4000.0)));
  2709   0014EC  0E34               	movlw	52
  2710   0014EE  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2711   0014F0  0EF2               	movlw	242
  2712   0014F2                     u4037:
  2713   0014F2  2EE8               	decfsz	wreg,f,c
  2714   0014F4  D7FE               	bra	u4037
  2715   0014F6  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2716   0014F8  D7FC               	bra	u4037
  2717   0014FA  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2718   0014FE  0E38               	movlw	56
  2719   001500  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2720   001502  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2721   001506                     
  2722                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 223:    _delay((unsigned long)((5)*((8 *1000UL *1000
      +                          UL)/4000.0)));
  2723   001506  0E0D               	movlw	13
  2724   001508  6E12               	movwf	??_lcd_8bit_initialize^0,c
  2725   00150A  0EFC               	movlw	252
  2726   00150C                     u4047:
  2727   00150C  2EE8               	decfsz	wreg,f,c
  2728   00150E  D7FE               	bra	u4047
  2729   001510  2E12               	decfsz	??_lcd_8bit_initialize^0,f,c
  2730   001512  D7FC               	bra	u4047
  2731   001514  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2732   001518  0E38               	movlw	56
  2733   00151A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2734   00151C  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2735   001520                     
  2736                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 225:    _delay((unsigned long)((150)*((8 *1000UL *10
      +                          00UL)/4000000.0)));
  2737   001520  0E64               	movlw	100
  2738   001522                     u4057:
  2739   001522  2EE8               	decfsz	wreg,f,c
  2740   001524  D7FE               	bra	u4057
  2741   001526                     
  2742                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 226:    ret = lcd_8bit_send_command(lcd, 0x38);
  2743   001526  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2744   00152A  0E38               	movlw	56
  2745   00152C  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2746   00152E  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2747   001532  6E14               	movwf	lcd_8bit_initialize@ret^0,c
  2748   001534                     
  2749                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 228:    if ((Std_ReturnType)0x00u == ret)
  2750   001534  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2751   001536  A4D8               	btfss	status,2,c
  2752   001538  EFA0  F00A         	goto	u2551
  2753   00153C  EFA2  F00A         	goto	u2550
  2754   001540                     u2551:
  2755   001540  EFCC  F00A         	goto	l3376
  2756   001544                     u2550:
  2757   001544                     
  2758                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 229:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 230:   
      +                            ret |= lcd_8bit_send_command(lcd, 0x01);
  2759   001544  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2760   001548  0E01               	movlw	1
  2761   00154A  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2762   00154C  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2763   001550  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2764                           
  2765                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 231:     ret |= lcd_8bit_send_command(lcd, 0x02);
  2766   001552  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2767   001556  0E02               	movlw	2
  2768   001558  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2769   00155A  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2770   00155E  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2771                           
  2772                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 232:     ret |= lcd_8bit_send_command(lcd, 0x06);
  2773   001560  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2774   001564  0E06               	movlw	6
  2775   001566  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2776   001568  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2777   00156C  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2778                           
  2779                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 233:     ret |= lcd_8bit_send_command(lcd, 0x0C);
  2780   00156E  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2781   001572  0E0C               	movlw	12
  2782   001574  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2783   001576  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2784   00157A  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2785                           
  2786                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 234:     ret |= lcd_8bit_send_command(lcd, 0x38);
  2787   00157C  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2788   001580  0E38               	movlw	56
  2789   001582  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2790   001584  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2791   001588  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2792                           
  2793                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 235:     ret |= lcd_8bit_send_command(lcd, 0x80);
  2794   00158A  C011  F00B         	movff	lcd_8bit_initialize@lcd,lcd_8bit_send_command@lcd
  2795   00158E  0E80               	movlw	128
  2796   001590  6E0C               	movwf	lcd_8bit_send_command@command^0,c
  2797   001592  EC2A  F00C         	call	_lcd_8bit_send_command	;wreg free
  2798   001596  1214               	iorwf	lcd_8bit_initialize@ret^0,f,c
  2799   001598                     l3376:
  2800                           
  2801                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 239:  return (ret);
  2802   001598  5014               	movf	lcd_8bit_initialize@ret^0,w,c
  2803   00159A  0012               	return		;funcret
  2804   00159C                     __end_of_lcd_8bit_initialize:
  2805                           	callstack 0
  2806                           
  2807 ;; *************** function _lcd_8bit_send_command *****************
  2808 ;; Defined at:
  2809 ;;		line 242 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2810 ;; Parameters:    Size  Location     Type
  2811 ;;  lcd             1   10[COMRAM] PTR const struct .
  2812 ;;		 -> lcd_2(10), 
  2813 ;;  command         1   11[COMRAM] unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  ret             1   15[COMRAM] unsigned char 
  2816 ;;  counter         1   14[COMRAM] unsigned char 
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      unsigned char 
  2819 ;; Registers used:
  2820 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2826 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2830 ;;Total ram usage:        6 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 2
  2833 ;; This function calls:
  2834 ;;		_gpio_pin_write_logic
  2835 ;;		_lcd_8bit_send_enable_signal
  2836 ;; This function is called by:
  2837 ;;		_lcd_8bit_initialize
  2838 ;;		_lcd_8bit_set_cursor
  2839 ;;		_main
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text17
  2844   001854                     __ptext17:
  2845                           	callstack 0
  2846   001854                     _lcd_8bit_send_command:
  2847                           	callstack 26
  2848   001854                     
  2849                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 245:  uint8 counter = 0x00;
  2850   001854  0E00               	movlw	0
  2851   001856  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  2852                           
  2853                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 247:  if (((void*)0) == lcd)
  2854   001858  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  2855   00185A  A4D8               	btfss	status,2,c
  2856   00185C  EF32  F00C         	goto	u2321
  2857   001860  EF34  F00C         	goto	u2320
  2858   001864                     u2321:
  2859   001864  EF38  F00C         	goto	l3204
  2860   001868                     u2320:
  2861   001868                     
  2862                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 248:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 249:     
      +                           ret = (Std_ReturnType)0x01u;
  2863   001868  0E01               	movlw	1
  2864   00186A  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2865                           
  2866                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 250:  }
  2867   00186C  EF7F  F00C         	goto	l3228
  2868   001870                     l3204:
  2869                           
  2870                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 252:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 253:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  2871   001870  C00B  F001         	movff	lcd_8bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  2872   001874  0E00               	movlw	0
  2873   001876  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2874   001878  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  2875   00187C  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2876   00187E                     
  2877                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 254:   if ((Std_ReturnType)0x00u == ret)
  2878   00187E  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  2879   001880  A4D8               	btfss	status,2,c
  2880   001882  EF45  F00C         	goto	u2331
  2881   001886  EF47  F00C         	goto	u2330
  2882   00188A                     u2331:
  2883   00188A  EF7F  F00C         	goto	l3228
  2884   00188E                     u2330:
  2885   00188E                     
  2886                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 255:   {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 256:    
      +                          for (counter = 0x00; counter < 8; counter++)
  2887   00188E  0E00               	movlw	0
  2888   001890  6E0F               	movwf	lcd_8bit_send_command@counter^0,c
  2889   001892                     l3214:
  2890                           
  2891                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 257:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 258:   
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (command >> counter) & (uint8)1)
      +                          ;
  2892   001892  500B               	movf	lcd_8bit_send_command@lcd^0,w,c
  2893   001894  240F               	addwf	lcd_8bit_send_command@counter^0,w,c
  2894   001896  0F02               	addlw	2
  2895   001898  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  2896   00189A  C00F  F00D         	movff	lcd_8bit_send_command@counter,??_lcd_8bit_send_command
  2897   00189E  C00C  F00E         	movff	lcd_8bit_send_command@command,??_lcd_8bit_send_command+1
  2898   0018A2  2A0D               	incf	??_lcd_8bit_send_command^0,f,c
  2899   0018A4  EF56  F00C         	goto	u2344
  2900   0018A8                     u2345:
  2901   0018A8  90D8               	bcf	status,0,c
  2902   0018AA  320E               	rrcf	(??_lcd_8bit_send_command+1)^0,f,c
  2903   0018AC                     u2344:
  2904   0018AC  2E0D               	decfsz	??_lcd_8bit_send_command^0,f,c
  2905   0018AE  EF54  F00C         	goto	u2345
  2906   0018B2  500E               	movf	(??_lcd_8bit_send_command+1)^0,w,c
  2907   0018B4  0B01               	andlw	1
  2908   0018B6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  2909   0018B8  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  2910   0018BC  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2911   0018BE                     
  2912                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 259:     if ((Std_ReturnType)0x01u == ret)
  2913   0018BE  0410               	decf	lcd_8bit_send_command@ret^0,w,c
  2914   0018C0  A4D8               	btfss	status,2,c
  2915   0018C2  EF65  F00C         	goto	u2351
  2916   0018C6  EF67  F00C         	goto	u2350
  2917   0018CA                     u2351:
  2918   0018CA  EF69  F00C         	goto	l3220
  2919   0018CE                     u2350:
  2920   0018CE  EF72  F00C         	goto	l3224
  2921   0018D2                     l3220:
  2922                           
  2923                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 263:    }
  2924   0018D2  2A0F               	incf	lcd_8bit_send_command@counter^0,f,c
  2925   0018D4  0E07               	movlw	7
  2926   0018D6  640F               	cpfsgt	lcd_8bit_send_command@counter^0,c
  2927   0018D8  EF70  F00C         	goto	u2361
  2928   0018DC  EF72  F00C         	goto	u2360
  2929   0018E0                     u2361:
  2930   0018E0  EF49  F00C         	goto	l3214
  2931   0018E4                     u2360:
  2932   0018E4                     l3224:
  2933                           
  2934                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 264:    if ((Std_ReturnType)0x00u == ret)
  2935   0018E4  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  2936   0018E6  A4D8               	btfss	status,2,c
  2937   0018E8  EF78  F00C         	goto	u2371
  2938   0018EC  EF7A  F00C         	goto	u2370
  2939   0018F0                     u2371:
  2940   0018F0  EF7F  F00C         	goto	l3228
  2941   0018F4                     u2370:
  2942   0018F4                     
  2943                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 265:    {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 266:   
      +                            ret = lcd_8bit_send_enable_signal(lcd);
  2944   0018F4  C00B  F009         	movff	lcd_8bit_send_command@lcd,lcd_8bit_send_enable_signal@lcd
  2945   0018F8  ECAD  F00F         	call	_lcd_8bit_send_enable_signal	;wreg free
  2946   0018FC  6E10               	movwf	lcd_8bit_send_command@ret^0,c
  2947   0018FE                     l3228:
  2948                           
  2949                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 270:  return (ret);
  2950   0018FE  5010               	movf	lcd_8bit_send_command@ret^0,w,c
  2951   001900  0012               	return		;funcret
  2952   001902                     __end_of_lcd_8bit_send_command:
  2953                           	callstack 0
  2954                           
  2955 ;; *************** function _lcd_8bit_send_enable_signal *****************
  2956 ;; Defined at:
  2957 ;;		line 454 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;  lcd             1    8[COMRAM] PTR const struct .
  2960 ;;		 -> lcd_2(10), 
  2961 ;; Auto vars:     Size  Location     Type
  2962 ;;  ret             1    9[COMRAM] unsigned char 
  2963 ;; Return value:  Size  Location     Type
  2964 ;;                  1    wreg      unsigned char 
  2965 ;; Registers used:
  2966 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2967 ;; Tracked objects:
  2968 ;;		On entry : 0/0
  2969 ;;		On exit  : 0/0
  2970 ;;		Unchanged: 0/0
  2971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2972 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2975 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2976 ;;Total ram usage:        2 bytes
  2977 ;; Hardware stack levels used: 1
  2978 ;; Hardware stack levels required when called: 1
  2979 ;; This function calls:
  2980 ;;		_gpio_pin_write_logic
  2981 ;; This function is called by:
  2982 ;;		_lcd_8bit_send_command
  2983 ;;		_lcd_8bit_send_char_data
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           	psect	text18
  2988   001F5A                     __ptext18:
  2989                           	callstack 0
  2990   001F5A                     _lcd_8bit_send_enable_signal:
  2991                           	callstack 26
  2992   001F5A                     
  2993                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 458:  if (((void*)0) == lcd)
  2994   001F5A  5009               	movf	lcd_8bit_send_enable_signal@lcd^0,w,c
  2995   001F5C  A4D8               	btfss	status,2,c
  2996   001F5E  EFB3  F00F         	goto	u2141
  2997   001F62  EFB5  F00F         	goto	u2140
  2998   001F66                     u2141:
  2999   001F66  EFB9  F00F         	goto	l3100
  3000   001F6A                     u2140:
  3001   001F6A                     
  3002                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 459:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 460:   re
      +                          t = (Std_ReturnType)0x01u;
  3003   001F6A  0E01               	movlw	1
  3004   001F6C  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3005                           
  3006                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 461:  }
  3007   001F6E  EFCB  F00F         	goto	l3106
  3008   001F72                     l3100:
  3009                           
  3010                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 463:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 464:   re
      +                          t = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3011   001F72  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3012   001F74  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3013   001F76  0E01               	movlw	1
  3014   001F78  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3015   001F7A  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3016   001F7E  6E0A               	movwf	lcd_8bit_send_enable_signal@ret^0,c
  3017   001F80                     
  3018                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 465:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3019   001F80  0E03               	movlw	3
  3020   001F82                     u4067:
  3021   001F82  2EE8               	decfsz	wreg,f,c
  3022   001F84  D7FE               	bra	u4067
  3023   001F86  0000               	nop	
  3024   001F88                     
  3025                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 466:   ret |= gpio_pin_write_logic(&(lcd->lcd_en), G
      +                          PIO_LOW);
  3026   001F88  2809               	incf	lcd_8bit_send_enable_signal@lcd^0,w,c
  3027   001F8A  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3028   001F8C  0E00               	movlw	0
  3029   001F8E  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3030   001F90  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3031   001F94  120A               	iorwf	lcd_8bit_send_enable_signal@ret^0,f,c
  3032   001F96                     l3106:
  3033                           
  3034                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 468:  return (ret);
  3035   001F96  500A               	movf	lcd_8bit_send_enable_signal@ret^0,w,c
  3036   001F98  0012               	return		;funcret
  3037   001F9A                     __end_of_lcd_8bit_send_enable_signal:
  3038                           	callstack 0
  3039                           
  3040 ;; *************** function _lcd_4bit_initialize *****************
  3041 ;; Defined at:
  3042 ;;		line 14 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3043 ;; Parameters:    Size  Location     Type
  3044 ;;  lcd             1   17[COMRAM] PTR const struct .
  3045 ;;		 -> lcd_1(6), 
  3046 ;; Auto vars:     Size  Location     Type
  3047 ;;  ret             1   20[COMRAM] unsigned char 
  3048 ;;  lcd_data_cou    1   19[COMRAM] unsigned char 
  3049 ;; Return value:  Size  Location     Type
  3050 ;;                  1    wreg      unsigned char 
  3051 ;; Registers used:
  3052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3053 ;; Tracked objects:
  3054 ;;		On entry : 0/0
  3055 ;;		On exit  : 0/0
  3056 ;;		Unchanged: 0/0
  3057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;Total ram usage:        4 bytes
  3063 ;; Hardware stack levels used: 1
  3064 ;; Hardware stack levels required when called: 3
  3065 ;; This function calls:
  3066 ;;		_gpio_pin_initialize
  3067 ;;		_lcd_4bit_send_command
  3068 ;; This function is called by:
  3069 ;;		_ecu_layer_initialize
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text19
  3074   001318                     __ptext19:
  3075                           	callstack 0
  3076   001318                     _lcd_4bit_initialize:
  3077                           	callstack 25
  3078   001318                     
  3079                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 17:     uint8 lcd_data_counter = 0x00;
  3080   001318  0E00               	movlw	0
  3081   00131A  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3082                           
  3083                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 18:  if (((void*)0) == lcd)
  3084   00131C  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3085   00131E  A4D8               	btfss	status,2,c
  3086   001320  EF94  F009         	goto	u2431
  3087   001324  EF96  F009         	goto	u2430
  3088   001328                     u2431:
  3089   001328  EF9A  F009         	goto	l3290
  3090   00132C                     u2430:
  3091   00132C                     
  3092                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 19:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 20:      r
      +                          et = (Std_ReturnType)0x01u;
  3093   00132C  0E01               	movlw	1
  3094   00132E  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3095                           
  3096                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 21:  }
  3097   001330  EF30  F00A         	goto	l3330
  3098   001334                     l3290:
  3099                           
  3100                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 23:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 24:       
      +                            ret = gpio_pin_initialize(&(lcd->lcd_rs));
  3101   001334  C012  F008         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config_t
  3102   001338  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  3103   00133C  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3104   00133E                     
  3105                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 25:         if ((Std_ReturnType)0x00u == ret)
  3106   00133E  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3107   001340  A4D8               	btfss	status,2,c
  3108   001342  EFA5  F009         	goto	u2441
  3109   001346  EFA7  F009         	goto	u2440
  3110   00134A                     u2441:
  3111   00134A  EF30  F00A         	goto	l3330
  3112   00134E                     u2440:
  3113   00134E                     
  3114                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 26:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 27:
      +                                       ret = gpio_pin_initialize(&(lcd->lcd_en));
  3115   00134E  2812               	incf	lcd_4bit_initialize@lcd^0,w,c
  3116   001350  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3117   001352  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  3118   001356  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3119   001358                     
  3120                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 28:             if ((Std_ReturnType)0x00u == ret)
  3121   001358  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3122   00135A  A4D8               	btfss	status,2,c
  3123   00135C  EFB2  F009         	goto	u2451
  3124   001360  EFB4  F009         	goto	u2450
  3125   001364                     u2451:
  3126   001364  EF30  F00A         	goto	l3330
  3127   001368                     u2450:
  3128   001368                     
  3129                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 29:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c:
      +                           30:                 for (lcd_data_counter = 0x00; lcd_data_counter < 4; lcd_data_counte
      +                          r++)
  3130   001368  0E00               	movlw	0
  3131   00136A  6E14               	movwf	lcd_4bit_initialize@lcd_data_counter^0,c
  3132   00136C                     l3304:
  3133                           
  3134                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 31:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 32:                     ret = gpio_pin_initialize(&(lcd->lcd_data[lcd_data_counter]
      +                          ));
  3135   00136C  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
  3136   00136E  2414               	addwf	lcd_4bit_initialize@lcd_data_counter^0,w,c
  3137   001370  0F02               	addlw	2
  3138   001372  6E08               	movwf	gpio_pin_initialize@_pin_config_t^0,c
  3139   001374  EC69  F00F         	call	_gpio_pin_initialize	;wreg free
  3140   001378  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3141   00137A                     
  3142                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 33:                     if ((Std_ReturnType)0x01u ==
      +                           ret)
  3143   00137A  0415               	decf	lcd_4bit_initialize@ret^0,w,c
  3144   00137C  A4D8               	btfss	status,2,c
  3145   00137E  EFC3  F009         	goto	u2461
  3146   001382  EFC5  F009         	goto	u2460
  3147   001386                     u2461:
  3148   001386  EFC7  F009         	goto	l3310
  3149   00138A                     u2460:
  3150   00138A  EFD0  F009         	goto	l3314
  3151   00138E                     l3310:
  3152                           
  3153                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 37:                 }
  3154   00138E  2A14               	incf	lcd_4bit_initialize@lcd_data_counter^0,f,c
  3155   001390  0E03               	movlw	3
  3156   001392  6414               	cpfsgt	lcd_4bit_initialize@lcd_data_counter^0,c
  3157   001394  EFCE  F009         	goto	u2471
  3158   001398  EFD0  F009         	goto	u2470
  3159   00139C                     u2471:
  3160   00139C  EFB6  F009         	goto	l3304
  3161   0013A0                     u2470:
  3162   0013A0                     l3314:
  3163                           
  3164                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 38:                 if ((Std_ReturnType)0x00u == ret
      +                          )
  3165   0013A0  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3166   0013A2  A4D8               	btfss	status,2,c
  3167   0013A4  EFD6  F009         	goto	u2481
  3168   0013A8  EFD8  F009         	goto	u2480
  3169   0013AC                     u2481:
  3170   0013AC  EF30  F00A         	goto	l3330
  3171   0013B0                     u2480:
  3172   0013B0                     
  3173                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 39:                 {;ECU_Layer/Char_LCD/ecu_char_lc
      +                          d.c: 41:                     _delay((unsigned long)((20)*((8 *1000UL *1000UL)/4000.0)));
  3174   0013B0  0E34               	movlw	52
  3175   0013B2  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3176   0013B4  0EF2               	movlw	242
  3177   0013B6                     u4077:
  3178   0013B6  2EE8               	decfsz	wreg,f,c
  3179   0013B8  D7FE               	bra	u4077
  3180   0013BA  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3181   0013BC  D7FC               	bra	u4077
  3182   0013BE  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3183   0013C2  0E38               	movlw	56
  3184   0013C4  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3185   0013C6  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3186   0013CA                     
  3187                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 43:                     _delay((unsigned long)((5)*(
      +                          (8 *1000UL *1000UL)/4000.0)));
  3188   0013CA  0E0D               	movlw	13
  3189   0013CC  6E13               	movwf	??_lcd_4bit_initialize^0,c
  3190   0013CE  0EFC               	movlw	252
  3191   0013D0                     u4087:
  3192   0013D0  2EE8               	decfsz	wreg,f,c
  3193   0013D2  D7FE               	bra	u4087
  3194   0013D4  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
  3195   0013D6  D7FC               	bra	u4087
  3196   0013D8  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3197   0013DC  0E38               	movlw	56
  3198   0013DE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3199   0013E0  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3200   0013E4                     
  3201                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 45:                     _delay((unsigned long)((150)
      +                          *((8 *1000UL *1000UL)/4000000.0)));
  3202   0013E4  0E64               	movlw	100
  3203   0013E6                     u4097:
  3204   0013E6  2EE8               	decfsz	wreg,f,c
  3205   0013E8  D7FE               	bra	u4097
  3206   0013EA                     
  3207                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 46:                     ret = lcd_4bit_send_command(
      +                          lcd, 0x38);
  3208   0013EA  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3209   0013EE  0E38               	movlw	56
  3210   0013F0  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3211   0013F2  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3212   0013F6  6E15               	movwf	lcd_4bit_initialize@ret^0,c
  3213   0013F8                     
  3214                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 48:                     if ((Std_ReturnType)0x00u ==
      +                           ret)
  3215   0013F8  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3216   0013FA  A4D8               	btfss	status,2,c
  3217   0013FC  EF02  F00A         	goto	u2491
  3218   001400  EF04  F00A         	goto	u2490
  3219   001404                     u2491:
  3220   001404  EF30  F00A         	goto	l78
  3221   001408                     u2490:
  3222   001408                     
  3223                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 49:                     {;ECU_Layer/Char_LCD/ecu_cha
      +                          r_lcd.c: 50:                         ret |= lcd_4bit_send_command(lcd, 0x01);
  3224   001408  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3225   00140C  0E01               	movlw	1
  3226   00140E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3227   001410  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3228   001414  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3229                           
  3230                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 51:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x02);
  3231   001416  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3232   00141A  0E02               	movlw	2
  3233   00141C  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3234   00141E  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3235   001422  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3236                           
  3237                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 52:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x06);
  3238   001424  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3239   001428  0E06               	movlw	6
  3240   00142A  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3241   00142C  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3242   001430  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3243                           
  3244                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 53:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x0C);
  3245   001432  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3246   001436  0E0C               	movlw	12
  3247   001438  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3248   00143A  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3249   00143E  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3250                           
  3251                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 54:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x28);
  3252   001440  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3253   001444  0E28               	movlw	40
  3254   001446  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3255   001448  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3256   00144C  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3257                           
  3258                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 55:                         ret |= lcd_4bit_send_com
      +                          mand(lcd, 0x80);
  3259   00144E  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
  3260   001452  0E80               	movlw	128
  3261   001454  6E10               	movwf	lcd_4bit_send_command@command^0,c
  3262   001456  EC2C  F00D         	call	_lcd_4bit_send_command	;wreg free
  3263   00145A  1215               	iorwf	lcd_4bit_initialize@ret^0,f,c
  3264   00145C  EF30  F00A         	goto	l3330
  3265   001460                     l78:
  3266   001460                     l3330:
  3267                           
  3268                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 61:  return (ret);
  3269   001460  5015               	movf	lcd_4bit_initialize@ret^0,w,c
  3270   001462  0012               	return		;funcret
  3271   001464                     __end_of_lcd_4bit_initialize:
  3272                           	callstack 0
  3273                           
  3274 ;; *************** function _lcd_4bit_send_command *****************
  3275 ;; Defined at:
  3276 ;;		line 64 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  lcd             1   14[COMRAM] PTR const struct .
  3279 ;;		 -> lcd_1(6), 
  3280 ;;  command         1   15[COMRAM] unsigned char 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;  ret             1   16[COMRAM] unsigned char 
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      unsigned char 
  3285 ;; Registers used:
  3286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3292 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;Total ram usage:        3 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 2
  3299 ;; This function calls:
  3300 ;;		_gpio_pin_write_logic
  3301 ;;		_lcd_4bit_send_enable_signal
  3302 ;;		_lcd_send_4bits
  3303 ;; This function is called by:
  3304 ;;		_lcd_4bit_initialize
  3305 ;;		_lcd_4bit_set_cursor
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309                           	psect	text20
  3310   001A58                     __ptext20:
  3311                           	callstack 0
  3312   001A58                     _lcd_4bit_send_command:
  3313                           	callstack 25
  3314   001A58                     
  3315                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 67:  if (((void*)0) == lcd)
  3316   001A58  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
  3317   001A5A  A4D8               	btfss	status,2,c
  3318   001A5C  EF32  F00D         	goto	u2271
  3319   001A60  EF34  F00D         	goto	u2270
  3320   001A64                     u2271:
  3321   001A64  EF38  F00D         	goto	l3178
  3322   001A68                     u2270:
  3323   001A68                     
  3324                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 68:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 69:      r
      +                          et = (Std_ReturnType)0x01u;
  3325   001A68  0E01               	movlw	1
  3326   001A6A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3327                           
  3328                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 70:  }
  3329   001A6C  EF7A  F00D         	goto	l3196
  3330   001A70                     l3178:
  3331                           
  3332                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 72:  {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 73:       
      +                            ret = gpio_pin_write_logic(&(lcd->lcd_rs), GPIO_LOW);
  3333   001A70  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config_t
  3334   001A74  0E00               	movlw	0
  3335   001A76  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3336   001A78  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3337   001A7C  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3338   001A7E                     
  3339                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 74:         if ((Std_ReturnType)0x00u == ret)
  3340   001A7E  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3341   001A80  A4D8               	btfss	status,2,c
  3342   001A82  EF45  F00D         	goto	u2281
  3343   001A86  EF47  F00D         	goto	u2280
  3344   001A8A                     u2281:
  3345   001A8A  EF7A  F00D         	goto	l3196
  3346   001A8E                     u2280:
  3347   001A8E                     
  3348                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 75:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 76:
      +                                       ret = lcd_send_4bits(lcd, command >> 4);
  3349   001A8E  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3350   001A92  3810               	swapf	lcd_4bit_send_command@command^0,w,c
  3351   001A94  0B0F               	andlw	15
  3352   001A96  6E0A               	movwf	lcd_send_4bits@data_command^0,c
  3353   001A98  EC7C  F00D         	call	_lcd_send_4bits	;wreg free
  3354   001A9C  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3355   001A9E                     
  3356                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 77:             if ((Std_ReturnType)0x00u == ret)
  3357   001A9E  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3358   001AA0  A4D8               	btfss	status,2,c
  3359   001AA2  EF55  F00D         	goto	u2291
  3360   001AA6  EF57  F00D         	goto	u2290
  3361   001AAA                     u2291:
  3362   001AAA  EF5C  F00D         	goto	l3188
  3363   001AAE                     u2290:
  3364   001AAE                     
  3365                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 78:                 ret = lcd_4bit_send_enable_signa
      +                          l(lcd);
  3366   001AAE  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3367   001AB2  EC41  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3368   001AB6  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3369   001AB8                     l3188:
  3370                           
  3371                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 79:             if ((Std_ReturnType)0x00u == ret)
  3372   001AB8  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3373   001ABA  A4D8               	btfss	status,2,c
  3374   001ABC  EF62  F00D         	goto	u2301
  3375   001AC0  EF64  F00D         	goto	u2300
  3376   001AC4                     u2301:
  3377   001AC4  EF7A  F00D         	goto	l3196
  3378   001AC8                     u2300:
  3379   001AC8                     
  3380                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 80:             {;ECU_Layer/Char_LCD/ecu_char_lcd.c:
      +                           81:                 ret = lcd_send_4bits(lcd, command);
  3381   001AC8  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_send_4bits@lcd
  3382   001ACC  C010  F00A         	movff	lcd_4bit_send_command@command,lcd_send_4bits@data_command
  3383   001AD0  EC7C  F00D         	call	_lcd_send_4bits	;wreg free
  3384   001AD4  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3385   001AD6                     
  3386                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 82:                 if ((Std_ReturnType)0x00u == ret
      +                          )
  3387   001AD6  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3388   001AD8  A4D8               	btfss	status,2,c
  3389   001ADA  EF71  F00D         	goto	u2311
  3390   001ADE  EF73  F00D         	goto	u2310
  3391   001AE2                     u2311:
  3392   001AE2  EF7A  F00D         	goto	l90
  3393   001AE6                     u2310:
  3394   001AE6                     
  3395                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 83:                     ret = lcd_4bit_send_enable_s
      +                          ignal(lcd);
  3396   001AE6  C00F  F009         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_signal@lcd
  3397   001AEA  EC41  F00F         	call	_lcd_4bit_send_enable_signal	;wreg free
  3398   001AEE  6E11               	movwf	lcd_4bit_send_command@ret^0,c
  3399   001AF0  EF7A  F00D         	goto	l3196
  3400   001AF4                     l90:
  3401   001AF4                     l3196:
  3402                           
  3403                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 87:  return (ret);
  3404   001AF4  5011               	movf	lcd_4bit_send_command@ret^0,w,c
  3405   001AF6  0012               	return		;funcret
  3406   001AF8                     __end_of_lcd_4bit_send_command:
  3407                           	callstack 0
  3408                           
  3409 ;; *************** function _lcd_send_4bits *****************
  3410 ;; Defined at:
  3411 ;;		line 377 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  lcd             1    8[COMRAM] PTR const struct .
  3414 ;;		 -> lcd_1(6), 
  3415 ;;  data_command    1    9[COMRAM] unsigned char 
  3416 ;; Auto vars:     Size  Location     Type
  3417 ;;  counter         1   13[COMRAM] unsigned char 
  3418 ;;  ret             1   12[COMRAM] unsigned char 
  3419 ;; Return value:  Size  Location     Type
  3420 ;;                  1    wreg      unsigned char 
  3421 ;; Registers used:
  3422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3423 ;; Tracked objects:
  3424 ;;		On entry : 0/0
  3425 ;;		On exit  : 0/0
  3426 ;;		Unchanged: 0/0
  3427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3431 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3432 ;;Total ram usage:        6 bytes
  3433 ;; Hardware stack levels used: 1
  3434 ;; Hardware stack levels required when called: 1
  3435 ;; This function calls:
  3436 ;;		_gpio_pin_write_logic
  3437 ;; This function is called by:
  3438 ;;		_lcd_4bit_send_command
  3439 ;;		_lcd_4bit_send_char_data
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text21
  3444   001AF8                     __ptext21:
  3445                           	callstack 0
  3446   001AF8                     _lcd_send_4bits:
  3447                           	callstack 25
  3448   001AF8                     
  3449                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 380:     uint8 counter = 0x00;
  3450   001AF8  0E00               	movlw	0
  3451   001AFA  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3452                           
  3453                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 382:     if (((void*)0) == lcd)
  3454   001AFC  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3455   001AFE  A4D8               	btfss	status,2,c
  3456   001B00  EF84  F00D         	goto	u2081
  3457   001B04  EF86  F00D         	goto	u2080
  3458   001B08                     u2081:
  3459   001B08  EF8A  F00D         	goto	l3060
  3460   001B0C                     u2080:
  3461   001B0C                     
  3462                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 383:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 384:  
      +                                 ret = (Std_ReturnType)0x01u;
  3463   001B0C  0E01               	movlw	1
  3464   001B0E  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3465                           
  3466                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 385:     }
  3467   001B10  EFB5  F00D         	goto	l3076
  3468   001B14                     l3060:
  3469                           
  3470                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 387:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 388:  
      +                                 for (counter = 0x00; counter < 4; counter++)
  3471   001B14  0E00               	movlw	0
  3472   001B16  6E0E               	movwf	lcd_send_4bits@counter^0,c
  3473   001B18                     l3066:
  3474                           
  3475                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 389:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 39
      +                          0:             ret = gpio_pin_write_logic(&(lcd->lcd_data[counter]), (data_command >> co
      +                          unter) & (uint8)1);
  3476   001B18  5009               	movf	lcd_send_4bits@lcd^0,w,c
  3477   001B1A  240E               	addwf	lcd_send_4bits@counter^0,w,c
  3478   001B1C  0F02               	addlw	2
  3479   001B1E  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3480   001B20  C00E  F00B         	movff	lcd_send_4bits@counter,??_lcd_send_4bits
  3481   001B24  C00A  F00C         	movff	lcd_send_4bits@data_command,??_lcd_send_4bits+1
  3482   001B28  2A0B               	incf	??_lcd_send_4bits^0,f,c
  3483   001B2A  EF99  F00D         	goto	u2094
  3484   001B2E                     u2095:
  3485   001B2E  90D8               	bcf	status,0,c
  3486   001B30  320C               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  3487   001B32                     u2094:
  3488   001B32  2E0B               	decfsz	??_lcd_send_4bits^0,f,c
  3489   001B34  EF97  F00D         	goto	u2095
  3490   001B38  500C               	movf	(??_lcd_send_4bits+1)^0,w,c
  3491   001B3A  0B01               	andlw	1
  3492   001B3C  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3493   001B3E  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3494   001B42  6E0D               	movwf	lcd_send_4bits@ret^0,c
  3495   001B44                     
  3496                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 391:             if ((Std_ReturnType)0x01u == ret)
  3497   001B44  040D               	decf	lcd_send_4bits@ret^0,w,c
  3498   001B46  A4D8               	btfss	status,2,c
  3499   001B48  EFA8  F00D         	goto	u2101
  3500   001B4C  EFAA  F00D         	goto	u2100
  3501   001B50                     u2101:
  3502   001B50  EFAC  F00D         	goto	l3072
  3503   001B54                     u2100:
  3504   001B54  EFB5  F00D         	goto	l3076
  3505   001B58                     l3072:
  3506                           
  3507                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 395:         }
  3508   001B58  2A0E               	incf	lcd_send_4bits@counter^0,f,c
  3509   001B5A  0E03               	movlw	3
  3510   001B5C  640E               	cpfsgt	lcd_send_4bits@counter^0,c
  3511   001B5E  EFB3  F00D         	goto	u2111
  3512   001B62  EFB5  F00D         	goto	u2110
  3513   001B66                     u2111:
  3514   001B66  EF8C  F00D         	goto	l3066
  3515   001B6A                     u2110:
  3516   001B6A                     l3076:
  3517                           
  3518                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 397:     return (ret);
  3519   001B6A  500D               	movf	lcd_send_4bits@ret^0,w,c
  3520   001B6C  0012               	return		;funcret
  3521   001B6E                     __end_of_lcd_send_4bits:
  3522                           	callstack 0
  3523                           
  3524 ;; *************** function _lcd_4bit_send_enable_signal *****************
  3525 ;; Defined at:
  3526 ;;		line 435 in file "ECU_Layer/Char_LCD/ecu_char_lcd.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  lcd             1    8[COMRAM] PTR const struct .
  3529 ;;		 -> lcd_1(6), 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  ret             1    9[COMRAM] unsigned char 
  3532 ;; Return value:  Size  Location     Type
  3533 ;;                  1    wreg      unsigned char 
  3534 ;; Registers used:
  3535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3536 ;; Tracked objects:
  3537 ;;		On entry : 0/0
  3538 ;;		On exit  : 0/0
  3539 ;;		Unchanged: 0/0
  3540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3541 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;Total ram usage:        2 bytes
  3546 ;; Hardware stack levels used: 1
  3547 ;; Hardware stack levels required when called: 1
  3548 ;; This function calls:
  3549 ;;		_gpio_pin_write_logic
  3550 ;; This function is called by:
  3551 ;;		_lcd_4bit_send_command
  3552 ;;		_lcd_4bit_send_char_data
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text22
  3557   001E82                     __ptext22:
  3558                           	callstack 0
  3559   001E82                     _lcd_4bit_send_enable_signal:
  3560                           	callstack 25
  3561   001E82                     
  3562                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 439:     if (((void*)0) == lcd)
  3563   001E82  5009               	movf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3564   001E84  A4D8               	btfss	status,2,c
  3565   001E86  EF47  F00F         	goto	u2121
  3566   001E8A  EF49  F00F         	goto	u2120
  3567   001E8E                     u2121:
  3568   001E8E  EF4D  F00F         	goto	l3084
  3569   001E92                     u2120:
  3570   001E92                     
  3571                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 440:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 441:  
      +                                 ret = (Std_ReturnType)0x01u;
  3572   001E92  0E01               	movlw	1
  3573   001E94  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3574                           
  3575                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 442:     }
  3576   001E96  EF67  F00F         	goto	l3092
  3577   001E9A                     l3084:
  3578                           
  3579                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 444:     {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 445:  
      +                                 ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_HIGH);
  3580   001E9A  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3581   001E9C  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3582   001E9E  0E01               	movlw	1
  3583   001EA0  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3584   001EA2  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3585   001EA6  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3586   001EA8                     
  3587                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 446:         _delay((unsigned long)((5)*((8 *1000UL 
      +                          *1000UL)/4000000.0)));
  3588   001EA8  0E03               	movlw	3
  3589   001EAA                     u4107:
  3590   001EAA  2EE8               	decfsz	wreg,f,c
  3591   001EAC  D7FE               	bra	u4107
  3592   001EAE  0000               	nop	
  3593   001EB0                     
  3594                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 447:         if ((Std_ReturnType)0x00u == ret)
  3595   001EB0  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3596   001EB2  A4D8               	btfss	status,2,c
  3597   001EB4  EF5E  F00F         	goto	u2131
  3598   001EB8  EF60  F00F         	goto	u2130
  3599   001EBC                     u2131:
  3600   001EBC  EF67  F00F         	goto	l3092
  3601   001EC0                     u2130:
  3602   001EC0                     
  3603                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 448:         {;ECU_Layer/Char_LCD/ecu_char_lcd.c: 44
      +                          9:             ret = gpio_pin_write_logic(&(lcd->lcd_en), GPIO_LOW);
  3604   001EC0  2809               	incf	lcd_4bit_send_enable_signal@lcd^0,w,c
  3605   001EC2  6E01               	movwf	gpio_pin_write_logic@_pin_config_t^0,c
  3606   001EC4  0E00               	movlw	0
  3607   001EC6  6E02               	movwf	gpio_pin_write_logic@logic^0,c
  3608   001EC8  ECD9  F008         	call	_gpio_pin_write_logic	;wreg free
  3609   001ECC  6E0A               	movwf	lcd_4bit_send_enable_signal@ret^0,c
  3610   001ECE                     l3092:
  3611                           
  3612                           ;ECU_Layer/Char_LCD/ecu_char_lcd.c: 452:     return (ret);
  3613   001ECE  500A               	movf	lcd_4bit_send_enable_signal@ret^0,w,c
  3614   001ED0  0012               	return		;funcret
  3615   001ED2                     __end_of_lcd_4bit_send_enable_signal:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _gpio_pin_write_logic *****************
  3619 ;; Defined at:
  3620 ;;		line 95 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  3623 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  3624 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  3625 ;;		 -> keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), dc_motor_2(2), 
  3626 ;;		 -> dc_motor_1$dc_motor_pins(2), dc_motor_1(2), lcd_2$lcd_data(8), lcd_2(10), 
  3627 ;;		 -> lcd_1$lcd_data(4), lcd_1(6), relay_turn_off@pin_obj(1), relay_turn_on@pin_obj(1), 
  3628 ;;		 -> led_turn_off@pin(1), led_turn_on@pin(1), 
  3629 ;;  logic           1    1[COMRAM] enum E3076
  3630 ;; Auto vars:     Size  Location     Type
  3631 ;;  ret             1    7[COMRAM] unsigned char 
  3632 ;; Return value:  Size  Location     Type
  3633 ;;                  1    wreg      unsigned char 
  3634 ;; Registers used:
  3635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3636 ;; Tracked objects:
  3637 ;;		On entry : 0/0
  3638 ;;		On exit  : 0/0
  3639 ;;		Unchanged: 0/0
  3640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3641 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;Total ram usage:        8 bytes
  3646 ;; Hardware stack levels used: 1
  3647 ;; This function calls:
  3648 ;;		Nothing
  3649 ;; This function is called by:
  3650 ;;		_lcd_4bit_send_command
  3651 ;;		_lcd_8bit_send_command
  3652 ;;		_lcd_8bit_send_char_data
  3653 ;;		_lcd_send_4bits
  3654 ;;		_lcd_4bit_send_enable_signal
  3655 ;;		_lcd_8bit_send_enable_signal
  3656 ;;		_lcd_4bit_send_char_data
  3657 ;;		_dc_motor_move_forward
  3658 ;;		_dc_motor_move_backward
  3659 ;;		_dc_motor_stop
  3660 ;;		_keypad_get_value
  3661 ;;		_led_turn_on
  3662 ;;		_led_turn_off
  3663 ;;		_relay_turn_on
  3664 ;;		_relay_turn_off
  3665 ;;		_seven_segment_write_number
  3666 ;;		_seven_segment_test
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text23
  3671   0011B2                     __ptext23:
  3672                           	callstack 0
  3673   0011B2                     _gpio_pin_write_logic:
  3674                           	callstack 26
  3675   0011B2                     
  3676                           ;MCAL_Layer/GPIO/hal_gpio.c: 95: Std_ReturnType gpio_pin_write_logic(const pin_config_t 
      +                          *_pin_config_t, logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 96: {;MCAL_Layer/GPIO/hal_gpi
      +                          o.c: 97:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  3677   0011B2  0E00               	movlw	0
  3678   0011B4  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3679                           
  3680                           ;MCAL_Layer/GPIO/hal_gpio.c: 98:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  3681   0011B6  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3682   0011B8  B4D8               	btfsc	status,2,c
  3683   0011BA  EFE1  F008         	goto	u1981
  3684   0011BE  EFE3  F008         	goto	u1980
  3685   0011C2                     u1981:
  3686   0011C2  EFF3  F008         	goto	l3014
  3687   0011C6                     u1980:
  3688   0011C6  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3689   0011C8  6ED9               	movwf	fsr2l,c
  3690   0011CA  6ADA               	clrf	fsr2h,c
  3691   0011CC  30DF               	rrcf	223,w,c
  3692   0011CE  32E8               	rrcf	wreg,f,c
  3693   0011D0  32E8               	rrcf	wreg,f,c
  3694   0011D2  0B07               	andlw	7
  3695   0011D4  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3696   0011D6  0E07               	movlw	7
  3697   0011D8  6403               	cpfsgt	??_gpio_pin_write_logic^0,c
  3698   0011DA  EFF1  F008         	goto	u1991
  3699   0011DE  EFF3  F008         	goto	u1990
  3700   0011E2                     u1991:
  3701   0011E2  EF75  F009         	goto	l3026
  3702   0011E6                     u1990:
  3703   0011E6                     l3014:
  3704                           
  3705                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     {;MCAL_Layer/GPIO/hal_gpio.c: 100:         ret = (S
      +                          td_ReturnType)0x01u;
  3706   0011E6  0E01               	movlw	1
  3707   0011E8  6E08               	movwf	gpio_pin_write_logic@ret^0,c
  3708                           
  3709                           ;MCAL_Layer/GPIO/hal_gpio.c: 101:     }
  3710   0011EA  EF8A  F009         	goto	l3028
  3711   0011EE                     l3016:
  3712                           
  3713                           ;MCAL_Layer/GPIO/hal_gpio.c: 107:                 (*lat_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  3714   0011EE  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3715   0011F0  6ED9               	movwf	fsr2l,c
  3716   0011F2  6ADA               	clrf	fsr2h,c
  3717   0011F4  30DF               	rrcf	223,w,c
  3718   0011F6  32E8               	rrcf	wreg,f,c
  3719   0011F8  32E8               	rrcf	wreg,f,c
  3720   0011FA  0B07               	andlw	7
  3721   0011FC  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3722   0011FE  0E01               	movlw	1
  3723   001200  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3724   001202  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3725   001204  EF06  F009         	goto	u2004
  3726   001208                     u2005:
  3727   001208  90D8               	bcf	status,0,c
  3728   00120A  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3729   00120C                     u2004:
  3730   00120C  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3731   00120E  EF04  F009         	goto	u2005
  3732   001212  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3733   001214  6ED9               	movwf	fsr2l,c
  3734   001216  6ADA               	clrf	fsr2h,c
  3735   001218  50DF               	movf	223,w,c
  3736   00121A  0B07               	andlw	7
  3737   00121C  0D02               	mullw	2
  3738   00121E  50F3               	movf	243,w,c
  3739   001220  0F74               	addlw	low _lat_registers
  3740   001222  6ED9               	movwf	fsr2l,c
  3741   001224  6ADA               	clrf	fsr2h,c
  3742   001226  CFDE F005          	movff	postinc2,??_gpio_pin_write_logic+2
  3743   00122A  CFDD F006          	movff	postdec2,??_gpio_pin_write_logic+3
  3744   00122E  C005  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  3745   001232  C006  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  3746   001236  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3747   001238  12DF               	iorwf	indf2,f,c
  3748                           
  3749                           ;MCAL_Layer/GPIO/hal_gpio.c: 108:                 break;
  3750   00123A  EF8A  F009         	goto	l3028
  3751   00123E                     l3018:
  3752                           
  3753                           ;MCAL_Layer/GPIO/hal_gpio.c: 110:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3754   00123E  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3755   001240  6ED9               	movwf	fsr2l,c
  3756   001242  6ADA               	clrf	fsr2h,c
  3757   001244  30DF               	rrcf	223,w,c
  3758   001246  32E8               	rrcf	wreg,f,c
  3759   001248  32E8               	rrcf	wreg,f,c
  3760   00124A  0B07               	andlw	7
  3761   00124C  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3762   00124E  0E01               	movlw	1
  3763   001250  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3764   001252  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3765   001254  EF2E  F009         	goto	u2014
  3766   001258                     u2015:
  3767   001258  90D8               	bcf	status,0,c
  3768   00125A  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3769   00125C                     u2014:
  3770   00125C  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3771   00125E  EF2C  F009         	goto	u2015
  3772   001262  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3773   001264  0AFF               	xorlw	255
  3774   001266  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3775   001268  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3776   00126A  6ED9               	movwf	fsr2l,c
  3777   00126C  6ADA               	clrf	fsr2h,c
  3778   00126E  50DF               	movf	223,w,c
  3779   001270  0B07               	andlw	7
  3780   001272  0D02               	mullw	2
  3781   001274  50F3               	movf	243,w,c
  3782   001276  0F74               	addlw	low _lat_registers
  3783   001278  6ED9               	movwf	fsr2l,c
  3784   00127A  6ADA               	clrf	fsr2h,c
  3785   00127C  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3786   001280  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3787   001284  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3788   001288  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3789   00128C  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3790   00128E  16DF               	andwf	indf2,f,c
  3791                           
  3792                           ;MCAL_Layer/GPIO/hal_gpio.c: 111:                 break;
  3793   001290  EF8A  F009         	goto	l3028
  3794   001294                     l3020:
  3795                           
  3796                           ;MCAL_Layer/GPIO/hal_gpio.c: 113:                 (*lat_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  3797   001294  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3798   001296  6ED9               	movwf	fsr2l,c
  3799   001298  6ADA               	clrf	fsr2h,c
  3800   00129A  30DF               	rrcf	223,w,c
  3801   00129C  32E8               	rrcf	wreg,f,c
  3802   00129E  32E8               	rrcf	wreg,f,c
  3803   0012A0  0B07               	andlw	7
  3804   0012A2  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3805   0012A4  0E01               	movlw	1
  3806   0012A6  6E04               	movwf	(??_gpio_pin_write_logic+1)^0,c
  3807   0012A8  2A03               	incf	??_gpio_pin_write_logic^0,f,c
  3808   0012AA  EF59  F009         	goto	u2024
  3809   0012AE                     u2025:
  3810   0012AE  90D8               	bcf	status,0,c
  3811   0012B0  3604               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  3812   0012B2                     u2024:
  3813   0012B2  2E03               	decfsz	??_gpio_pin_write_logic^0,f,c
  3814   0012B4  EF57  F009         	goto	u2025
  3815   0012B8  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3816   0012BA  0AFF               	xorlw	255
  3817   0012BC  6E05               	movwf	(??_gpio_pin_write_logic+2)^0,c
  3818   0012BE  5001               	movf	gpio_pin_write_logic@_pin_config_t^0,w,c
  3819   0012C0  6ED9               	movwf	fsr2l,c
  3820   0012C2  6ADA               	clrf	fsr2h,c
  3821   0012C4  50DF               	movf	223,w,c
  3822   0012C6  0B07               	andlw	7
  3823   0012C8  0D02               	mullw	2
  3824   0012CA  50F3               	movf	243,w,c
  3825   0012CC  0F74               	addlw	low _lat_registers
  3826   0012CE  6ED9               	movwf	fsr2l,c
  3827   0012D0  6ADA               	clrf	fsr2h,c
  3828   0012D2  CFDE F006          	movff	postinc2,??_gpio_pin_write_logic+3
  3829   0012D6  CFDD F007          	movff	postdec2,??_gpio_pin_write_logic+4
  3830   0012DA  C006  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  3831   0012DE  C007  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  3832   0012E2  5005               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  3833   0012E4  16DF               	andwf	indf2,f,c
  3834   0012E6  EFF3  F008         	goto	l3014
  3835   0012EA                     l3026:
  3836   0012EA  5002               	movf	gpio_pin_write_logic@logic^0,w,c
  3837   0012EC  6E03               	movwf	??_gpio_pin_write_logic^0,c
  3838   0012EE  6A04               	clrf	(??_gpio_pin_write_logic+1)^0,c
  3839                           
  3840                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3841                           ; Switch size 1, requested type "simple"
  3842                           ; Number of cases is 1, Range of values is 0 to 0
  3843                           ; switch strategies available:
  3844                           ; Name         Instructions Cycles
  3845                           ; simple_byte            4     3 (average)
  3846                           ;	Chosen strategy is simple_byte
  3847   0012F0  5004               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  3848   0012F2  0A00               	xorlw	0	; case 0
  3849   0012F4  B4D8               	btfsc	status,2,c
  3850   0012F6  EF7F  F009         	goto	l4540
  3851   0012FA  EF4A  F009         	goto	l3020
  3852   0012FE                     l4540:
  3853                           
  3854                           ; Switch size 1, requested type "simple"
  3855                           ; Number of cases is 2, Range of values is 0 to 1
  3856                           ; switch strategies available:
  3857                           ; Name         Instructions Cycles
  3858                           ; simple_byte            7     4 (average)
  3859                           ;	Chosen strategy is simple_byte
  3860   0012FE  5003               	movf	??_gpio_pin_write_logic^0,w,c
  3861   001300  0A00               	xorlw	0	; case 0
  3862   001302  B4D8               	btfsc	status,2,c
  3863   001304  EF1F  F009         	goto	l3018
  3864   001308  0A01               	xorlw	1	; case 1
  3865   00130A  B4D8               	btfsc	status,2,c
  3866   00130C  EFF7  F008         	goto	l3016
  3867   001310  EF4A  F009         	goto	l3020
  3868   001314                     l3028:
  3869                           
  3870                           ;MCAL_Layer/GPIO/hal_gpio.c: 118:     return (ret);
  3871   001314  5008               	movf	gpio_pin_write_logic@ret^0,w,c
  3872   001316  0012               	return		;funcret
  3873   001318                     __end_of_gpio_pin_write_logic:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _gpio_pin_initialize *****************
  3877 ;; Defined at:
  3878 ;;		line 17 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  _pin_config_    1    7[COMRAM] PTR const struct .
  3881 ;;		 -> seg1$segment_pins(4), seg1(5), keypad1$keypad_rows_pins(4), keypad1(8), 
  3882 ;;		 -> dc_motor_2$dc_motor_pins(2), dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), 
  3883 ;;		 -> lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), lcd_1(6), 
  3884 ;;		 -> relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  3885 ;; Auto vars:     Size  Location     Type
  3886 ;;  ret             1    9[COMRAM] unsigned char 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      unsigned char 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:        3 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 1
  3903 ;; This function calls:
  3904 ;;		_gpio_pin_direction_initialize
  3905 ;; This function is called by:
  3906 ;;		_lcd_4bit_initialize
  3907 ;;		_lcd_8bit_initialize
  3908 ;;		_dc_motor_initialize
  3909 ;;		_keypad_initialize
  3910 ;;		_led_intitialize
  3911 ;;		_relay_initialize
  3912 ;;		_seven_segment_initialize
  3913 ;; This function uses a non-reentrant model
  3914 ;;
  3915                           
  3916                           	psect	text24
  3917   001ED2                     __ptext24:
  3918                           	callstack 0
  3919   001ED2                     _gpio_pin_initialize:
  3920                           	callstack 26
  3921   001ED2                     
  3922                           ;MCAL_Layer/GPIO/hal_gpio.c: 20:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  3923   001ED2  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  3924   001ED4  B4D8               	btfsc	status,2,c
  3925   001ED6  EF6F  F00F         	goto	u2251
  3926   001EDA  EF71  F00F         	goto	u2250
  3927   001EDE                     u2251:
  3928   001EDE  EF81  F00F         	goto	l3166
  3929   001EE2                     u2250:
  3930   001EE2  5008               	movf	gpio_pin_initialize@_pin_config_t^0,w,c
  3931   001EE4  6ED9               	movwf	fsr2l,c
  3932   001EE6  6ADA               	clrf	fsr2h,c
  3933   001EE8  30DF               	rrcf	223,w,c
  3934   001EEA  32E8               	rrcf	wreg,f,c
  3935   001EEC  32E8               	rrcf	wreg,f,c
  3936   001EEE  0B07               	andlw	7
  3937   001EF0  6E09               	movwf	??_gpio_pin_initialize^0,c
  3938   001EF2  0E07               	movlw	7
  3939   001EF4  6409               	cpfsgt	??_gpio_pin_initialize^0,c
  3940   001EF6  EF7F  F00F         	goto	u2261
  3941   001EFA  EF81  F00F         	goto	u2260
  3942   001EFE                     u2261:
  3943   001EFE  EF85  F00F         	goto	l3168
  3944   001F02                     u2260:
  3945   001F02                     l3166:
  3946                           
  3947                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     {;MCAL_Layer/GPIO/hal_gpio.c: 22:         ret = (St
      +                          d_ReturnType)0x01u;
  3948   001F02  0E01               	movlw	1
  3949   001F04  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  3950                           
  3951                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  3952   001F06  EF8A  F00F         	goto	l3170
  3953   001F0A                     l3168:
  3954                           
  3955                           ;MCAL_Layer/GPIO/hal_gpio.c: 25:     {;MCAL_Layer/GPIO/hal_gpio.c: 26:         ret = gpi
      +                          o_pin_direction_initialize(_pin_config_t);
  3956   001F0A  C008  F001         	movff	gpio_pin_initialize@_pin_config_t,gpio_pin_direction_initialize@_pin_config_t
  3957   001F0E  ECCE  F00A         	call	_gpio_pin_direction_initialize	;wreg free
  3958   001F12  6E0A               	movwf	gpio_pin_initialize@ret^0,c
  3959   001F14                     l3170:
  3960                           
  3961                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:     return (ret);
  3962   001F14  500A               	movf	gpio_pin_initialize@ret^0,w,c
  3963   001F16  0012               	return		;funcret
  3964   001F18                     __end_of_gpio_pin_initialize:
  3965                           	callstack 0
  3966                           
  3967 ;; *************** function _gpio_pin_direction_initialize *****************
  3968 ;; Defined at:
  3969 ;;		line 38 in file "MCAL_Layer/GPIO/hal_gpio.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  _pin_config_    1    0[COMRAM] PTR const struct .
  3972 ;;		 -> seg6_enable(1), seg5_enable(1), seg4_enable(1), seg3_enable(1), 
  3973 ;;		 -> seg2_enable(1), seg1_enable(1), seg1$segment_pins(4), seg1(5), 
  3974 ;;		 -> keypad1$keypad_cols_pins(4), keypad1$keypad_rows_pins(4), keypad1(8), dc_motor_2$dc_motor_pins(2), 
  3975 ;;		 -> dc_motor_2(2), dc_motor_1$dc_motor_pins(2), dc_motor_1(2), btn_high(3), 
  3976 ;;		 -> btn_low(3), lcd_2$lcd_data(8), lcd_2(10), lcd_1$lcd_data(4), 
  3977 ;;		 -> lcd_1(6), relay_initialize@pin_obj(1), led_intitialize@pin(1), 
  3978 ;; Auto vars:     Size  Location     Type
  3979 ;;  ret             1    6[COMRAM] unsigned char 
  3980 ;; Return value:  Size  Location     Type
  3981 ;;                  1    wreg      unsigned char 
  3982 ;; Registers used:
  3983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3984 ;; Tracked objects:
  3985 ;;		On entry : 0/0
  3986 ;;		On exit  : 0/0
  3987 ;;		Unchanged: 0/0
  3988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;Total ram usage:        7 bytes
  3994 ;; Hardware stack levels used: 1
  3995 ;; This function calls:
  3996 ;;		Nothing
  3997 ;; This function is called by:
  3998 ;;		_gpio_pin_initialize
  3999 ;;		_button_initialize
  4000 ;;		_keypad_initialize
  4001 ;;		_seven_segment_application_initialize
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text25
  4006   00159C                     __ptext25:
  4007                           	callstack 0
  4008   00159C                     _gpio_pin_direction_initialize:
  4009                           	callstack 26
  4010   00159C                     
  4011                           ;MCAL_Layer/GPIO/hal_gpio.c: 38: Std_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t *_pin_config_t);MCAL_Layer/GPIO/hal_gpio.c: 39: {;MCAL_Layer/GPIO/hal_gpio.c: 4
      +                          0:     Std_ReturnType ret = (Std_ReturnType)0x00u;
  4012   00159C  0E00               	movlw	0
  4013   00159E  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4014                           
  4015                           ;MCAL_Layer/GPIO/hal_gpio.c: 42:     if (((void*)0) == _pin_config_t || _pin_config_t->p
      +                          in > 8 - 1)
  4016   0015A0  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4017   0015A2  B4D8               	btfsc	status,2,c
  4018   0015A4  EFD6  F00A         	goto	u2031
  4019   0015A8  EFD8  F00A         	goto	u2030
  4020   0015AC                     u2031:
  4021   0015AC  EFE8  F00A         	goto	l3040
  4022   0015B0                     u2030:
  4023   0015B0  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4024   0015B2  6ED9               	movwf	fsr2l,c
  4025   0015B4  6ADA               	clrf	fsr2h,c
  4026   0015B6  30DF               	rrcf	223,w,c
  4027   0015B8  32E8               	rrcf	wreg,f,c
  4028   0015BA  32E8               	rrcf	wreg,f,c
  4029   0015BC  0B07               	andlw	7
  4030   0015BE  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4031   0015C0  0E07               	movlw	7
  4032   0015C2  6402               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  4033   0015C4  EFE6  F00A         	goto	u2041
  4034   0015C8  EFE8  F00A         	goto	u2040
  4035   0015CC                     u2041:
  4036   0015CC  EF3F  F00B         	goto	l3050
  4037   0015D0                     u2040:
  4038   0015D0                     l3040:
  4039                           
  4040                           ;MCAL_Layer/GPIO/hal_gpio.c: 43:     {;MCAL_Layer/GPIO/hal_gpio.c: 44:         ret = (St
      +                          d_ReturnType)0x01u;
  4041   0015D0  0E01               	movlw	1
  4042   0015D2  6E07               	movwf	gpio_pin_direction_initialize@ret^0,c
  4043                           
  4044                           ;MCAL_Layer/GPIO/hal_gpio.c: 45:     }
  4045   0015D4  EF55  F00B         	goto	l3052
  4046   0015D8                     l3042:
  4047                           
  4048                           ;MCAL_Layer/GPIO/hal_gpio.c: 51:                 (*tris_registers[_pin_config_t->port] |
      +                          = ((uint8)1 << _pin_config_t->pin));
  4049   0015D8  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4050   0015DA  6ED9               	movwf	fsr2l,c
  4051   0015DC  6ADA               	clrf	fsr2h,c
  4052   0015DE  30DF               	rrcf	223,w,c
  4053   0015E0  32E8               	rrcf	wreg,f,c
  4054   0015E2  32E8               	rrcf	wreg,f,c
  4055   0015E4  0B07               	andlw	7
  4056   0015E6  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4057   0015E8  0E01               	movlw	1
  4058   0015EA  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4059   0015EC  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4060   0015EE  EFFB  F00A         	goto	u2054
  4061   0015F2                     u2055:
  4062   0015F2  90D8               	bcf	status,0,c
  4063   0015F4  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4064   0015F6                     u2054:
  4065   0015F6  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4066   0015F8  EFF9  F00A         	goto	u2055
  4067   0015FC  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4068   0015FE  6ED9               	movwf	fsr2l,c
  4069   001600  6ADA               	clrf	fsr2h,c
  4070   001602  50DF               	movf	223,w,c
  4071   001604  0B07               	andlw	7
  4072   001606  0D02               	mullw	2
  4073   001608  50F3               	movf	243,w,c
  4074   00160A  0F6A               	addlw	low _tris_registers
  4075   00160C  6ED9               	movwf	fsr2l,c
  4076   00160E  6ADA               	clrf	fsr2h,c
  4077   001610  CFDE F004          	movff	postinc2,??_gpio_pin_direction_initialize+2
  4078   001614  CFDD F005          	movff	postdec2,??_gpio_pin_direction_initialize+3
  4079   001618  C004  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  4080   00161C  C005  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  4081   001620  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4082   001622  12DF               	iorwf	indf2,f,c
  4083                           
  4084                           ;MCAL_Layer/GPIO/hal_gpio.c: 52:                 break;
  4085   001624  EF55  F00B         	goto	l3052
  4086   001628                     l3044:
  4087                           
  4088                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:                 (*tris_registers[_pin_config_t->port] &
      +                          = ~((uint8)1 << _pin_config_t->pin));
  4089   001628  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4090   00162A  6ED9               	movwf	fsr2l,c
  4091   00162C  6ADA               	clrf	fsr2h,c
  4092   00162E  30DF               	rrcf	223,w,c
  4093   001630  32E8               	rrcf	wreg,f,c
  4094   001632  32E8               	rrcf	wreg,f,c
  4095   001634  0B07               	andlw	7
  4096   001636  6E02               	movwf	??_gpio_pin_direction_initialize^0,c
  4097   001638  0E01               	movlw	1
  4098   00163A  6E03               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  4099   00163C  2A02               	incf	??_gpio_pin_direction_initialize^0,f,c
  4100   00163E  EF23  F00B         	goto	u2064
  4101   001642                     u2065:
  4102   001642  90D8               	bcf	status,0,c
  4103   001644  3603               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  4104   001646                     u2064:
  4105   001646  2E02               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  4106   001648  EF21  F00B         	goto	u2065
  4107   00164C  5003               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  4108   00164E  0AFF               	xorlw	255
  4109   001650  6E04               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  4110   001652  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4111   001654  6ED9               	movwf	fsr2l,c
  4112   001656  6ADA               	clrf	fsr2h,c
  4113   001658  50DF               	movf	223,w,c
  4114   00165A  0B07               	andlw	7
  4115   00165C  0D02               	mullw	2
  4116   00165E  50F3               	movf	243,w,c
  4117   001660  0F6A               	addlw	low _tris_registers
  4118   001662  6ED9               	movwf	fsr2l,c
  4119   001664  6ADA               	clrf	fsr2h,c
  4120   001666  CFDE F005          	movff	postinc2,??_gpio_pin_direction_initialize+3
  4121   00166A  CFDD F006          	movff	postdec2,??_gpio_pin_direction_initialize+4
  4122   00166E  C005  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  4123   001672  C006  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  4124   001676  5004               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  4125   001678  16DF               	andwf	indf2,f,c
  4126                           
  4127                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:                 break;
  4128   00167A  EF55  F00B         	goto	l3052
  4129   00167E                     l3050:
  4130   00167E  5001               	movf	gpio_pin_direction_initialize@_pin_config_t^0,w,c
  4131   001680  6ED9               	movwf	fsr2l,c
  4132   001682  6ADA               	clrf	fsr2h,c
  4133   001684  BCDF               	btfsc	indf2,6,c
  4134   001686  EF47  F00B         	goto	u2071
  4135   00168A  EF4A  F00B         	goto	u2070
  4136   00168E                     u2071:
  4137   00168E  0E01               	movlw	1
  4138   001690  EF4B  F00B         	goto	u2076
  4139   001694                     u2070:
  4140   001694  0E00               	movlw	0
  4141   001696                     u2076:
  4142                           
  4143                           ; Switch size 1, requested type "simple"
  4144                           ; Number of cases is 2, Range of values is 0 to 1
  4145                           ; switch strategies available:
  4146                           ; Name         Instructions Cycles
  4147                           ; simple_byte            7     4 (average)
  4148                           ;	Chosen strategy is simple_byte
  4149   001696  0A00               	xorlw	0	; case 0
  4150   001698  B4D8               	btfsc	status,2,c
  4151   00169A  EF14  F00B         	goto	l3044
  4152   00169E  0A01               	xorlw	1	; case 1
  4153   0016A0  B4D8               	btfsc	status,2,c
  4154   0016A2  EFEC  F00A         	goto	l3042
  4155   0016A6  EFE8  F00A         	goto	l3040
  4156   0016AA                     l3052:
  4157                           
  4158                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:     return (ret);
  4159   0016AA  5007               	movf	gpio_pin_direction_initialize@ret^0,w,c
  4160   0016AC  0012               	return		;funcret
  4161   0016AE                     __end_of_gpio_pin_direction_initialize:
  4162                           	callstack 0
  4163                           
  4164                           	psect	rparam
  4165   000000                     tosu	equ	0xFFF
  4166                           tosh	equ	0xFFE
  4167                           tosl	equ	0xFFD
  4168                           stkptr	equ	0xFFC
  4169                           pclatu	equ	0xFFB
  4170                           pclath	equ	0xFFA
  4171                           pcl	equ	0xFF9
  4172                           tblptru	equ	0xFF8
  4173                           tblptrh	equ	0xFF7
  4174                           tblptrl	equ	0xFF6
  4175                           tablat	equ	0xFF5
  4176                           prodh	equ	0xFF4
  4177                           prodl	equ	0xFF3
  4178                           indf0	equ	0xFEF
  4179                           postinc0	equ	0xFEE
  4180                           postdec0	equ	0xFED
  4181                           preinc0	equ	0xFEC
  4182                           plusw0	equ	0xFEB
  4183                           fsr0h	equ	0xFEA
  4184                           fsr0l	equ	0xFE9
  4185                           wreg	equ	0xFE8
  4186                           indf1	equ	0xFE7
  4187                           postinc1	equ	0xFE6
  4188                           postdec1	equ	0xFE5
  4189                           preinc1	equ	0xFE4
  4190                           plusw1	equ	0xFE3
  4191                           fsr1h	equ	0xFE2
  4192                           fsr1l	equ	0xFE1
  4193                           bsr	equ	0xFE0
  4194                           indf2	equ	0xFDF
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           preinc2	equ	0xFDC
  4198                           plusw2	equ	0xFDB
  4199                           fsr2h	equ	0xFDA
  4200                           fsr2l	equ	0xFD9
  4201                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    16
    Data        84
    BSS         76
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      94
    BANK0           160      0     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    convert_short_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> snprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    funcs	PTR FTN()void [3] size(2) Largest target is 0

    gpio_pin_direction_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> btn_high(BANK0[3]), btn_low(BANK0[3]), dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), 
		 -> dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), keypad1(BANK0[8]), keypad1$keypad_cols_pins(BANK0[4]), 
		 -> keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), lcd_2(BANK0[10]), 
		 -> lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), seg1(BANK0[5]), 
		 -> seg1$segment_pins(BANK0[4]), seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), 
		 -> seg4_enable(COMRAM[1]), seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    gpio_pin_initialize@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_intitialize@pin(COMRAM[1]), relay_initialize@pin_obj(COMRAM[1]), 
		 -> seg1(BANK0[5]), seg1$segment_pins(BANK0[4]), 

    gpio_pin_write_logic@_pin_config_t	PTR const struct . size(1) Largest target is 10
		 -> dc_motor_1(COMRAM[2]), dc_motor_1$dc_motor_pins(COMRAM[2]), dc_motor_2(COMRAM[2]), dc_motor_2$dc_motor_pins(COMRAM[2]), 
		 -> keypad1(BANK0[8]), keypad1$keypad_rows_pins(BANK0[4]), lcd_1(BANK0[6]), lcd_1$lcd_data(BANK0[4]), 
		 -> lcd_2(BANK0[10]), lcd_2$lcd_data(BANK0[8]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), 
		 -> relay_turn_off@pin_obj(COMRAM[1]), relay_turn_on@pin_obj(COMRAM[1]), seg1(BANK0[5]), seg1$segment_pins(BANK0[4]), 
		 -> seg1_enable(COMRAM[1]), seg2_enable(COMRAM[1]), seg3_enable(COMRAM[1]), seg4_enable(COMRAM[1]), 
		 -> seg5_enable(COMRAM[1]), seg6_enable(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRhl[1]), LATC(BITBIGSFRhl[1]), LATD(BITBIGSFRhl[1]), 
		 -> LATE(BITBIGSFRhl[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_4bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    lcd_8bit_initialize@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_command@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    lcd_8bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_8bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    lcd_8bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 10
		 -> lcd_2(BANK0[10]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(BANK0[6]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRlh[1]), PORTC(BITBIGSFRlh[1]), PORTD(BITBIGSFRlh[1]), 
		 -> PORTE(BITBIGSFRlh[1]), 

    S1654$buffer	PTR unsigned char  size(2) Largest target is 0

    S1654$source	PTR const unsigned char  size(2) Largest target is 0

    snprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_snprintf(COMRAM[2]), 

    snprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    snprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    sp__memset	PTR void  size(1) Largest target is 6
		 -> lcd_counter_txt2(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRhl[1]), TRISB(BITBIGSFRhh[1]), TRISC(BITBIGSFRhh[1]), TRISD(BITBIGSFRhh[1]), 
		 -> TRISE(BITBIGSFRhh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> snprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> snprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> snprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_short_to_string
    _lcd_8bit_send_string_pos->_lcd_8bit_set_cursor
    _lcd_8bit_set_cursor->_lcd_8bit_send_command
    _lcd_8bit_send_string->_lcd_8bit_send_char_data
    _lcd_8bit_send_char_data->_lcd_8bit_send_enable_signal
    _convert_short_to_string->_snprintf
    _snprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _application_init->_ecu_layer_initialize
    _ecu_layer_initialize->_lcd_4bit_initialize
    _lcd_8bit_initialize->_lcd_8bit_send_command
    _lcd_8bit_send_command->_lcd_8bit_send_enable_signal
    _lcd_8bit_send_enable_signal->_gpio_pin_write_logic
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write_logic
    _lcd_4bit_send_enable_signal->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_direction_initialize

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   86113
                                             54 COMRAM     1     1      0
                   _application_init
            _convert_short_to_string
              _lcd_8bit_send_command
           _lcd_8bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_8bit_send_string_pos                             5     1      4   27811
                                             20 COMRAM     5     1      4
               _lcd_8bit_send_string
                _lcd_8bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_set_cursor                                  4     1      3   14785
                                             16 COMRAM     4     1      3
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (2) _lcd_8bit_send_string                                 3     1      2   12520
                                             16 COMRAM     3     1      2
            _lcd_8bit_send_char_data
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_char_data                              6     4      2   12232
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (1) _convert_short_to_string                              4     1      3    4645
                                             50 COMRAM     4     1      3
                             _memset
                           _snprintf
 ---------------------------------------------------------------------------------
 (2) _snprintf                                            26    20      6    3600
                                             24 COMRAM    26    20      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2454
                                             20 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           13    10      3    2104
                                              8 COMRAM    12     9      3
                            ___lwdiv
                            ___lwmod
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     782
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     780
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _application_init                                     1     1      0   39575
                                             22 COMRAM     1     1      0
               _ecu_layer_initialize
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_initialize                                 1     1      0   39551
                                             21 COMRAM     1     1      0
                _lcd_4bit_initialize
                _lcd_8bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_initialize                                  4     3      1   16477
                                             16 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_8bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_8bit_send_command                                6     4      2   14056
                                             10 COMRAM     6     4      2
               _gpio_pin_write_logic
        _lcd_8bit_send_enable_signal
 ---------------------------------------------------------------------------------
 (4) _lcd_8bit_send_enable_signal                          2     1      1    5939
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   23027
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   20584
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bits                                       6     4      2    6507
                                              8 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_signal                          2     1      1    6113
                                              8 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5695
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  3     2      1    1866
                                              7 COMRAM     3     2      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        7     6      1     863
                                              0 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _application_init
     _ecu_layer_initialize
       _lcd_4bit_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_signal
             _gpio_pin_write_logic
           _lcd_send_4bits
             _gpio_pin_write_logic
       _lcd_8bit_initialize
         _gpio_pin_initialize
         _lcd_8bit_send_command
           _gpio_pin_write_logic
           _lcd_8bit_send_enable_signal
             _gpio_pin_write_logic
   _convert_short_to_string
     _memset
     _snprintf
       _vfprintf
         _vfpfcnvrt
           ___lwdiv
           ___lwmod
           _fputc
             _putch
   _lcd_8bit_send_command
   _lcd_8bit_send_string_pos
     _lcd_8bit_send_string
       _lcd_8bit_send_char_data
         _gpio_pin_write_logic
         _lcd_8bit_send_enable_signal
     _lcd_8bit_set_cursor
       _lcd_8bit_send_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      41        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      79       5       75.6%
BITBIGSFRhh         69      0       0      36        0.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      5E       1       98.9%
BITBIGSFRll         20      0       0      39        0.0%
BITBIGSFRlh          4      0       0      38        0.0%
BITBIGSFRhl          4      0       0      37        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      D7      40        0.0%
DATA                 0      0      D7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Jul 05 07:58:31 2024

                                ?_lcd_send_4bits 0009                                               l90 1AF4  
                                             l85 1462                                               l94 1AF6  
                                             l78 1460                  button_read_state@btn_high_valid 003A  
                                            l200 1B6C                                              l224 1F98  
                                            l144 159A                                              l154 1900  
                                            l219 1ED0                                              l420 1FF0  
                                            l164 1852                                              l237 19AC  
                                            l247 1CAC                                              l249 1CAE  
                                            l179 1D72                                              l187 1E2C  
                                            l465 1F16                                              l477 16AC  
                                            l496 1316                                              l756 200E  
                                            l749 1C46              __end_of_lcd_4bit_send_enable_signal 1ED2  
                    _lcd_4bit_send_enable_signal 1E82                        ?_lcd_8bit_send_string_pos 0015  
                                            wreg 0FE8                            relay_initialize@F3150 0043  
                    __end_of_lcd_8bit_set_cursor 19AE                     __end_of_lcd_8bit_send_string 1D74  
                                           l3010 11B2                                             l1250 1BD8  
                                           l3020 1294                                             l3012 11C6  
                                           l3100 1F72                                             l1260 1D0A  
                                           l3014 11E6                                             l3102 1F80  
                                           l3110 1B6E                                             l3040 15D0  
                                           l3016 11EE                                             l3104 1F88  
                                           l3200 1854                                             l3120 1BA6  
                                           l3112 1B76                                             l1520 11B0  
                                           l1257 1BE0                                             l3042 15D8  
                                           l3050 167E                                             l3018 123E  
                                           l3026 12EA                                             l3106 1F96  
                                           l3202 1868                                             l3130 1BD2  
                                           l3122 1BAC                                             l3114 1B88  
                                           l1267 1D12                                             l3044 1628  
                                           l3052 16AA                                             l3036 159C  
                                           l3028 1314                                             l3060 1B14  
                                           l3220 18D2                                             l3204 1870  
                                           l3124 1BC2                                             l3116 1B90  
                                           l3140 1CE0                                             l3132 1CB0  
                                           l1541 1A56                                             l3038 15B0  
                                           l3310 138E                                             l3222 18D4  
                                           l3214 1892                                             l3206 187E  
                                           l1462 1FC8                                             l3126 1BCA  
                                           l3118 1B98                                             l3142 1CF6  
                                           l3134 1CC2                                             l3150 19BE  
                                           l1526 1E78                                             l1519 1146  
                                           l1527 1E80                                             l3080 1E82  
                                           l3072 1B58                                             l3056 1AF8  
                                           l3320 13CA                                             l3312 1390  
                                           l3304 136C                                             l3224 18E4  
                                           l3216 18BE                                             l3208 188E  
                                           l3128 1BCC                                             l3144 1CFE  
                                           l3136 1CCA                                             l1552 2010  
                                           l3152 19CE                                             l3240 1058  
                                           l3232 1016                                             l1472 17A4  
                                           l3400 1824                                             l3170 1F14  
                                           l3162 1ED2                                             l3090 1EC0  
                                           l3082 1E92                                             l3074 1B5A  
                                           l3066 1B18                                             l3058 1B0C  
                                           l3322 13E4                                             l3314 13A0  
                                           l3306 137A                                             l3330 1460  
                                           l3226 18F4                                             l3146 1D04  
                                           l3138 1CD2                                             l3154 19D8  
                                           l3250 10AA                                             l3242 105C  
                                           l3234 101E                                             l3402 1826  
                                           l3164 1EE2                                             l3092 1ECE  
                                           l3084 1E9A                                             l3068 1B44  
                                           l3076 1B6A                                             l3180 1A7E  
                                           l3324 13EA                                             l3316 13B0  
                                           l3228 18FE                                             l3340 148A  
                                           l3156 19F4                                             l3148 19AE  
                                           l3260 1104                                             l3252 10AE  
                                           l3244 1066                                             l3236 1042  
                                           l3412 1E2E                                             l3404 1836  
                                           l1477 178A                                             l3166 1F02  
                                           l3086 1EA8                                             l3190 1AC8  
                                           l3182 1A8E                                             l3174 1A58  
                                           l3326 13F8                                             l3318 13BE  
                                           l3342 149A                                             l3334 1464  
                                           l3510 1FA2                                             l3158 1A26  
                                           l3262 1118                                             l3254 10D2  
                                           l3270 1152                                             l3246 1084  
                                           l3238 104A                                             l3414 1E32  
                                           l3406 1846                                             l3502 1D5A  
                                           l3168 1F0A                                             l3088 1EB0  
                                           l3192 1AD6                                             l3184 1A9E  
                                           l3176 1A68                                             l3328 1408  
                                           l3096 1F5A                                             l3360 14DC  
                                           l3352 14B8                                             l3344 14A4  
                                           l3336 1478                                             l3512 1FAC  
                                           l3280 11A0                                             l3264 1132  
                                           l3256 10EE                                             l3248 109C  
                                           l3272 116C                                             l3416 1E40  
                                           l3520 16CA                                             l3408 1850  
                                           l3504 1D70                                             l3194 1AE6  
                                           l3186 1AAE                                             l3178 1A70  
                                           l3290 1334                                             l3098 1F6A  
                                           l3370 1526                                             l3354 14C6  
                                           l3346 14B4                                             l3362 14EC  
                                           l3338 1480                                             l3514 1FAE  
                                           l3282 11A8                                             l3274 1174  
                                           l3266 1134                                             l3258 10F2  
                                           l3418 1E5A                                             l3530 1708  
                                           l3188 1AB8                                             l3196 1AF4  
                                           l3292 133E                                             l3372 1534  
                                           l3364 14FA                                             l3508 1F9A  
                                           l3540 177A                                             l3532 1718  
                                           l3524 16D2                                             l3516 16AE  
                                           l3380 17A6                                             l4420 1BE2  
                                           l3294 134E                                             l3286 1318  
                                           l3374 1544                                             l3366 1506  
                                           l3358 14DA                                             l3550 1FCA  
                                           l3278 1180                                             l3542 1792  
                                           l3534 1730                                             l3526 16F0  
                                           l3518 16C0                                             l3382 17BA  
                                           l3470 192C                                             l3462 1902  
                                           l4430 1C1A                                             l4422 1BE8  
                                           l3296 1358                                             l3288 132C  
                                           l3368 1520                                             l3376 1598  
                                           l3552 1FD4                                             l3536 1742  
                                           l3544 179C                                             l3528 16FC  
                                           l3384 17C2                                             l3472 1934  
                                           l3464 1912                                             l4432 1C2A  
                                           l3298 1368                                             l3554 1FE4  
                                           l3538 1750                                             l3394 17E4  
                                           l3386 17D0                                             l3490 1D14  
                                           l3474 1948                                             l3466 191A  
                                           l4434 1C3E                                             l4426 1BFC  
                                           l4540 12FE                                             l3556 1FEE  
                                           l3548 1FCA                                             l3396 1810  
                                           l3388 17E0                                             l3492 1D28  
                                           l3476 195C                                             l3484 1984  
                                           l3468 191C                                             l3660 1DD2  
                                           l4428 1C0E                                             l3494 1D30  
                                           l3478 1970                                             l3486 19AA  
                                           l3670 1E1C                                             l3662 1DE2  
                                           l3680 1C66                                             l3496 1D44  
                                           l3672 1E2A                                             l3664 1DF2  
                                           l3682 1C7E                                             l3498 1D46  
                                           l3666 1DFA                                             l3940 200C  
                                           l3676 1C4A                                             l3668 1E0C  
                                           l3678 1C5E                                             l3936 2006  
                                           l3938 2006                                             STR_1 1011  
                                           STR_2 1011                                             u2004 120C  
                                           u2100 1B54                                             u2005 1208  
                                           u2101 1B50                                             u2030 15B0  
                                           u2014 125C                                             u2110 1B6A  
                                           u2031 15AC                                             u2015 1258  
                                           u2111 1B66                                             u2040 15D0  
                                           u2024 12B2                                             u2120 1E92  
                                           u2200 1CF6                                             u2041 15CC  
                                           u2025 12AE                                             u2121 1E8E  
                                           u2201 1CF2                                             u2130 1EC0  
                                           u2210 19BE                                             u3010 1DE2  
                                           u2131 1EBC                                             u2211 19BA  
                                           u3011 1DDE                                             u2300 1AC8  
                                           u2140 1F6A                                             u2220 19CE  
                                           u3020 1DF2                                             u2301 1AC4  
                                           u2141 1F66                                             u2221 19CA  
                                           u3021 1DEE                                             _LATA 0F89  
                                           u2070 1694                                             u2054 15F6  
                                           u2310 1AE6                                             u2150 1B88  
                                           u2230 19F4                                             u3030 1E1C  
                                           _LATB 0F8A                                             u2071 168E  
                                           u2055 15F2                                             u2311 1AE2  
                                           u2151 1B84                                             u2231 19F0  
                                           u3031 1E18                                             _LATC 0F8B  
                                           u2064 1646                                             u2080 1B0C  
                                           u2320 1868                                             u2160 1BA6  
                                           u2240 1A26                                             u2400 1104  
                                           u3040 1C5E                                             _LATD 0F8C  
                                           u2065 1642                                             u2081 1B08  
                                           u2321 1864                                             u2161 1BA2  
                                           u2241 1A22                                             u2401 1100  
                                           u3041 1C5A                                             _LATE 0F8D  
                                           u2250 1EE2                                             u2330 188E  
                                           u2170 1BC2                                             u2410 1114  
                                           u3050 1CA8                                             u2251 1EDE  
                                           u2331 188A                                             u2171 1BBE  
                                           u2411 1110                                             u3051 1CA4  
                                           u2076 1696                                             u2260 1F02  
                                           u2500 1478                                             u2180 1CC2  
                                           u2420 1146                                             u2261 1EFE  
                                           u2501 1474                                             u2181 1CBE  
                                           u2421 1142                                             u2094 1B32  
                                           u2270 1A68                                             u2430 132C  
                                           u2350 18CE                                             u2510 149A  
                                           u2190 1CE0                                             u2095 1B2E  
                                           u2271 1A64                                             u2431 1328  
                                           u2351 18CA                                             u2511 1496  
                                           u2191 1CDC                                             u2280 1A8E  
                                           u2440 134E                                             u2360 18E4  
                                           u2344 18AC                                             u2520 14B4  
                                           u2600 1836                                             u2281 1A8A  
                                           u2441 134A                                             u2361 18E0  
                                           u2345 18A8                                             u2521 14B0  
                                           u2601 1832                                             u2290 1AAE  
                                           u2450 1368                                             u2370 18F4  
                                           u2530 14D6                                             u2610 1846  
                                           u4107 1EAA                                             u2291 1AAA  
                                           u2451 1364                                             u2371 18F0  
                                           u2531 14D2                                             u2611 1842  
                                           u2460 138A                                             u2540 14EC  
                                           u2380 1042                                             u2620 1E78  
                                           u2461 1386                                             u4037 14F2  
                                           u2541 14E8                                             u2381 103E  
                                           u2621 1E74                                             u2470 13A0  
                                           u2550 1544                                             u2390 1084  
                                           u2471 139C                                             u2551 1540  
                                           u4047 150C                                             u2391 1080  
                                           u2480 13B0                                             u2800 16F0  
                                           u2560 17BA                                             u2481 13AC  
                                           u4057 1522                                             u2801 16EC  
                                           u2561 17B6                                             u2490 1408  
                                           u2810 1742                                             u2570 17E0  
                                           u2730 1912                                             u2491 1404  
                                           u4067 1F82                                             u2811 173E  
                                           u2571 17DC                                             u2731 190E  
                                           u2820 1750                                             u2740 192C  
                                           u4077 13B6                                             u2821 174C  
                                           u2741 1928                                             u2830 177A  
                                           u2590 1820                                             u2750 1D28  
                                           u4087 13D0                                             u2831 1776  
                                           u2591 181C                                             u2751 1D24  
                                           u2840 1FE4                                             u2584 17FE  
                                           u2760 1D56                                             u4097 13E6  
                                           u2841 1FE0                                             u2585 17FA  
                                           u2761 1D52                                             u2770 1D70  
                                           u2771 1D6C                                             u1980 11C6  
                                           u2780 1FC8                                             u3900 1C0E  
                                           u1981 11C2                                             u2781 1FC4  
                                           u3901 1C0A                                             u1990 11E6  
                                           u2790 16C0                                             u1991 11E2  
                                           u2791 16BC                                             u3890 1BF8  
                                           u3891 1BF4                    ??_lcd_4bit_send_enable_signal 000A  
                                           _led1 005E                                             _led2 005D  
                                           _dbuf 00A1                                             _seg1 0096  
                                           _main 1BE2                                             _prec 00CF  
                                           _nout 00CB                                             fsr1h 0FE2  
                                           fsr2h 0FDA                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                                           prodl 0FF3                                             start 0000  
               gpio_pin_initialize@_pin_config_t 0008                    __end_of_lcd_8bit_send_command 1902  
                                   ___param_bank 0000                            _lcd_4bit_send_command 1A58  
                           _gpio_pin_write_logic 11B2                                            ?_main 0001  
                                __end_of___lwdiv 1BE2                                  __end_of___lwmod 1D14  
                            relay_turn_off@F3160 0041                                     vfpfcnvrt@cnt 000D  
                                   vfpfcnvrt@fmt 000A                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96  btn_high_magic_button@btn_high_last_valid_status 004A  
                       ?_convert_short_to_string 0033                            lcd_send_4bits@counter 000E  
                                          _lcd_1 0090                                            _lcd_2 007E  
                                          _flags 003C                                            _count 003D  
                                          _errno 00D1                                            _funcs 00C1  
                                          _fputc 19AE                                            _hours 0050  
                                          _value 004B                         ?_lcd_8bit_send_char_data 000B  
                                          _width 00CD                                            _putch 2010  
                                          tablat 0FF5                                    _snprintf$1691 0022  
                                          status 0FD8                   ?_gpio_pin_direction_initialize 0001  
                                __initialization 1D74                                     __end_of_main 1C4A  
                          ?_gpio_pin_write_logic 0001                           lcd_8bit_set_cursor@col 0013  
                         lcd_8bit_set_cursor@lcd 0011                           lcd_8bit_set_cursor@ret 0014  
                         lcd_8bit_set_cursor@row 0012                   lcd_8bit_send_char_data@counter 000F  
                                  _lat_registers 0074                                           ??_main 0037  
                                  __activetblptr 0003                                 led_turn_on@F3165 0046  
                        ecu_layer_initialize@ret 0016                                           ?_fputc 0001  
                                         ?_putch 0001                           ?_lcd_4bit_send_command 000F  
                                   vfprintf@cfmt 0018                                        ??___lwdiv 0005  
                                      ??___lwmod 0005                             _lcd_8bit_send_string 1D14  
                                         _memset 1F9A                                           clear_0 1DBA  
                                         clear_1 1DC6                                           _relay1 005C  
                                         _relay2 005B                                           isa$std 0001  
                                         _number 003E                      lcd_8bit_send_string_pos@col 0017  
                    lcd_8bit_send_string_pos@lcd 0015                      lcd_8bit_send_string_pos@ret 0019  
                    lcd_8bit_send_string_pos@row 0016                      lcd_8bit_send_string_pos@str 0018  
                                         fputc@c 0001                                     __pdataCOMRAM 004C  
                                   __mediumconst 0000                                           tblptrh 0FF7  
                                         tblptrl 0FF6                                           tblptru 0FF8  
                                         putch@c 0001                                 __end_of_vfprintf 1E82  
                               __end_of_snprintf 17A6                                       __accesstop 0060  
                        __end_of__initialization 1DCC                                    ___rparam_used 0001  
                               ??_lcd_send_4bits 000B                           ??_gpio_pin_write_logic 0003  
                                 __pcstackCOMRAM 0001                                 _application_init 2006  
                                   __pidataBANK0 1F18                                    __end_of_fputc 1A58  
                          ?_lcd_8bit_send_string 0011                                    __end_of_putch 2012  
                       lcd_4bit_send_command@lcd 000F                         lcd_4bit_send_command@ret 0011  
                   convert_short_to_string@value 0033                                          ??_fputc 0004  
                                     _dc_motor_1 0053                                       _dc_motor_2 0051  
                                        ??_putch 0001                                       __pbssBANK0 00A1  
                         lcd_8bit_initialize@lcd 0011                           lcd_8bit_initialize@ret 0014  
                              led_turn_off@F3170 0045              lcd_4bit_initialize@lcd_data_counter 0014  
            lcd_8bit_initialize@lcd_data_counter 0013                                          ?_memset 0001  
                                led_toggle@F3175 0044                                 _lcd_counter_txt2 00D3  
            __end_of_lcd_8bit_send_enable_signal 1F9A                      _lcd_8bit_send_enable_signal 1F5A  
                                     _btn_values 1001                   lcd_8bit_send_enable_signal@lcd 0009  
                 lcd_8bit_send_enable_signal@ret 000A                                   _tris_registers 006A  
                  ??_lcd_8bit_send_enable_signal 000A                                          __Hparam 0000  
                                        __Lparam 0000                           ??_lcd_8bit_send_string 0013  
                            _gpio_pin_initialize 1ED2                            _lcd_8bit_send_command 1854  
                                        ___lwdiv 1B6E                                          ___lwmod 1CB0  
                                      ?_vfprintf 0015                                     __psmallconst 1000  
                                      ?_snprintf 0019                                          __pcinit 1D74  
                           led_intitialize@F3160 0047                                          __ramtop 1000  
                       _lcd_8bit_send_string_pos 1DD2                                          __ptext0 1BE2  
                                        __ptext1 1DD2                                          __ptext2 1902  
                                        __ptext3 1D14                                          __ptext4 17A6  
                                        __ptext5 1C4A                                          __ptext6 16AE  
                                        __ptext7 1E2E                                          __ptext8 1016  
                                        __ptext9 19AE                                          _btn_low 009E  
                ??_gpio_pin_direction_initialize 0002                                          _counter 003F  
                                        _keypad1 0088                                          _seg_val 0040  
                                        _minutes 004F                                          _seconds 004E  
                                        _number2 004C                             ?_gpio_pin_initialize 0008  
                                        main@ret 0037                             end_of_initialization 1DCC  
                              lcd_send_4bits@lcd 0009                                lcd_send_4bits@ret 000D  
                                        fputc@fp 0003                                          memset@c 0002  
                                        memset@n 0004                                          memset@p 0006  
                        ??_lcd_4bit_send_command 0011                gpio_pin_write_logic@_pin_config_t 0001  
                              __end_of_vfpfcnvrt 11B2                                          postdec1 0FE5  
                                        postdec2 0FDD                                          postinc0 0FEE  
                                        postinc1 0FE6                                          postinc2 0FDE  
                               vfpfcnvrt@convarg 000F                                       ??_vfprintf 0018  
                                     ??_snprintf 001F                              _lcd_4bit_initialize 1318  
                          ??_gpio_pin_initialize 0009                         __end_of_application_init 2010  
                           ?_lcd_4bit_initialize 0012                               relay_turn_on@F3155 0042  
                         ?_lcd_8bit_send_command 000B                                      vfpfcnvrt@ap 000B  
                                    vfpfcnvrt@cp 0013                                      vfpfcnvrt@fp 0009  
                                  __pidataCOMRAM 1FF2                                 turn_on_leds@_POS 0048  
                                 __end_of_memset 1FCA                   button_read_state@btn_low_valid 0038  
                            start_initialization 1D74                     ?_lcd_4bit_send_enable_signal 0009  
                            _lcd_8bit_initialize 1464            __end_of_gpio_pin_direction_initialize 16AE  
                  _gpio_pin_direction_initialize 159C                            ??_lcd_4bit_initialize 0013  
                        _convert_short_to_string 1C4A                             ?_lcd_8bit_initialize 0011  
                        _lcd_8bit_send_char_data 17A6                                      vfprintf@fmt 0016  
                            application_init@ret 0017                                      __pdataBANK0 0060  
                                       ??_memset 0006                     __end_of_ecu_layer_initialize 1FF2  
                            _lcd_8bit_set_cursor 1902                                       memset@dest 0001  
                   lcd_4bit_send_command@command 0010                         lcd_8bit_send_command@lcd 000B  
                       lcd_8bit_send_command@ret 0010                                      __pbssCOMRAM 0038  
                btn_high_magic_button@led_status 0049                                      snprintf@cnt 0025  
                                    snprintf@fmt 001C                             ?_lcd_8bit_set_cursor 0011  
                          ??_lcd_8bit_initialize 0012                       ??_lcd_8bit_send_string_pos 0019  
                               ___lwdiv@dividend 0001                      lcd_8bit_send_char_data@data 000C  
                                       ?___lwdiv 0001                                         ?___lwmod 0001  
                     convert_short_to_string@ret 0036                       convert_short_to_string@str 0035  
                                _lcd_counter_txt 00C7                        gpio_pin_write_logic@logic 0002  
                                    __smallconst 1000                                 ___lwdiv@quotient 0005  
                      ??_convert_short_to_string 0036                            ??_lcd_8bit_set_cursor 0014  
                     lcd_send_4bits@data_command 000A                        ??_lcd_8bit_send_char_data 000D  
                  __end_of_lcd_4bit_send_command 1AF8                 gpio_pin_direction_initialize@ret 0007  
     gpio_pin_direction_initialize@_pin_config_t 0001                                        _vfpfcnvrt 1016  
                         gpio_pin_initialize@ret 000A                                      _seg1_enable 005A  
                                    _seg2_enable 0059                                      _seg3_enable 0058  
                                     vfpfcnvrt@c 0014                                      _seg4_enable 0057  
                        gpio_pin_write_logic@ret 0008                                ?_application_init 0001  
                                    _seg5_enable 0056                                        copy_data0 1D88  
                                      copy_data1 1DA8                                      _seg6_enable 0055  
                             ??_application_init 0017                             _ecu_layer_initialize 1FCA  
                        ??_lcd_8bit_send_command 000D                                         __Hrparam 0000  
                                     vfprintf@ap 0017                                         __Lrparam 0000  
                                     vfprintf@fp 0015                  __end_of_convert_short_to_string 1CB0  
                                     ?_vfpfcnvrt 0009                                       snprintf@ap 0024  
                __end_of_lcd_8bit_send_char_data 1854                      __end_of_gpio_pin_initialize 1F18  
                             __end_of_btn_values 1011                                  ___lwdiv@divisor 0003  
                     lcd_8bit_send_char_data@lcd 000B                                  ___lwdiv@counter 0007  
                     lcd_8bit_send_char_data@ret 0010                                         __ptext10 2010  
                                       __ptext11 1CB0                                         __ptext20 1A58  
                                       __ptext12 1B6E                                         __ptext21 1AF8  
                                       __ptext13 1F9A                                         __ptext22 1E82  
                                       __ptext14 2006                                         __ptext23 11B2  
                                       __ptext15 1FCA                                         __ptext24 1ED2  
                                       __ptext16 1464                                         __ptext25 159C  
                                       __ptext17 1854                                         __ptext18 1F5A  
                                       __ptext19 1318                                         _btn_high 009B  
                          ?_ecu_layer_initialize 0001                 __end_of_lcd_8bit_send_string_pos 1E2E  
                                       isa$xinst 0000                                         _vfprintf 1E2E  
                                       _snprintf 16AE                                   _lcd_send_4bits 1AF8  
                    __end_of_lcd_4bit_initialize 1464                     __end_of_gpio_pin_write_logic 1318  
                   ?_lcd_8bit_send_enable_signal 0009                                        snprintf@f 0027  
                                      snprintf@n 001A                                        snprintf@s 0019  
                 lcd_4bit_send_enable_signal@lcd 0009                                 ___lwmod@dividend 0001  
                 lcd_4bit_send_enable_signal@ret 000A                           __end_of_lcd_send_4bits 1B6E  
                                    ??_vfpfcnvrt 000C                                   _port_registers 0060  
                                ___lwmod@divisor 0003                                  ___lwmod@counter 0005  
                        lcd_8bit_send_string@lcd 0011                          lcd_8bit_send_string@ret 0013  
                        lcd_8bit_send_string@str 0012                           ??_ecu_layer_initialize 0016  
                    __end_of_lcd_8bit_initialize 159C                     lcd_8bit_send_command@command 000C  
                   lcd_8bit_send_command@counter 000F                           lcd_4bit_initialize@lcd 0012  
                         lcd_4bit_initialize@ret 0015  
